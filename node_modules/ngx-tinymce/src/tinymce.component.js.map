{"version":3,"file":"tinymce.component.js","sourceRoot":"","sources":["../../.ng_build/src/tinymce.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAwB,KAAK,EAAyB,uBAAuB,EAAE,iBAAiB,EAAE,WAAW,EAAiD,MAAM,eAAe,CAAC;AAClN,OAAO,EAAE,iBAAiB,EAAwB,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;;IA4C/C,0BACY,SAAyB,EACzB,EAAiB,EACjB,EAAqB;QAFrB,cAAS,GAAT,SAAS,CAAgB;QACzB,OAAE,GAAF,EAAE,CAAe;QACjB,OAAE,GAAF,EAAE,CAAmB;sBArBhB,KAAK;oBACf,IAAI;kBACN,cAAY,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAG;wBAC1C,QAAQ,CAAC,SAAS;yBACjB,QAAQ,CAAC,SAAS;KAkB/B;0BAXA,qCAAO;uBAAC,KAAgC;YACxC,EAAE,CAAC,CAAC,KAAK,YAAY,WAAW,CAAC;gBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC7B,IAAI;gBACA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;;;;IAStB,+BAAI,GAAZ;QAAA,iBAqCC;QApCG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAErE,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3E,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YAC1B,QAAQ,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;SAC1B,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;YACnC,KAAK,EAAE,UAAC,MAAW;gBACf,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvB,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE;oBACtB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;oBACjC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;iBAC9B,CAAC,CAAC;gBACH,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC1C,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACJ;YACD,sBAAsB,EAAE,UAAC,MAAW;gBAChC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,KAAK,CAAC;oBACrB,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,sBAAsB,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC3D,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;iBAC9C;gBAED,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;aAC1B;SACJ,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;YAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QACzD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB;IAEO,kCAAO,GAAf;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,MAAM,CAAE;SACX;QACD,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB;IAED,mCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;IAED,0CAAe,GAAf;QAAA,iBAYC;;QAVG,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,MAAM,CAAC;SACV;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACzD,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC3D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,mBAAmB,CAAC,GAAG,CAAC,QAAQ,IAAI,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAA,GAAG;YAC5G,KAAI,CAAC,IAAI,EAAE,CAAC;SACf,CAAC,CAAC;KACN;IAED,sCAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;IAED,sCAAW,GAAX;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,2FAA2F;;IAC3F,uCAAY;;IAAZ;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IAED,qCAAU,GAAV,UAAW,KAAa;;QAEpB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxC;KACJ;IAED,2CAAgB,GAAhB,UAAiB,EAAkB,IAAU,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE;IAClE,4CAAiB,GAAjB,UAAkB,EAAY,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE;IAE9D,2CAAgB,GAAhB,UAAiB,UAAmB;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC;QAC3B,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC5B;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SAC9B;KACJ;;gBAlJJ,SAAS,SAAC;;oBAEP,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,4NAKT;oBACD,MAAM,EAAE,CAAE,uCAAuC,CAAE;oBACnD,SAAS,EAAE,CAAC;4BACR,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,gBAAgB,EAAhB,CAAgB,CAAC;4BAC/C,KAAK,EAAE,IAAI;yBACd,CAAC;oBACF,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,mBAAmB,EAAE,KAAK;iBAC7B;;;;gBAtBQ,cAAc;gBADd,aAAa;gBAFuF,iBAAiB;;;2BAmCzH,KAAK;4BAIL,KAAK;;2BAvCV;;SA0Ba,gBAAgB","sourcesContent":["import { Component, forwardRef, OnChanges, OnDestroy, Input, OnInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, TemplateRef, Output, EventEmitter, SimpleChanges, Optional } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { ScriptService } from './script.service';\r\nimport { TinymceOptions } from './tinymce.options';\r\n\r\ndeclare const window: any;\r\ndeclare const tinymce: any;\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'tinymce',\r\n    template: `\r\n    <textarea id=\"{{id}}\" class=\"tinymce-selector\"></textarea>\r\n    <div class=\"loading\" *ngIf=\"load\">\r\n        <ng-container *ngIf=\"_loading; else _loadingTpl\">{{_loading}}</ng-container>\r\n    </div>\r\n    `,\r\n    styles: [ `:host .tinymce-selector{display:none}` ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => TinymceComponent),\r\n        multi: true\r\n    }],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false\r\n})\r\nexport class TinymceComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\r\n    private instance: any;\r\n    private value: string;\r\n    private inited = false;\r\n    load = true;\r\n    id = `_tinymce-${Math.random().toString(36).substring(2)}`;\r\n    onChange: any = Function.prototype;\r\n    onTouched: any = Function.prototype;\r\n\r\n    @Input() config: any;\r\n\r\n    _loading: string;\r\n    _loadingTpl: TemplateRef<any>;\r\n    @Input()\r\n    set loading(value: string | TemplateRef<any>) {\r\n        if (value instanceof TemplateRef)\r\n            this._loadingTpl = value;\r\n        else\r\n            this._loading = value;\r\n    }\r\n\r\n    constructor(\r\n        private defConfig: TinymceOptions,\r\n        private ss: ScriptService,\r\n        private cd: ChangeDetectorRef\r\n    ) {}\r\n\r\n    private init() {\r\n        if (!window.tinymce)\r\n            throw new Error('tinymce js文件加载失败');\r\n\r\n        if (this.instance) return;\r\n\r\n        if (this.defConfig.baseURL) tinymce.baseURL = this.defConfig.baseURL;\r\n\r\n        const userOptions = Object.assign({ }, this.defConfig.config, this.config);\r\n\r\n        const options = Object.assign({\r\n            selector: `#` + this.id\r\n        }, this.defConfig.config, this.config, {\r\n            setup: (editor: any) => {\r\n                this.instance = editor;\r\n                editor.on('change keyup', () => {\r\n                    this.value = editor.getContent();\r\n                    this.onChange(this.value);\r\n                    this.onTouched(this.value);\r\n                });\r\n                if (typeof userOptions.setup === 'function') {\r\n                    userOptions.setup(editor);\r\n                }\r\n            },\r\n            init_instance_callback: (editor: any) => {\r\n                if (editor && this.value)\r\n                    editor.setContent(this.value);\r\n                if (typeof userOptions.init_instance_callback === 'function') {\r\n                    userOptions.init_instance_callback(editor);\r\n                }\r\n\r\n                this.load = false;\r\n                this.cd.markForCheck();\r\n            }\r\n        });\r\n        if (userOptions.auto_focus) options.auto_focus = this.id;\r\n        tinymce.init(options);\r\n    }\r\n\r\n    private destroy() {\r\n        if (!this.instance) {\r\n            return ;\r\n        }\r\n        this.instance.off();\r\n        this.instance.remove('#' + this.id);\r\n        this.instance = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.inited = true;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // 已经存在对象无须进入懒加载模式\r\n        if (window.tinymce) {\r\n            this.init();\r\n            return;\r\n        }\r\n\r\n        const baseURL = this.defConfig && this.defConfig.baseURL;\r\n        const fileName = this.defConfig && this.defConfig.fileName;\r\n        this.ss.load((baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js')).getChangeEmitter().subscribe(res => {\r\n            this.init();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.inited && changes.config) {\r\n            this.destroy();\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    // reuse-tab: http://ng-alain.com/components/reuse-tab#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\r\n    _onReuseInit() {\r\n        this.destroy();\r\n        this.init();\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n        // value should be NOT NULL\r\n        this.value = value || '';\r\n        if (this.instance) {\r\n            this.instance.setContent(this.value);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\r\n    registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        if (!this.instance) return;\r\n        if (isDisabled) {\r\n            this.instance.disabled();\r\n        } else {\r\n            this.instance.setEnabled();\r\n        }\r\n    }\r\n}\r\n"]}