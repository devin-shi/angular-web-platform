{"version":3,"file":"acl.js","sources":["../../../../packages/acl/services/acl.service.ts","../../../../packages/acl/directives/acl.directive.ts","../../../../packages/acl/acl.config.ts","../../../../packages/acl/services/acl-guard.ts","../../../../packages/acl/acl.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { ACLType, ACLCanType } from './acl.type';\n\n/**\n * 访问控制服务\n */\n@Injectable()\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: (number | string)[] = [];\n  private full = false;\n  private aclChange: BehaviorSubject<ACLType | boolean> = new BehaviorSubject<\n    ACLType | boolean\n  >(null);\n\n  /** ACL变更通知 */\n  get change(): Observable<ACLType | boolean> {\n    return this.aclChange.asObservable();\n  }\n\n  /** 获取所有数据 */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  private parseACLType(val: string | string[] | ACLType): ACLType {\n    if (typeof val !== 'string' && !Array.isArray(val)) {\n      return <ACLType>val;\n    }\n    if (Array.isArray(val)) {\n      return <ACLType>{ role: <string[]>val };\n    }\n    return <ACLType>{\n      role: [val],\n    };\n  }\n\n  /**\n   * 设置当前用户角色或权限能力（会先清除所有）\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * 标识当前用户为全量，即不受限\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * 设置当前用户权限能力（会先清除所有）\n   */\n  setAbility(abilities: (number | string)[]) {\n    this.set(<ACLType>{ ability: abilities });\n  }\n\n  /**\n   * 设置当前用户角色（会先清除所有）\n   */\n  setRole(roles: string[]) {\n    this.set(<ACLType>{ role: roles });\n  }\n\n  /**\n   * 为当前用户增加角色或权限能力\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * 为当前用户附加角色\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户附加权限\n   */\n  attachAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除角色\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除权限\n   */\n  removeAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 当前用户是否有对应角色，其实 `number` 表示Ability\n   *\n   * - 当 `full: true` 或参数 `null` 时返回 `true`\n   * - 若使用 `ACLType` 参数，可以指定 `mode` 校验模式\n   */\n  can(roleOrAbility: ACLCanType): boolean {\n    if (this.full === true || !roleOrAbility) {\n      return true;\n    }\n\n    let t: ACLType = {};\n    if (typeof roleOrAbility === 'number') {\n      t = { ability: [roleOrAbility] };\n    } else if (\n      Array.isArray(roleOrAbility) &&\n      roleOrAbility.length > 0 &&\n      typeof roleOrAbility[0] === 'number'\n    ) {\n      t = { ability: roleOrAbility };\n    } else {\n      t = this.parseACLType(roleOrAbility);\n    }\n\n    if (t.role) {\n      if (t.mode === 'allOf') return t.role.every(v => this.roles.includes(v));\n      else return t.role.some(v => this.roles.includes(v));\n    }\n    if (t.ability) {\n      if (t.mode === 'allOf')\n        return (t.ability as any[]).every(v => this.abilities.includes(v));\n      else return (t.ability as any[]).some(v => this.abilities.includes(v));\n    }\n    return false;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      Array.isArray(value)\n    ) {\n      value = <ACLType>{ ability: Array.isArray(value) ? value : [value] };\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * 当前用户是否有对应权限点\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ACLService } from '../services/acl.service';\r\nimport { ACLCanType } from '../services/acl.type';\r\n\r\n@Directive({\r\n  selector: '[acl]',\r\n})\r\nexport class ACLDirective implements OnDestroy {\r\n  private _value: any;\r\n  private change$: Subscription;\r\n\r\n  @Input('acl')\r\n  set acl(value: ACLCanType) {\r\n    this.set(value);\r\n  }\r\n\r\n  @Input('acl-ability')\r\n  set ability(value: ACLCanType) {\r\n    this.set(this.srv.parseAbility(value));\r\n  }\r\n\r\n  private set(value: ACLCanType) {\r\n    const CLS = 'acl__hide';\r\n    const el = this.el.nativeElement;\r\n    if (this.srv.can(value)) {\r\n      this.renderer.removeClass(el, CLS);\r\n    } else {\r\n      this.renderer.addClass(el, CLS);\r\n    }\r\n    this._value = value;\r\n  }\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private srv: ACLService,\r\n  ) {\r\n    this.change$ = <any>this.srv.change.subscribe(() => this.set(this._value));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.change$.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DelonACLConfig {\r\n  /**\r\n   * 路由守卫失败后跳转，默认：`/403`\r\n   */\r\n  guard_url? = '/403';\r\n}\r\n","import {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  ActivatedRouteSnapshot,\r\n  Route,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ACLService } from './acl.service';\r\nimport { ACLCanType } from './acl.type';\r\nimport { DelonACLConfig } from '../acl.config';\r\n\r\n@Injectable()\r\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(\r\n    private srv: ACLService,\r\n    private router: Router,\r\n    private options: DelonACLConfig,\r\n  ) {}\r\n\r\n  private process(\r\n    guard: ACLCanType | Observable<ACLCanType>,\r\n  ): Observable<boolean> {\r\n    return (guard && guard instanceof Observable\r\n      ? guard\r\n      : of(\r\n          typeof guard !== 'undefined' && guard !== null\r\n            ? (guard as ACLCanType)\r\n            : null,\r\n        )\r\n    ).pipe(\r\n      map(v => this.srv.can(v)),\r\n      tap(v => {\r\n        if (v) return;\r\n        this.router.navigateByUrl(this.options.guard_url);\r\n      }),\r\n    );\r\n  }\r\n\r\n  // lazy loading\r\n  canLoad(route: Route): Observable<boolean> {\r\n    return this.process((route.data && route.data.guard) || null);\r\n  }\r\n  // all children route\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n    return this.canActivate(childRoute, state);\r\n  }\r\n  // route\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n    return this.process((route.data && route.data.guard) || null);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DelonACLConfig } from './acl.config';\r\nimport { ACLGuard } from './services/acl-guard';\r\n\r\n// region: import\r\nimport { ACLService } from './services/acl.service';\r\nconst SERVICES = [ACLService, ACLGuard];\r\n\r\n// components\r\n\r\nimport { ACLDirective } from './directives/acl.directive';\r\nconst COMPONENTS = [ACLDirective];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n})\r\nexport class DelonACLModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DelonACLModule,\r\n      providers: [DelonACLConfig, ...SERVICES],\r\n    };\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","router","Observable","of"],"mappings":";;;;;;;;;;;;AAAA;;;;;qBAU4B,EAAE;yBACa,EAAE;oBAC5B,KAAK;yBACoC,IAAIA,iBAAe,CAEzE,IAAI,CAAC;;IAGP,sBAAI,8BAAM;;;;;;QAAV;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;SACtC;;;OAAA;IAGD,sBAAI,4BAAI;;;;;;QAAR;YACE,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAC;SACH;;;OAAA;;;;;IAEO,iCAAY;;;;cAAC,GAAgC;QACnD,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAClD,yBAAgB,GAAG,EAAC;SACrB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,yBAAgB,EAAE,IAAI,oBAAY,GAAG,CAAA,EAAE,EAAC;SACzC;QACD,yBAAgB;YACd,IAAI,EAAE,CAAC,GAAG,CAAC;SACZ,EAAC;;;;;;;;;;IAMJ,wBAAG;;;;;IAAH,UAAI,KAAc;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;;;;;;;;;IAKD,4BAAO;;;;;IAAP,UAAQ,GAAY;QAClB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;;;;;;;;;IAKD,+BAAU;;;;;IAAV,UAAW,SAA8B;QACvC,IAAI,CAAC,GAAG,mBAAU,EAAE,OAAO,EAAE,SAAS,EAAE,EAAC,CAAC;KAC3C;;;;;;;;;IAKD,4BAAO;;;;;IAAP,UAAQ,KAAe;QACrB,IAAI,CAAC,GAAG,mBAAU,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,CAAC;KACpC;;;;;;;;;IAKD,wBAAG;;;;;IAAH,UAAI,KAAc;QAChB,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,CAAA,KAAA,IAAI,CAAC,KAAK,EAAC,IAAI,WAAI,KAAK,CAAC,IAAI,EAAE;SAChC;QACD,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,CAAA,KAAA,IAAI,CAAC,SAAS,EAAC,IAAI,WAAI,KAAK,CAAC,OAAO,EAAE;SACvC;;KACF;;;;;;;;;IAKD,+BAAU;;;;;IAAV,UAAW,KAAe;QACxB,KAAkB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAlB,IAAM,GAAG,cAAA;YACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;SACF;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;;;IAKD,kCAAa;;;;;IAAb,UAAc,SAA8B;QAC1C,KAAkB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;YAAtB,IAAM,GAAG,kBAAA;YACZ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1B;SACF;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;;;IAKD,+BAAU;;;;;IAAV,UAAW,KAAe;QACxB,KAAkB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAlB,IAAM,GAAG,cAAA;YACZ,qBAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aAC3B;SACF;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;;;IAKD,kCAAa;;;;;IAAb,UAAc,SAA8B;QAC1C,KAAkB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;YAAtB,IAAM,GAAG,kBAAA;YACZ,qBAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aAC/B;SACF;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;;;;;;;;;IAQD,wBAAG;;;;;;;;IAAH,UAAI,aAAyB;QAA7B,iBA4BC;QA3BC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;YACxC,OAAO,IAAI,CAAC;SACb;QAED,qBAAI,CAAC,GAAY,EAAE,CAAC;QACpB,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YACrC,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC;SAClC;aAAM,IACL,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;YAC5B,aAAa,CAAC,MAAM,GAAG,CAAC;YACxB,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,QAC9B,EAAE;YACA,CAAC,GAAG,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;SAChC;aAAM;YACL,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,CAAC,IAAI,EAAE;YACV,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO;gBAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;;gBACpE,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,CAAC,OAAO,EAAE;YACb,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO;gBACpB,OAAO,mBAAC,CAAC,CAAC,OAAgB,GAAE,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;;gBAChE,OAAO,mBAAC,CAAC,CAAC,OAAgB,GAAE,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SACxE;QACD,OAAO,KAAK,CAAC;KACd;;;;;;;IAGD,iCAAY;;;;;IAAZ,UAAa,KAAiB;QAC5B,IACE,OAAO,KAAK,KAAK,QAAQ;YACzB,OAAO,KAAK,KAAK,QAAQ;YACzB,KAAK,CAAC,OAAO,CAAC,KAAK,CACrB,EAAE;YACA,KAAK,qBAAY,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAAA,CAAC;SACtE;QACD,OAAO,KAAK,CAAC,IAAI,CAAC;QAClB,OAAO,KAAK,CAAC;KACd;;;;;;;;;IAKD,+BAAU;;;;;IAAV,UAAW,KAAiB;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3C;;gBAvLF,UAAU;;qBARX;;;;;;;ACAA;IAuCE,sBACU,IACA,UACA;QAHV,iBAMC;QALS,OAAE,GAAF,EAAE;QACF,aAAQ,GAAR,QAAQ;QACR,QAAG,GAAH,GAAG;QAEX,IAAI,CAAC,OAAO,qBAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,GAAA,CAAC,CAAA,CAAC;KAC5E;0BA1BG,6BAAG;;;;;kBAAC,KAAiB;YACvB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;;;0BAId,iCAAO;;;;;kBAAC,KAAiB;YAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;;;;IAGjC,0BAAG;;;;cAAC,KAAiB;QAC3B,qBAAM,GAAG,GAAG,WAAW,CAAC;QACxB,qBAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACjC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;IAWtB,kCAAW;;;IAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;;gBAtCF,SAAS,SAAC;oBACT,QAAQ,EAAE,OAAO;iBAClB;;;;gBAVC,UAAU;gBACV,SAAS;gBAIF,UAAU;;;wBAUhB,KAAK,SAAC,KAAK;4BAKX,KAAK,SAAC,aAAa;;uBAvBtB;;;;;;;ACAA;;;;;yBAOe,MAAM;;;gBALpB,UAAU;;yBAFX;;;;;;;ACAA;IAmBE,kBACU,KACAC,WACA;QAFA,QAAG,GAAH,GAAG;QACH,WAAM,GAANA,SAAM;QACN,YAAO,GAAP,OAAO;KACb;;;;;IAEI,0BAAO;;;;cACb,KAA0C;;QAE1C,OAAO,CAAC,KAAK,IAAI,KAAK,YAAYC,YAAU;cACxC,KAAK;cACLC,IAAE,CACA,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI;qCACzC,KAAmB;kBACpB,IAAI,CACT,EACH,IAAI,CACJ,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAA,CAAC,EACzB,GAAG,CAAC,UAAA,CAAC;YACH,IAAI,CAAC;gBAAE,OAAO;YACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACnD,CAAC,CACH,CAAC;;;;;;;IAIJ,0BAAO;;;;IAAP,UAAQ,KAAY;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,SAAM,KAAK,IAAI,CAAC,CAAC;KAC/D;;;;;;;IAED,mCAAgB;;;;;IAAhB,UACE,UAAkC,EAClC,KAA0B;QAE1B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC5C;;;;;;;IAED,8BAAW;;;;;IAAX,UACE,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,SAAM,KAAK,IAAI,CAAC,CAAC;KAC/D;;gBA5CF,UAAU;;;;gBAJF,UAAU;gBANjB,MAAM;gBAQC,cAAc;;mBAfvB;;;;;;;ACAA,AAOA,IAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAIxC,AACA,IAAM,UAAU,GAAG,CAAC,YAAY,CAAC,CAAC;;;;;;;IAQzB,sBAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,GAAG,cAAc,SAAK,QAAQ,CAAC;SACzC,CAAC;KACH;;gBAXF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAM,UAAU,QAAC;oBAC7B,OAAO,EAAM,UAAU,QAAC;iBACzB;;yBAlBD;;;;;;;;;;;;;;;;;;"}