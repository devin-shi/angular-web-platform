{"version":3,"file":"acl-guard.js","sourceRoot":"","sources":["../../../../../packages/acl/services/acl-guard.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAOL,MAAM,GACP,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,UAAU,EAAU,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,EAAE,EAAE,MAAM,oBAAoB,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;;IAI7C,kBACU,KACA,QACA;QAFA,QAAG,GAAH,GAAG;QACH,WAAM,GAAN,MAAM;QACN,YAAO,GAAP,OAAO;KACb;;;;;IAEI,0BAAO;;;;cACb,KAA0C;;QAE1C,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK,YAAY,UAAU;YAC1C,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,EAAE,CACA,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI;gBAC5C,CAAC,CAAC,mBAAC,KAAmB,EAAC;gBACvB,CAAC,CAAC,IAAI,CACT,CACJ,CAAC,IAAI,CACJ,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,EACzB,GAAG,CAAC,UAAA,CAAC;YACH,EAAE,CAAC,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;YACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACnD,CAAC,CACH,CAAC;;IAGJ,eAAe;;;;;IACf,0BAAO;;;;IAAP,UAAQ,KAAY;QAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,SAAM,CAAC,IAAI,IAAI,CAAC,CAAC;KAC/D;IACD,qBAAqB;;;;;;IACrB,mCAAgB;;;;;IAAhB,UACE,UAAkC,EAClC,KAA0B;QAE1B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC5C;IACD,QAAQ;;;;;;IACR,8BAAW;;;;;IAAX,UACE,KAA6B,EAC7B,KAA0B;QAE1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,SAAM,CAAC,IAAI,IAAI,CAAC,CAAC;KAC/D;;gBA5CF,UAAU;;;;gBAJF,UAAU;gBANjB,MAAM;gBAQC,cAAc;;mBAfvB;;SAkBa,QAAQ","sourcesContent":["import {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  ActivatedRouteSnapshot,\r\n  Route,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ACLService } from './acl.service';\r\nimport { ACLCanType } from './acl.type';\r\nimport { DelonACLConfig } from '../acl.config';\r\n\r\n@Injectable()\r\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(\r\n    private srv: ACLService,\r\n    private router: Router,\r\n    private options: DelonACLConfig,\r\n  ) {}\r\n\r\n  private process(\r\n    guard: ACLCanType | Observable<ACLCanType>,\r\n  ): Observable<boolean> {\r\n    return (guard && guard instanceof Observable\r\n      ? guard\r\n      : of(\r\n          typeof guard !== 'undefined' && guard !== null\r\n            ? (guard as ACLCanType)\r\n            : null,\r\n        )\r\n    ).pipe(\r\n      map(v => this.srv.can(v)),\r\n      tap(v => {\r\n        if (v) return;\r\n        this.router.navigateByUrl(this.options.guard_url);\r\n      }),\r\n    );\r\n  }\r\n\r\n  // lazy loading\r\n  canLoad(route: Route): Observable<boolean> {\r\n    return this.process((route.data && route.data.guard) || null);\r\n  }\r\n  // all children route\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n    return this.canActivate(childRoute, state);\r\n  }\r\n  // route\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n    return this.process((route.data && route.data.guard) || null);\r\n  }\r\n}\r\n"]}