{"version":3,"file":"acl.service.js","sourceRoot":"","sources":["../../../../../packages/acl/services/acl.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { ACLType, ACLCanType } from './acl.type';\n\n/**\n * 访问控制服务\n */\n@Injectable()\nexport class ACLService {\n  private roles: string[] = [];\n  private abilities: (number | string)[] = [];\n  private full = false;\n  private aclChange: BehaviorSubject<ACLType | boolean> = new BehaviorSubject<\n    ACLType | boolean\n  >(null);\n\n  /** ACL变更通知 */\n  get change(): Observable<ACLType | boolean> {\n    return this.aclChange.asObservable();\n  }\n\n  /** 获取所有数据 */\n  get data() {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities,\n    };\n  }\n\n  private parseACLType(val: string | string[] | ACLType): ACLType {\n    if (typeof val !== 'string' && !Array.isArray(val)) {\n      return <ACLType>val;\n    }\n    if (Array.isArray(val)) {\n      return <ACLType>{ role: <string[]>val };\n    }\n    return <ACLType>{\n      role: [val],\n    };\n  }\n\n  /**\n   * 设置当前用户角色或权限能力（会先清除所有）\n   */\n  set(value: ACLType) {\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * 标识当前用户为全量，即不受限\n   */\n  setFull(val: boolean) {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * 设置当前用户权限能力（会先清除所有）\n   */\n  setAbility(abilities: (number | string)[]) {\n    this.set(<ACLType>{ ability: abilities });\n  }\n\n  /**\n   * 设置当前用户角色（会先清除所有）\n   */\n  setRole(roles: string[]) {\n    this.set(<ACLType>{ role: roles });\n  }\n\n  /**\n   * 为当前用户增加角色或权限能力\n   */\n  add(value: ACLType) {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * 为当前用户附加角色\n   */\n  attachRole(roles: string[]) {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户附加权限\n   */\n  attachAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除角色\n   */\n  removeRole(roles: string[]) {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除权限\n   */\n  removeAbility(abilities: (number | string)[]) {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 当前用户是否有对应角色，其实 `number` 表示Ability\n   *\n   * - 当 `full: true` 或参数 `null` 时返回 `true`\n   * - 若使用 `ACLType` 参数，可以指定 `mode` 校验模式\n   */\n  can(roleOrAbility: ACLCanType): boolean {\n    if (this.full === true || !roleOrAbility) {\n      return true;\n    }\n\n    let t: ACLType = {};\n    if (typeof roleOrAbility === 'number') {\n      t = { ability: [roleOrAbility] };\n    } else if (\n      Array.isArray(roleOrAbility) &&\n      roleOrAbility.length > 0 &&\n      typeof roleOrAbility[0] === 'number'\n    ) {\n      t = { ability: roleOrAbility };\n    } else {\n      t = this.parseACLType(roleOrAbility);\n    }\n\n    if (t.role) {\n      if (t.mode === 'allOf') return t.role.every(v => this.roles.includes(v));\n      else return t.role.some(v => this.roles.includes(v));\n    }\n    if (t.ability) {\n      if (t.mode === 'allOf')\n        return (t.ability as any[]).every(v => this.abilities.includes(v));\n      else return (t.ability as any[]).some(v => this.abilities.includes(v));\n    }\n    return false;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      Array.isArray(value)\n    ) {\n      value = <ACLType>{ ability: Array.isArray(value) ? value : [value] };\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * 当前用户是否有对应权限点\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n"]}