{"version":3,"file":"util.umd.min.js","sources":["../../../../packages/util/src/other/other.ts","../../../../packages/util/src/lazy/lazy.service.ts","../../../../packages/util/src/validate/validate.ts","../../../../packages/util/src/validate/validators.ts","../../../../packages/util/util.module.ts","../../../../packages/util/src/string/string.ts","../../../../packages/util/src/time/time.ts","../../../../packages/util/src/other/check.ts"],"sourcesContent":["import * as deepExtend from 'deep-extend';\r\n\r\n/**\r\n * 类似 `_.get`，根据 `path` 获取安全值\r\n * jsperf: https://jsperf.com/es-deep-getttps://jsperf.com/es-deep-get\r\n *\r\n * @param obj 数据源，无效时直接返回 `defaultValue` 值\r\n * @param path 若 `null`、`[]`、未定义及未找到时返回 `defaultValue` 值\r\n * @param defaultValue 默认值\r\n */\r\nexport function deepGet(obj: any, path: string | string[], defaultValue?: any) {\r\n  if (!obj || path == null || path.length === 0) return defaultValue;\r\n  if (!Array.isArray(path)) {\r\n    path = ~path.indexOf('.') ? path.split('.') : [ path ];\r\n  }\r\n  if (path.length === 1) {\r\n    const checkObj = obj[path[0]];\r\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\r\n  }\r\n  return path.reduce((o, k) => o[k], obj) || defaultValue;\r\n}\r\n\r\nexport function deepCopy(obj: any) {\r\n  const result = deepExtend({ }, { __source: obj });\r\n  return result.__source;\r\n}\r\n\r\n/** 复制内容至剪贴板 */\r\nexport function copy(value: string): Promise<string> {\r\n  return new Promise<string>((resolve, reject): void => {\r\n    let copyTextArea = null as HTMLTextAreaElement;\r\n    try {\r\n      copyTextArea = document.createElement('textarea');\r\n      copyTextArea.style.height = '0px';\r\n      copyTextArea.style.opacity = '0';\r\n      copyTextArea.style.width = '0px';\r\n      document.body.appendChild(copyTextArea);\r\n      copyTextArea.value = value;\r\n      copyTextArea.select();\r\n      document.execCommand('copy');\r\n      resolve(value);\r\n    } finally {\r\n      if (copyTextArea && copyTextArea.parentNode) {\r\n        copyTextArea.parentNode.removeChild(copyTextArea);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { share, filter } from 'rxjs/operators';\r\n\r\nexport interface LazyResult {\r\n  path: string;\r\n  loaded: boolean;\r\n  status: 'ok' | 'error';\r\n}\r\n\r\n@Injectable()\r\nexport class LazyService {\r\n  private list: any = {};\r\n  private cached: any = {};\r\n  private _notify: BehaviorSubject<LazyResult[]> = new BehaviorSubject<\r\n    LazyResult[]\r\n  >([]);\r\n\r\n  constructor(@Inject(DOCUMENT) private doc: any) {}\r\n\r\n  get change(): Observable<LazyResult[]> {\r\n    return this._notify\r\n      .asObservable()\r\n      .pipe(share(), filter(ls => ls.length !== 0));\r\n  }\r\n\r\n  clear(): void {\r\n    this.list = {};\r\n    this.cached = {};\r\n  }\r\n\r\n  load(paths: string | string[]): Promise<LazyResult[]> {\r\n    if (!Array.isArray(paths)) paths = [paths];\r\n\r\n    const promises: Promise<LazyResult>[] = [];\r\n    paths.forEach(path => {\r\n      if (path.includes('.js')) promises.push(this.loadScript(path));\r\n      else promises.push(this.loadStyle(path));\r\n    });\r\n\r\n    return Promise.all(promises).then(res => {\r\n      this._notify.next(res);\r\n      return Promise.resolve(res);\r\n    });\r\n  }\r\n\r\n  loadScript(path: string): Promise<LazyResult> {\r\n    return new Promise(resolve => {\r\n      if (this.list[path] === true) {\r\n        resolve(this.cached[path]);\r\n        return;\r\n      }\r\n\r\n      this.list[path] = true;\r\n      const onSuccess = (item: any) => {\r\n        this.cached[path] = item;\r\n        resolve(item);\r\n      };\r\n\r\n      const node = this.doc.createElement('script');\r\n      node.type = 'text/javascript';\r\n      node.src = path;\r\n      node.charset = 'utf-8';\r\n      if ((<any>node).readyState) {\r\n        // IE\r\n        (<any>node).onreadystatechange = () => {\r\n          if (\r\n            (<any>node).readyState === 'loaded' ||\r\n            (<any>node).readyState === 'complete'\r\n          ) {\r\n            (<any>node).onreadystatechange = null;\r\n            onSuccess({\r\n              path: path,\r\n              loaded: true,\r\n              status: 'ok',\r\n            });\r\n          }\r\n        };\r\n      } else {\r\n        node.onload = () => {\r\n          onSuccess({\r\n            path: path,\r\n            loaded: true,\r\n            status: 'ok',\r\n          });\r\n        };\r\n      }\r\n      node.onerror = (error: any) =>\r\n        onSuccess({\r\n          path: path,\r\n          loaded: false,\r\n          status: 'error',\r\n        });\r\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\r\n    });\r\n  }\r\n\r\n  loadStyle(path: string, rel = 'stylesheet'): Promise<LazyResult> {\r\n    return new Promise(resolve => {\r\n      if (this.list[path] === true) {\r\n        resolve(this.cached[path]);\r\n        return;\r\n      }\r\n\r\n      this.list[path] = true;\r\n      const onSuccess = (item: any) => {\r\n        this.cached[path] = item;\r\n        resolve(item);\r\n      };\r\n\r\n      const node = this.doc.createElement('link');\r\n      node.rel = rel;\r\n      node.type = 'text/css';\r\n      node.href = path;\r\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\r\n      onSuccess({\r\n        path: path,\r\n        loaded: true,\r\n        status: 'ok',\r\n      });\r\n    });\r\n  }\r\n}\r\n","/** 是否为数字 */\r\nexport function isNum(value: string | number): boolean {\r\n  return /^((-?\\d+\\.\\d+)|(-?\\d+)|(-?\\.\\d+))$/.test(value.toString());\r\n}\r\n\r\n/** 是否为整数 */\r\nexport function isInt(value: string | number): boolean {\r\n  // tslint:disable-next-line:triple-equals\r\n  return isNum(value) && parseInt(value.toString(), 10) == value;\r\n}\r\n\r\n/** 是否为小数 */\r\nexport function isDecimal(value: string | number): boolean {\r\n  return isNum(value) && !isInt(value);\r\n}\r\n\r\n/** 是否为身份证 */\r\nexport function isIdCard(value: any): boolean {\r\n  return (\r\n    typeof value === 'string' && /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/i.test(value)\r\n  );\r\n}\r\n\r\n/** 是否为手机号 */\r\nexport function isMobile(value: any): boolean {\r\n  return (\r\n    typeof value === 'string' &&\r\n    /^(0|\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}$/.test(\r\n      value,\r\n    )\r\n  );\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { isNum, isInt, isDecimal, isIdCard, isMobile } from './validate';\r\n\r\n/** 一套日常验证器 */\r\n// tslint:disable-next-line:class-name\r\nexport class _Validators {\r\n  /** 是否为数字 */\r\n  static num(control: AbstractControl): ValidationErrors | null {\r\n    return isNum(control.value) ? null : { num: true };\r\n  }\r\n\r\n  /** 是否为整数 */\r\n  static int(control: AbstractControl): ValidationErrors | null {\r\n    return isInt(control.value) ? null : { int: true };\r\n  }\r\n\r\n  /** 是否为小数 */\r\n  static decimal(control: AbstractControl): ValidationErrors | null {\r\n    return isDecimal(control.value) ? null : { decimal: true };\r\n  }\r\n\r\n  /** 是否为身份证 */\r\n  static idCard(control: AbstractControl): ValidationErrors | null {\r\n    return isIdCard(control.value) ? null : { idCard: true };\r\n  }\r\n\r\n  /** 是否为手机号 */\r\n  static mobile(control: AbstractControl): ValidationErrors | null {\r\n    return isMobile(control.value) ? null : { mobile: true };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LazyService } from './src/lazy/lazy.service';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class DelonUtilModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonUtilModule,\n      providers: [LazyService],\n    };\n  }\n}\n","import { deepGet } from '../other/other';\n\n/**\n * 字符串格式化\n * ```\n * format('this is ${name}', { name: 'asdf' })\n * // output: this is asdf\n * format('this is ${user.name}', { user: { name: 'asdf' } }, true)\n * // output: this is asdf\n * ```\n */\nexport function format(str: string, obj: {}, needDeepGet = false): string {\n  return (str || '').replace(\n    /\\${([^}]+)}/g,\n    (work: string, key: string) =>\n      needDeepGet\n        ? deepGet(obj, key.split('.'), '')\n        : (obj || {})[key] || '',\n  );\n}\n\n/**\n * 转化成RMB元字符串\n * @param digits 当数字类型时，允许指定小数点后数字的个数，默认2位小数\n */\nexport function yuan(value: any, digits: number = 2): string {\n  if (typeof value === 'number') value = value.toFixed(digits);\n  return `&yen ${value}`;\n}\n","import * as parse from 'date-fns/parse';\nimport * as startOfWeek from 'date-fns/start_of_week';\nimport * as endOfWeek from 'date-fns/end_of_week';\nimport * as subWeeks from 'date-fns/sub_weeks';\nimport * as startOfMonth from 'date-fns/start_of_month';\nimport * as endOfMonth from 'date-fns/end_of_month';\nimport * as subMonths from 'date-fns/sub_months';\nimport * as startOfYear from 'date-fns/start_of_year';\nimport * as endOfYear from 'date-fns/end_of_year';\nimport * as subYears from 'date-fns/sub_years';\nimport * as addDays from 'date-fns/add_days';\n\n/**\n * 获取时间范围\n * @param type 类型，带 `-` 表示过去一个时间，若指定 `number` 表示天数\n * @param time 开始时间\n */\nexport function getTimeDistance(\n  type:\n    | 'today'\n    | '-today'\n    | 'week'\n    | '-week'\n    | 'month'\n    | '-month'\n    | 'year'\n    | '-year'\n    | number,\n  time?: Date | string | number,\n): [Date, Date] {\n  time = parse(time || new Date());\n\n  switch (type) {\n    case 'today':\n    case '-today':\n      return [time, time];\n    case 'week':\n      return [startOfWeek(time), endOfWeek(time)];\n    case '-week':\n      return [startOfWeek(subWeeks(time, 1)), endOfWeek(subWeeks(time, 1))];\n    case 'month':\n      return [startOfMonth(time), endOfMonth(time)];\n    case '-month':\n      return [startOfMonth(subMonths(time, 1)), endOfMonth(subMonths(time, 1))];\n    case 'year':\n      return [startOfYear(time), endOfYear(time)];\n    case '-year':\n      return [startOfYear(subYears(time, 1)), endOfYear(subYears(time, 1))];\n    default:\n      return type > 0\n        ? [time, addDays(time, type)]\n        : [addDays(time, type), time];\n  }\n}\n","export function isEmpty(element: HTMLElement): boolean {\r\n  const nodes = element.childNodes;\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes.item(i);\r\n    if (\r\n      node.nodeType === 1 &&\r\n      (node as HTMLElement).outerHTML.toString().trim().length !== 0\r\n    ) {\r\n      return false;\r\n    } else if (\r\n      node.nodeType === 3 &&\r\n      node.textContent.toString().trim().length !== 0\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"],"names":["obj","path","defaultValue","length","Array","isArray","indexOf","split","checkObj","reduce","o","k","doc","this","BehaviorSubject","Object","LazyService","_notify","asObservable","pipe","share","filter","ls","list","cached","paths","promises","forEach","includes","push","_this","loadScript","loadStyle","Promise","all","then","res","next","resolve","onSuccess","item","node","createElement","type","src","charset","readyState","onreadystatechange","loaded","status","onload","onerror","error","getElementsByTagName","appendChild","rel","href","Injectable","Inject","DOCUMENT","value","test","toString","isNum","parseInt","isInt","_Validators","control","num","int","isDecimal","decimal","isIdCard","idCard","isMobile","mobile","DelonUtilModule","ngModule","providers","NgModule","imports","CommonModule","str","needDeepGet","replace","work","key","deepGet","digits","toFixed","time","parse","Date","startOfWeek","endOfWeek","subWeeks","startOfMonth","endOfMonth","subMonths","startOfYear","endOfYear","subYears","addDays","element","nodes","childNodes","i","nodeType","outerHTML","trim","textContent","deepExtend","__source","reject","copyTextArea","document","style","height","opacity","width","body","select","execCommand","parentNode","removeChild"],"mappings":"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"}