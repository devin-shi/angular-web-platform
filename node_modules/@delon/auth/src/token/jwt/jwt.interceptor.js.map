{"version":3,"file":"jwt.interceptor.js","sourceRoot":"","sources":["../../../../../../packages/auth/token/jwt/jwt.interceptor.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,UAAU,EAAY,MAAM,eAAe,CAAC;AAKrD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;;IAGR,0CAAe;;;;;;;;IACjD,+BAAM;;;;IAAN,UAAO,OAAwB;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ;aACvB,GAAG,CAAC,gBAAgB,CAAC;aACrB,GAAG,CAAgB,aAAa,CAAC,CAAC;QACrC,MAAM,CAAC,CACL,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,KAAK,CAAC,KAAK;YAChB,CAAC,IAAI,CAAC,KAAK,cAAW,OAAO,CAAC,gBAAgB,CAAC,CAChD,CAAC;KACH;;;;;;IAED,+BAAM;;;;;IAAN,UAAO,GAAqB,EAAE,OAAwB;QACpD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;YACf,UAAU,EAAE;gBACV,aAAa,EAAE,YAAU,IAAI,CAAC,KAAK,CAAC,KAAO;aAC5C;SACF,CAAC,CAAC;KACJ;;gBAnBF,UAAU;;yBATX;EAUoC,eAAe;SAAtC,cAAc","sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest } from '@angular/common/http';\r\n\r\nimport { DelonAuthConfig } from '../../auth.config';\r\nimport { BaseInterceptor } from '../base.interceptor';\r\nimport { DA_SERVICE_TOKEN } from '../interface';\r\nimport { JWTTokenModel } from './jwt.model';\r\n\r\n@Injectable()\r\nexport class JWTInterceptor extends BaseInterceptor {\r\n  isAuth(options: DelonAuthConfig): boolean {\r\n    this.model = this.injector\r\n      .get(DA_SERVICE_TOKEN)\r\n      .get<JWTTokenModel>(JWTTokenModel);\r\n    return (\r\n      this.model &&\r\n      this.model.token &&\r\n      !this.model.isExpired(options.token_exp_offset)\r\n    );\r\n  }\r\n\r\n  setReq(req: HttpRequest<any>, options: DelonAuthConfig): HttpRequest<any> {\r\n    return req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.model.token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n"]}