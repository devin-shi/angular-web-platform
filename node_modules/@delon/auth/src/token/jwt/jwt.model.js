/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { urlBase64Decode } from './jwt.helper';
var JWTTokenModel = /** @class */ (function () {
    function JWTTokenModel() {
    }
    Object.defineProperty(JWTTokenModel.prototype, "payload", {
        /**
         * 获取载荷信息
         */
        get: /**
         * 获取载荷信息
         * @return {?}
         */
        function () {
            var /** @type {?} */ parts = this.token.split('.');
            if (parts.length !== 3)
                throw new Error('JWT must have 3 parts');
            var /** @type {?} */ decoded = urlBase64Decode(parts[1]);
            return JSON.parse(decoded);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 检查Token是否过期，`payload` 必须包含 `exp` 时有效
     *
     * @param offsetSeconds 偏移量
     */
    /**
     * 检查Token是否过期，`payload` 必须包含 `exp` 时有效
     *
     * @param {?=} offsetSeconds 偏移量
     * @return {?}
     */
    JWTTokenModel.prototype.isExpired = /**
     * 检查Token是否过期，`payload` 必须包含 `exp` 时有效
     *
     * @param {?=} offsetSeconds 偏移量
     * @return {?}
     */
    function (offsetSeconds) {
        if (offsetSeconds === void 0) { offsetSeconds = 0; }
        var /** @type {?} */ decoded = this.payload;
        if (!decoded.hasOwnProperty('exp'))
            return null;
        var /** @type {?} */ date = new Date(0);
        date.setUTCSeconds(decoded.exp);
        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);
    };
    return JWTTokenModel;
}());
export { JWTTokenModel };
function JWTTokenModel_tsickle_Closure_declarations() {
    /** @type {?} */
    JWTTokenModel.prototype.token;
}
//# sourceMappingURL=jwt.model.js.map