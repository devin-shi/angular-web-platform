{"version":3,"file":"tag-cloud.component.js","sourceRoot":"","sources":["../../../../../../packages/abc/charts/tag-cloud/tag-cloud.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  HostBinding,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  NgZone,\r\n  TemplateRef,\r\n  OnInit,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  SimpleChange,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { FromEventObservable } from 'rxjs/observable/FromEventObservable';\r\nimport {\r\n  coerceNumberProperty,\r\n  coerceBooleanProperty,\r\n} from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n  selector: 'g2-tag-cloud',\r\n  template: `<div #container [ngStyle]=\"{'height.px': height}\"></div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class G2TagCloudComponent implements OnDestroy, OnChanges, OnInit {\r\n  // region: fields\r\n\r\n  @Input() color = 'rgba(24, 144, 255, 0.85)';\r\n\r\n  @Input()\r\n  get height() {\r\n    return this._height;\r\n  }\r\n  set height(value: any) {\r\n    this._height = coerceNumberProperty(value);\r\n    this.cd.detectChanges();\r\n  }\r\n  private _height = 0;\r\n\r\n  @Input() padding = 0;\r\n  @Input() data: { name: string; value: number; [key: string]: any }[];\r\n\r\n  @Input()\r\n  get autoLabel() {\r\n    return this._autoLabel;\r\n  }\r\n  set autoLabel(value: any) {\r\n    this._autoLabel = coerceBooleanProperty(value);\r\n  }\r\n  private _autoLabel = true;\r\n\r\n  // endregion\r\n\r\n  @ViewChild('container') node: ElementRef;\r\n\r\n  chart: any;\r\n  initFlag = false;\r\n\r\n  constructor(private el: ElementRef, private cd: ChangeDetectorRef) {}\r\n\r\n  private initTagCloud() {\r\n    // 给point注册一个词云的shape\r\n    G2.Shape.registerShape('point', 'cloud', {\r\n      drawShape(cfg, container) {\r\n        const attrs = Object.assign(\r\n          {},\r\n          {\r\n            fillOpacity: cfg.opacity,\r\n            fontSize: cfg.origin._origin.size,\r\n            rotate: cfg.origin._origin.rotate,\r\n            text: cfg.origin._origin.text,\r\n            textAlign: 'center',\r\n            fontFamily: cfg.origin._origin.font,\r\n            fill: cfg.color,\r\n            textBaseline: 'Alphabetic',\r\n          },\r\n          cfg.style,\r\n        );\r\n        return container.addShape('text', {\r\n          attrs: Object.assign(attrs, {\r\n            x: cfg.x,\r\n            y: cfg.y,\r\n          }),\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  renderChart() {\r\n    if (!this.data || (this.data && this.data.length < 1)) return;\r\n\r\n    this.node.nativeElement.innerHTML = '';\r\n    const dv = new DataSet.View().source(this.data);\r\n    const range = dv.range('value');\r\n    const min = range[0];\r\n    const max = range[1];\r\n    const height = +this.height;\r\n    const width = +this.el.nativeElement.offsetWidth;\r\n\r\n    dv.transform({\r\n      type: 'tag-cloud',\r\n      fields: ['name', 'value'],\r\n      size: [width, height],\r\n      padding: this.padding,\r\n      timeInterval: 5000, // max execute time\r\n      rotate() {\r\n        let random = ~~(Math.random() * 4) % 4;\r\n        if (random === 2) {\r\n          random = 0;\r\n        }\r\n        return random * 90; // 0, 90, 270\r\n      },\r\n      fontSize(d) {\r\n        if (d.value) {\r\n          return (d.value - min) / (max - min) * (80 - 24) + 24;\r\n        }\r\n        return 0;\r\n      },\r\n    });\r\n    const chart = new G2.Chart({\r\n      container: this.node.nativeElement,\r\n      width: width,\r\n      height: height,\r\n      padding: this.padding,\r\n      forceFit: true,\r\n    });\r\n    chart.source(dv, {\r\n      x: { nice: false },\r\n      y: { nice: false },\r\n    });\r\n    chart.legend(false);\r\n    chart.axis(false);\r\n    chart.tooltip({\r\n      showTitle: false,\r\n    });\r\n    chart.coord().reflect();\r\n    chart\r\n      .point()\r\n      .position('x*y')\r\n      .color('text')\r\n      .shape('cloud')\r\n      .tooltip('value*category');\r\n\r\n    chart.render();\r\n    setTimeout(() => {\r\n      chart.forceFit();\r\n      chart.repaint();\r\n    });\r\n\r\n    this.chart = chart;\r\n  }\r\n\r\n  uninstall() {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initFlag = true;\r\n    this.initTagCloud();\r\n    this.renderChart();\r\n  }\r\n\r\n  ngOnChanges(\r\n    changes: { [P in keyof this]?: SimpleChange } & SimpleChanges,\r\n  ): void {\r\n    if (this.initFlag) this.renderChart();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.uninstall();\r\n  }\r\n}\r\n"]}