{"version":3,"file":"lodop.service.js","sourceRoot":"","sources":["../../../../../packages/abc/lodop/lodop.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\n\nimport { LazyService } from '@delon/util';\n\nimport { Lodop, LodopResult, LodopPrintResult } from './interface';\nimport { AdLodopConfig } from './lodop.config';\n\n// TODO: zone\n@Injectable()\nexport class LodopService implements OnDestroy {\n  private _cog: AdLodopConfig;\n  private pending = false;\n  private _lodop: Lodop = null;\n  private _init: Subject<LodopResult> = new Subject<LodopResult>();\n  private _events: Subject<LodopPrintResult> = new Subject<LodopPrintResult>();\n\n  constructor(private defCog: AdLodopConfig, private scriptSrv: LazyService) {\n    this.cog = defCog;\n  }\n\n  /**\n   * 获取或重新设置配置\n   *\n   * **注：**重新设置会倒置重新加载脚本资源\n   */\n  get cog() {\n    return this._cog;\n  }\n  set cog(value: AdLodopConfig) {\n    this._cog = Object.assign(\n      {\n        url: 'https://localhost:8443/CLodopfuncs.js',\n        name: 'CLODOP',\n        companyName: '',\n        checkMaxCount: 100,\n      },\n      this.defCog,\n      value,\n    );\n  }\n\n  /** 事件变更通知 */\n  get events(): Observable<LodopPrintResult> {\n    return this._events.asObservable();\n  }\n\n  private check() {\n    if (!this._lodop) throw new Error(`请务必先调用 lodop 获取对象`);\n  }\n\n  private request(): void {\n    this.pending = true;\n\n    const url = `${this.cog.url}?name=${this.cog.name}`;\n    let checkMaxCount = this.cog.checkMaxCount;\n    const onResolve = (status, error?: any) => {\n      this._init.next({\n        ok: status === 'ok',\n        status,\n        error,\n        lodop: this._lodop,\n      });\n    };\n    const checkStatus = () => {\n      --checkMaxCount;\n      if (this._lodop.webskt && this._lodop.webskt.readyState === 1) {\n        onResolve('ok');\n      } else {\n        if (checkMaxCount < 0) {\n          onResolve('check-limit');\n          return;\n        }\n        setTimeout(() => checkStatus(), 100);\n      }\n    };\n\n    this.scriptSrv.load(url).then((res: any[]) => {\n      if (res.length === 1 && res[0].status !== 'ok') {\n        this.pending = false;\n        onResolve('script-load-error', res[0]);\n        return;\n      }\n      this._lodop =\n        window.hasOwnProperty(this.cog.name) &&\n        (window[this.cog.name] as Lodop);\n      if (this._lodop === null) {\n        onResolve('load-variable-name-error', { name: this.cog.name });\n        return;\n      }\n      this._lodop.SET_LICENSES(\n        this.cog.companyName,\n        this.cog.license,\n        this.cog.licenseA,\n        this.cog.licenseB,\n      );\n      checkStatus();\n    });\n  }\n\n  /** 重置 lodop 对象 */\n  reset() {\n    this._lodop = null;\n    this.pending = false;\n    this.request();\n  }\n\n  /** 获取 lodop 对象 */\n  get lodop(): Observable<LodopResult> {\n    if (this._lodop) return of(<LodopResult>{ ok: true, lodop: this._lodop });\n    if (this.pending) return this._init.asObservable();\n\n    this.request();\n\n    return this._init.asObservable();\n  }\n\n  /** 获取打印机列表 */\n  get printer(): string[] {\n    this.check();\n    const ret: string[] = [];\n    const count = this._lodop.GET_PRINTER_COUNT();\n    for (let index = 0; index < count; index++) {\n      ret.push(this._lodop.GET_PRINTER_NAME(index));\n    }\n    return ret;\n  }\n\n  /**\n   * 附加代码至 `lodop` 对象上，字符串类支持 `{{key}}` 的动态参数\n   *\n   * **注：** 代码是指打印设计所产生字符串数据\n   *\n   * @param code 代码\n   * @param contextObj 动态参数上下文对象\n   * @param parser 自定义解析表达式，默认：`/LODOP\\.([^(]+)\\(([^\\n]+)\\);/i`\n   */\n  attachCode(code: string, contextObj?: Object, parser?: RegExp): void {\n    this.check();\n    if (!parser) parser = /LODOP\\.([^(]+)\\(([^\\n]+)\\);/i;\n    code.split('\\n').forEach(line => {\n      const res = parser.exec(line.trim());\n      if (!res) return;\n      const fn = this._lodop[res[1]];\n      if (fn) {\n        let arr: Array<any>;\n        try {\n          const fakeFn = new Function(`return [${res[2]}]`);\n          arr = fakeFn() as any[];\n        } catch {}\n\n        if (Array.isArray(arr) && contextObj) {\n          for (let i = 0; i < arr.length; i++) {\n            if (typeof arr[i] === 'string') {\n              arr[i] = arr[i].replace(\n                /{{(.*?)}}/g,\n                (match, key) => contextObj[key.trim()] || '',\n              );\n            }\n          }\n        }\n        fn.apply(this._lodop, arr);\n      }\n    });\n  }\n\n  /**\n   * 打开打印设计关闭后自动返回代码\n   *\n   * **注：** 自动监听 `On_Return` 事件，运行后会移除\n   */\n  design(): Promise<string> {\n    this.check();\n    const tid = this._lodop.PRINT_DESIGN();\n    return new Promise(resolve => {\n      this._lodop.On_Return = (taskID: string, value: boolean | string) => {\n        if (tid !== taskID) return;\n        this._lodop.On_Return = null;\n        resolve('' + value);\n      };\n    });\n  }\n\n  private printBuffer: any[] = [];\n  private printDo() {\n    const data = this.printBuffer.shift();\n    if (!data) return;\n    this.attachCode(data.code, data.item, data.parser);\n    const tid = this._lodop.PRINT();\n    this._lodop.On_Return = (taskID: string, value: boolean | string) => {\n      if (tid !== taskID) return;\n      this._lodop.On_Return = null;\n      this._events.next(\n        Object.assign(\n          <LodopPrintResult>{\n            ok: value === true,\n            error: value === true ? null : value,\n          },\n          data,\n        ),\n      );\n      this.printDo();\n    };\n  }\n\n  /**\n   * 立即打印，一般用于批量套打\n   *\n   * @param code 代码\n   * @param contextObj 动态参数上下文对象\n   * @param parser 自定义解析表达式，默认：`/LODOP\\.([^(]+)\\(([^\\n]+)\\);/i`\n   */\n  print(code: string, contextObj: Object | Object[], parser?: RegExp): void {\n    this.check();\n    if (contextObj) {\n      this.printBuffer.push(\n        ...(Array.isArray(contextObj) ? contextObj : [contextObj]).map(item => {\n          return { code, parser, item };\n        }),\n      );\n    }\n    this.printDo();\n  }\n\n  ngOnDestroy(): void {\n    this._init.unsubscribe();\n    this._events.unsubscribe();\n  }\n}\n"]}