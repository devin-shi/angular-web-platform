{"version":3,"file":"simple-table.component.js","sourceRoot":"","sources":["../../../../../packages/abc/simple-table/simple-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  Renderer2,\r\n  ElementRef,\r\n  TemplateRef,\r\n  SimpleChange,\r\n  QueryList,\r\n  ViewChildren,\r\n  ContentChildren,\r\n  ContentChild,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { ACLService } from '@delon/acl';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { tap, map, filter } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport {\r\n  coerceBooleanProperty,\r\n  coerceNumberProperty,\r\n} from '@angular/cdk/coercion';\r\nimport {\r\n  CNCurrencyPipe,\r\n  DatePipe,\r\n  YNPipe,\r\n  ModalHelper,\r\n  ALAIN_I18N_TOKEN,\r\n  AlainI18NService,\r\n} from '@delon/theme';\r\nimport { deepGet, deepCopy } from '@delon/util';\r\n\r\nimport {\r\n  SimpleTableColumn,\r\n  SimpleTableChange,\r\n  CompareFn,\r\n  SimpleTableSelection,\r\n  SimpleTableFilter,\r\n  SimpleTableData,\r\n  SimpleTableButton,\r\n  STExportOptions,\r\n  ResReNameType,\r\n  ReqReNameType,\r\n} from './interface';\r\nimport { AdSimpleTableConfig } from './simple-table.config';\r\nimport { SimpleTableRowDirective } from './simple-table-row.directive';\r\nimport { SimpleTableExport } from './simple-table-export';\r\n\r\n@Component({\r\n  selector: 'simple-table',\r\n  template: `<nz-table [nzData]=\"_data\" [(nzPageIndex)]=\"pi\" (nzPageIndexChange)=\"_change('pi')\" [(nzPageSize)]=\"ps\" (nzPageSizeChange)=\"_change('ps')\" [nzTotal]=\"total\" [nzShowPagination]=\"_isPagination\" [nzFrontPagination]=\"false\" [nzBordered]=\"bordered\" [nzSize]=\"size\" [nzLoading]=\"loading\" [nzLoadingDelay]=\"loadingDelay\" [nzScroll]=\"scroll\" [nzTitle]=\"header\" [nzFooter]=\"footer\" [nzNoResult]=\"noResult\" [nzPageSizeOptions]=\"pageSizeOptions\" [nzShowQuickJumper]=\"showQuickJumper\" [nzShowSizeChanger]=\"showSizeChanger\" [nzShowTotal]=\"totalTpl\"> <thead> <tr> <th *ngIf=\"expand\" [nzShowExpand]=\"expand\"></th> <th *ngFor=\"let c of _columns; let index=index\" [nzWidth]=\"c.width\" [nzLeft]=\"c._left\" [nzRight]=\"c._right\" [ngClass]=\"c.className\" [attr.colspan]=\"c.colSpan\" [attr.data-col]=\"c.indexKey\" [nzShowSort]=\"_sortMap[index].enabled\" [(nzSort)]=\"_sortMap[index].v\" (nzSortChange)=\"sort(index, $event)\"> <ng-template #renderTitle [ngTemplateOutlet]=\"c.__renderTitle\" [ngTemplateOutletContext]=\"{$implicit: c, index: index }\"></ng-template> <ng-container *ngIf=\"!c.__renderTitle; else renderTitle\"> <ng-container [ngSwitch]=\"c.type\"> <ng-container *ngSwitchCase=\"'checkbox'\"> <label nz-checkbox [(ngModel)]=\"_allChecked\" [nzIndeterminate]=\"_indeterminate\" (ngModelChange)=\"_checkAll()\"></label> <nz-dropdown *ngIf=\"c.selections.length\"> <span nz-dropdown> <i class=\"anticon anticon-down\"></i> </span> <ul nz-menu> <li nz-menu-item *ngFor=\"let rw of c.selections\" (click)=\"_rowSelection(rw)\" [innerHTML]=\"rw.text\"> </li> </ul> </nz-dropdown> </ng-container> <ng-container *ngSwitchDefault> <span [innerHTML]=\"c.title\"></span> </ng-container> </ng-container> <nz-dropdown *ngIf=\"c.filters.length > 0\" nzTrigger=\"click\" [hasFilterButton]=\"true\" [nzClickHide]=\"false\" [(nzVisible)]=\"c.filterVisible\"> <i class=\"{{c.filterIcon}}\" [ngClass]=\"{'ant-table-filter-selected': c.filtered}\" nz-dropdown></i> <ul nz-menu> <ng-container *ngIf=\"c.filterMultiple\"> <li nz-menu-item *ngFor=\"let filter of c.filters\"> <label nz-checkbox [(ngModel)]=\"filter.checked\">{{filter.text}}</label> </li> </ng-container> <ng-container *ngIf=\"!c.filterMultiple\"> <li nz-menu-item *ngFor=\"let filter of c.filters\"> <label nz-radio [ngModel]=\"filter.checked\" (ngModelChange)=\"filterRadio(c, filter, $event)\">{{filter.text}}</label> </li> </ng-container> </ul> <div class=\"ant-table-filter-dropdown-btns\"> <a class=\"ant-table-filter-dropdown-link confirm\" (click)=\"c.filterVisible = false\"> <span (click)=\"filterConfirm(c)\">{{c.filterConfirmText}}</span> </a> <a class=\"ant-table-filter-dropdown-link clear\" (click)=\"c.filterVisible = false\"> <span (click)=\"filterClear(c)\">{{c.filterClearText}}</span> </a> </div> </nz-dropdown> </ng-container> </th> </tr> </thead> <tbody> <ng-container *ngFor=\"let i of _data; let index=index\"> <tr> <td *ngIf=\"expand\" [nzShowExpand]=\"expand\" [(nzExpand)]=\"i.expand\"></td> <td *ngFor=\"let c of _columns\" [nzLeft]=\"c._left\" [nzRight]=\"c._right\" [nzCheckbox]=\"c.type === 'checkbox'\" [ngClass]=\"c.className\" [attr.colspan]=\"c.colSpan\"> <ng-template #render [ngTemplateOutlet]=\"c.__render\" [ngTemplateOutletContext]=\"{$implicit: i, index: index, column: c }\"></ng-template> <ng-container *ngIf=\"!c.__render; else render\"> <ng-container *ngIf=\"c.index\" [ngSwitch]=\"c.type\"> <ng-container *ngSwitchCase=\"'checkbox'\"> <label nz-checkbox [nzDisabled]=\"i.disabled\" [ngModel]=\"i.checked\" (ngModelChange)=\"_checkSelection(i, $event)\"></label> </ng-container> <ng-container *ngSwitchCase=\"'radio'\"> <label nz-radio [nzDisabled]=\"i.disabled\" [ngModel]=\"i.checked\" (ngModelChange)=\"_refRadio(index, $event, i)\"></label> </ng-container> <ng-container *ngSwitchCase=\"'link'\"> <a (click)=\"_click($event, i, c)\" [innerHTML]=\"_get(i, c)\"></a> </ng-container> <span *ngSwitchDefault [innerHTML]=\"_get(i, c)\"></span> </ng-container> <ng-container *ngFor=\"let btn of c.buttons; let last=last\"> <ng-container *ngIf=\"btn.if(i, btn, c)\" [ngSwitch]=\"btn._type\"> <ng-container *ngSwitchCase=\"2\"> <nz-popconfirm [nzTitle]=\"btn.popTitle\" (nzOnConfirm)=\"btnClick(i, btn)\"> <a nz-popconfirm [innerHTML]=\"btnText(i, btn)\"></a> </nz-popconfirm> </ng-container> <ng-container *ngSwitchCase=\"3\"> <nz-dropdown> <a class=\"ant-dropdown-link\" nz-dropdown> {{btnText(i, btn)}} <i class=\"anticon anticon-down\"></i> </a> <ul nz-menu> <ng-container *ngFor=\"let subBtn of btn.children\"> <li nz-menu-item *ngIf=\"btn.if(i, btn, c)\"> <a (click)=\"btnClick(i, subBtn)\" [innerHTML]=\"btnText(i, subBtn)\"></a> </li> </ng-container> </ul> </nz-dropdown> </ng-container> <a *ngSwitchDefault (click)=\"btnClick(i, btn)\" [innerHTML]=\"btnText(i, btn)\"></a> <nz-divider *ngIf=\"!last\" nzType=\"vertical\"></nz-divider> </ng-container> </ng-container> <ng-template [ngIf]=\"!c.__renderExpanded\" [ngTemplateOutlet]=\"c.__renderExpanded\" [ngTemplateOutletContext]=\"{$implicit: i, index: index, column: c }\"></ng-template> </ng-container> </td> </tr> <tr [nzExpand]=\"i.expand\"> <td></td> <td [attr.colspan]=\"_columns.length\"> <ng-template [ngTemplateOutlet]=\"expand\" [ngTemplateOutletContext]=\"{$implicit: i, index: index, column: c }\"></ng-template> </td> </tr> </ng-container> <ng-template [ngIf]=\"!loading\" [ngTemplateOutlet]=\"body\"></ng-template> </tbody> <ng-template #totalTpl let-range=\"range\" let-total>{{ renderTotal(total, range) }}</ng-template> </nz-table> `,\r\n  host: { '[class.ad-st]': 'true' },\r\n  providers: [SimpleTableExport, CNCurrencyPipe, DatePipe, YNPipe, DecimalPipe],\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SimpleTableComponent\r\n  implements OnInit, OnChanges, OnDestroy {\r\n  private data$: Subscription;\r\n  private _inited = false;\r\n  _data: SimpleTableData[] = [];\r\n  _url: string;\r\n  _isAjax = false;\r\n  _isPagination = true;\r\n  _classMap: string[] = [];\r\n  _allChecked = false;\r\n  _indeterminate = false;\r\n  _columns: SimpleTableColumn[] = [];\r\n\r\n  // region: fields\r\n\r\n  /** 数据源 */\r\n  @Input() data: string | any[] | Observable<any[]>;\r\n  /**\r\n   * 额外请求参数，默认自动附加 `pi`、`ps` 至URL\r\n   * - `{ status: 'new' }` => `url?pi=1&ps=10&status=new`\r\n   */\r\n  @Input() extraParams: any;\r\n  /** 请求方法 */\r\n  @Input() reqMehtod: string = 'GET';\r\n  /** 请求体 `body` */\r\n  @Input() reqBody: any;\r\n  /** 请求体 `Header` */\r\n  @Input() reqHeaders: any;\r\n  /**\r\n   * 重命名请求参数 `pi`、`ps`\r\n   * - `{ pi: 'Page' }` => `pi` 会被替换成 Page\r\n   */\r\n  @Input()\r\n  set reqReName(value: ReqReNameType) {\r\n    this._reqReName = Object.assign(this._reqReName, value);\r\n  }\r\n  get reqReName() {\r\n    return this._reqReName;\r\n  }\r\n  private _reqReName: ReqReNameType = { pi: 'pi', ps: 'ps' };\r\n  /** 请求异常时回调 */\r\n  @Output() reqError: EventEmitter<any> = new EventEmitter<any>();\r\n  /**\r\n   * 重命名返回参数 `total`、`list`\r\n   * - `{ total: 'Total' }` => Total 会被当作 `total`\r\n   */\r\n  @Input()\r\n  set resReName(cur: ResReNameType) {\r\n    let ret: ResReNameType = {};\r\n    if (cur) {\r\n      if (cur.list)\r\n        ret.list = Array.isArray(cur.list) ? cur.list : cur.list.split('.');\r\n      else ret.list = ['list'];\r\n\r\n      if (cur.total)\r\n        ret.total = Array.isArray(cur.total) ? cur.total : cur.total.split('.');\r\n      else ret.total = ['total'];\r\n    } else {\r\n      ret = { total: ['total'], list: ['list'] };\r\n    }\r\n    this._resReName = ret;\r\n  }\r\n  get resReName() {\r\n    return this._resReName;\r\n  }\r\n  private _resReName: ResReNameType = { total: ['total'], list: ['list'] };\r\n  /** 列描述  */\r\n  @Input() columns: SimpleTableColumn[] = [];\r\n  /** 每页数量，当设置为 `0` 表示不分页，默认：`10` */\r\n  @Input()\r\n  get ps() {\r\n    return this._ps;\r\n  }\r\n  set ps(value: any) {\r\n    this._ps = coerceNumberProperty(value);\r\n  }\r\n  private _ps = 10;\r\n  /** 当前页码 */\r\n  @Input()\r\n  get pi() {\r\n    return this._pi;\r\n  }\r\n  set pi(value: any) {\r\n    this._pi = coerceNumberProperty(value);\r\n  }\r\n  private _pi = 1;\r\n  /** 数据总量 */\r\n  @Input()\r\n  get total() {\r\n    return this._total;\r\n  }\r\n  set total(value: any) {\r\n    this._total = coerceNumberProperty(value);\r\n  }\r\n  private _total = 0;\r\n  /** 是否显示分页器 */\r\n  @Input()\r\n  get showPagination() {\r\n    return this._showPagination;\r\n  }\r\n  set showPagination(value: any) {\r\n    this._showPagination = coerceBooleanProperty(value);\r\n  }\r\n  private _showPagination: boolean;\r\n  /** 是否显示Loading */\r\n  @Input()\r\n  get loading() {\r\n    return this._loading;\r\n  }\r\n  set loading(value: any) {\r\n    this._loading = coerceBooleanProperty(value);\r\n  }\r\n  private _loading = false;\r\n  /** 延迟显示加载效果的时间（防止闪烁） */\r\n  @Input()\r\n  get loadingDelay() {\r\n    return this._loadingDelay;\r\n  }\r\n  set loadingDelay(value: any) {\r\n    this._loadingDelay = coerceNumberProperty(value);\r\n  }\r\n  private _loadingDelay = 0;\r\n  /** 是否显示边框 */\r\n  @Input()\r\n  get bordered() {\r\n    return this._bordered;\r\n  }\r\n  set bordered(value: any) {\r\n    this._bordered = coerceBooleanProperty(value);\r\n  }\r\n  private _bordered = false;\r\n  /** table大小 */\r\n  @Input() size: 'small' | 'middle' | 'default' = 'default';\r\n  /** 纵向支持滚动，也可用于指定滚动区域的高度：`{ y: '300px', x: '300px' }` */\r\n  @Input() scroll: { y: string; x: string };\r\n  /** 是否显示pagination中改变页数 */\r\n  @Input()\r\n  get showSizeChanger() {\r\n    return this._showSizeChanger;\r\n  }\r\n  set showSizeChanger(value: any) {\r\n    this._showSizeChanger = coerceBooleanProperty(value);\r\n  }\r\n  private _showSizeChanger = false;\r\n  /** pagination中每页显示条目数下拉框值 */\r\n  @Input() pageSizeOptions: number[];\r\n  /** 是否显示pagination中快速跳转 */\r\n  @Input()\r\n  get showQuickJumper() {\r\n    return this._showQuickJumper;\r\n  }\r\n  set showQuickJumper(value: any) {\r\n    this._showQuickJumper = coerceBooleanProperty(value);\r\n  }\r\n  private _showQuickJumper = false;\r\n  /** 是否显示总数据量 */\r\n  private _totalTpl = ``;\r\n  @Input()\r\n  set showTotal(value: any) {\r\n    if (typeof value === 'string' && value.length) {\r\n      this._totalTpl = value;\r\n    } else if (coerceBooleanProperty(value)) {\r\n      this._totalTpl = `共 {{total}} 条`;\r\n    } else {\r\n      this._totalTpl = '';\r\n    }\r\n  }\r\n  renderTotal(total: string, range: string[]) {\r\n    return this._totalTpl\r\n      ? this._totalTpl\r\n          .replace('{{total}}', total)\r\n          .replace('{{range[0]}}', range[0])\r\n          .replace('{{range[1]}}', range[1])\r\n      : '';\r\n  }\r\n  /** 数据变更后是否保留在数据变更前的页码 */\r\n  @Input()\r\n  get isPageIndexReset() {\r\n    return this._isPageIndexReset;\r\n  }\r\n  set isPageIndexReset(value: any) {\r\n    this._isPageIndexReset = coerceBooleanProperty(value);\r\n  }\r\n  private _isPageIndexReset = true;\r\n  /** 分页方向 */\r\n  @Input() pagePlacement?: 'left' | 'center' | 'right' = 'right';\r\n  /** 切换分页时返回顶部 */\r\n  @Input()\r\n  get toTopInChange() {\r\n    return this._toTopInChange;\r\n  }\r\n  set toTopInChange(value: any) {\r\n    this._toTopInChange = coerceBooleanProperty(value);\r\n  }\r\n  private _toTopInChange = true;\r\n  /** 返回顶部偏移值 */\r\n  @Input()\r\n  get toTopOffset() {\r\n    return this._toTopOffset;\r\n  }\r\n  set toTopOffset(value: any) {\r\n    this._toTopOffset = coerceNumberProperty(value);\r\n  }\r\n  private _toTopOffset = 100;\r\n  /** 重命名排序值，`columns` 的重命名高于属性 */\r\n  @Input() sortReName: { ascend?: string; descend?: string };\r\n  /** 是否多排序，建议后端支持时使用，默认：`false` */\r\n  @Input()\r\n  get multiSort() {\r\n    return this._multiSort;\r\n  }\r\n  set multiSort(value: any) {\r\n    this._multiSort = coerceBooleanProperty(value);\r\n  }\r\n  private _multiSort = false;\r\n  /** 数据处理前回调 */\r\n  @Input() preDataChange: (data: SimpleTableData[]) => SimpleTableData[];\r\n  /** `header` 标题 */\r\n  @ContentChild('header') header: TemplateRef<void>;\r\n  /** 额外 `body` 内容 */\r\n  @ContentChild('body') body: TemplateRef<void>;\r\n  /** `footer` 底部 */\r\n  @ContentChild('footer') footer: TemplateRef<void>;\r\n  /** `expand` 可展开，当数据源中包括 `expand` 表示展开状态 */\r\n  @ContentChild('expand')\r\n  expand: TemplateRef<{ $implicit: any; column: SimpleTableColumn }>;\r\n  @Input() noResult: string | TemplateRef<void>;\r\n  @Input() widthConfig: string[];\r\n  /** 页码、每页数量变化时回调 */\r\n  @Output()\r\n  change: EventEmitter<SimpleTableChange> = new EventEmitter<\r\n    SimpleTableChange\r\n  >();\r\n  /** checkbox变化时回调，参数为当前所选清单 */\r\n  @Output()\r\n  checkboxChange: EventEmitter<SimpleTableData[]> = new EventEmitter<\r\n    SimpleTableData[]\r\n  >();\r\n  /** radio变化时回调，参数为当前所选 */\r\n  @Output()\r\n  radioChange: EventEmitter<SimpleTableData> = new EventEmitter<\r\n    SimpleTableData\r\n  >();\r\n  /** 排序回调 */\r\n  @Output() sortChange: EventEmitter<any> = new EventEmitter<any>();\r\n  /** Filter回调 */\r\n  @Output()\r\n  filterChange: EventEmitter<SimpleTableColumn> = new EventEmitter<\r\n    SimpleTableColumn\r\n  >();\r\n\r\n  // endregion\r\n\r\n  constructor(\r\n    private defConfig: AdSimpleTableConfig,\r\n    private http: HttpClient,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private exportSrv: SimpleTableExport,\r\n    @Optional() private acl: ACLService,\r\n    @Optional()\r\n    @Inject(ALAIN_I18N_TOKEN)\r\n    private i18nSrv: AlainI18NService,\r\n    private modal: ModalHelper,\r\n    private currenty: CNCurrencyPipe,\r\n    private date: DatePipe,\r\n    private yn: YNPipe,\r\n    private number: DecimalPipe,\r\n    @Inject(DOCUMENT) private doc: any,\r\n  ) {\r\n    Object.assign(this, deepCopy(defConfig));\r\n  }\r\n\r\n  // region: data\r\n\r\n  private getAjaxData(url?: string): Observable<any> {\r\n    const params: any = Object.assign(\r\n      {\r\n        [this.reqReName.pi]: this.pi,\r\n        [this.reqReName.ps]: this.ps,\r\n      },\r\n      this.extraParams,\r\n      this.getReqSortMap(),\r\n      this.getReqFilterMap(),\r\n    );\r\n    return this.http\r\n      .request(this.reqMehtod || 'GET', url || this._url, {\r\n        params,\r\n        body: this.reqBody,\r\n        headers: this.reqHeaders,\r\n      })\r\n      .pipe(\r\n        map((res: any) => {\r\n          // list\r\n          const ret = deepGet(res, this.resReName.list as string[], []);\r\n          if (ret == null || !Array.isArray(ret)) return [];\r\n          // total\r\n          const retTotal =\r\n            this.resReName.total &&\r\n            deepGet(res, this.resReName.total as string[], null);\r\n          this.total = retTotal == null ? this.total || 0 : +retTotal;\r\n          return <any[]>ret;\r\n        }),\r\n      );\r\n  }\r\n\r\n  /**\r\n   * 根据页码重新加载数据\r\n   *\r\n   * @param pi 指定当前页码，默认：`1`\r\n   * @param extraParams 重新指定 `extraParams` 值\r\n   */\r\n  load(pi = 1, extraParams?: any) {\r\n    if (pi !== -1) this.pi = pi;\r\n    this.extraParams = extraParams || null;\r\n    this._change('pi');\r\n  }\r\n\r\n  /**\r\n   * 重新刷新当前页\r\n   * @param extraParams 重新指定 `extraParams` 值\r\n   */\r\n  reload(extraParams?: any) {\r\n    this.load(-1, extraParams);\r\n  }\r\n\r\n  /**\r\n   * 重置且重新设置 `pi` 为 `1`\r\n   *\r\n   * @param extraParams 重新指定 `extraParams` 值\r\n   */\r\n  reset(extraParams?: any) {\r\n    this.load(1, extraParams);\r\n  }\r\n\r\n  _change(type: 'pi' | 'ps') {\r\n    if (!this._inited) return ;\r\n    this._genAjax();\r\n    this._genData();\r\n    this._toTop();\r\n    this.change.emit({\r\n      type: type,\r\n      pi: this.pi,\r\n      ps: this.ps,\r\n      total: this.total,\r\n    });\r\n  }\r\n\r\n  _genAjax(forceRefresh: boolean = false) {\r\n    if (!this._isAjax) return;\r\n    this.loading = true;\r\n    if (forceRefresh === true) this.pi = 1;\r\n    this.getAjaxData().subscribe(\r\n      (res: any) => this._subscribeData(res),\r\n      err => {\r\n        this.loading = false;\r\n        this.reqError.emit(err);\r\n      },\r\n    );\r\n  }\r\n\r\n  _genData(forceRefresh: boolean = false) {\r\n    if (this._isAjax) return;\r\n    let data = <any[]>this.data || [];\r\n    // sort\r\n    data = data.slice(0);\r\n    const sorterFn = this.getSorterFn();\r\n    if (sorterFn) {\r\n      data = this.recursiveSort(data, sorterFn);\r\n    }\r\n\r\n    // filter\r\n    this._columns.filter(w => w.filters && w.filters.length).forEach(c => {\r\n      const values = c.filters.filter(w => w.checked);\r\n      if (values.length === 0) return;\r\n      const onFilter = c.filter;\r\n      data = data.filter(record => {\r\n        return values.some(v => onFilter(v, record));\r\n      });\r\n    });\r\n\r\n    if (forceRefresh) {\r\n      if (this.isPageIndexReset) {\r\n        this.pi = 1;\r\n      } else {\r\n        const maxPageIndex = Math.ceil(data.length / this.ps);\r\n        this.pi = !this.pi\r\n          ? 1\r\n          : this.pi > maxPageIndex\r\n            ? maxPageIndex\r\n            : this.pi;\r\n      }\r\n    }\r\n    this.total = data.length;\r\n    this._isPagination =\r\n      typeof this.showPagination === 'undefined'\r\n        ? this.ps > 0 && this.total > this.ps\r\n        : this.showPagination;\r\n    this._subscribeData(\r\n      this._isPagination\r\n        ? data.slice((this.pi - 1) * this.ps, this.pi * this.ps)\r\n        : data,\r\n    );\r\n  }\r\n\r\n  _toTop() {\r\n    if (!this.toTopInChange) return;\r\n    if (this.scroll) {\r\n      (this.el.nativeElement as HTMLElement)\r\n        .querySelector('.ant-table-body')\r\n        .scrollTo(0, 0);\r\n      return;\r\n    }\r\n    if (this.el.nativeElement.scrollIntoView)\r\n      this.el.nativeElement.scrollIntoView();\r\n    // todo: toTopOffset\r\n    // fix header height\r\n    this.doc.documentElement.scrollTop -= this.toTopOffset;\r\n  }\r\n\r\n  _get(item: any, col: SimpleTableColumn) {\r\n    if (col.format) return col.format(item, col);\r\n\r\n    const value = deepGet(item, col.index as string[], col.default);\r\n    if (typeof value === 'undefined') return col.default;\r\n\r\n    let ret = value;\r\n    switch (col.type) {\r\n      case 'img':\r\n        ret = `<img src=\"${value}\" class=\"img\">`;\r\n        break;\r\n      case 'number':\r\n        ret = this.number.transform(value, col.numberDigits);\r\n        break;\r\n      case 'currency':\r\n        ret = this.currenty.transform(value);\r\n        break;\r\n      case 'date':\r\n        ret = this.date.transform(value, col.dateFormat);\r\n        break;\r\n      case 'yn':\r\n        ret = this.yn.transform(value === col.ynTruth, col.ynYes, col.ynNo);\r\n        break;\r\n    }\r\n    return ret || col.default;\r\n  }\r\n\r\n  _click(e: Event, item: any, col: SimpleTableColumn) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (col.click) col.click(item, this);\r\n    return false;\r\n  }\r\n\r\n  private getDataObs(urlOrData?: string | any[]): Observable<any[]> {\r\n    return urlOrData || Array.isArray(this.data)\r\n      ? of((urlOrData as any[]) || (this.data as any[]))\r\n      : (this.data as Observable<any[]>);\r\n  }\r\n\r\n  private processData() {\r\n    if (!this.data) {\r\n      this._isAjax = false;\r\n      this.data = [];\r\n      return;\r\n    }\r\n\r\n    this._isAjax = false;\r\n    if (typeof this.data === 'string') {\r\n      this._url = this.data as string;\r\n      this._isAjax = true;\r\n      this._genAjax(true);\r\n    } else if (Array.isArray(this.data)) {\r\n      this._genData(true);\r\n    } else {\r\n      if (!this.data$) {\r\n        this.data$ = <any>this.data\r\n          .pipe(tap(() => (this.loading = true)))\r\n          .subscribe(res => {\r\n            this.data = res;\r\n            this._genData(true);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  private _subscribeData(res: any[]) {\r\n    if (this.preDataChange) res = this.preDataChange(res);\r\n    this.loading = false;\r\n    this._data = res;\r\n    this._refCheck();\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: sort\r\n\r\n  _sortMap: { [key: number]: any } = {};\r\n  _sortColumn: SimpleTableColumn = null;\r\n  _sortOrder: string;\r\n  _sortIndex: number;\r\n\r\n  private getReqSortMap(): { [key: string]: string } {\r\n    const ret: { [key: string]: string } = {};\r\n    if (!this._sortOrder) return ret;\r\n\r\n    if (this.multiSort) {\r\n      Object.keys(this._sortMap).forEach(key => {\r\n        const item = this._sortMap[key];\r\n        if (item.v) {\r\n          ret[item.key] =\r\n            (item.column.sortReName || this.sortReName || {})[item.v] || item.v;\r\n        }\r\n      });\r\n    } else {\r\n      const mapData = this._sortMap[this._sortIndex];\r\n      ret[mapData.key] =\r\n        (this._sortColumn.sortReName || this.sortReName || {})[mapData.v] ||\r\n        mapData.v;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  private recursiveSort(\r\n    data: any[],\r\n    sorterFn: (a: any, b: any) => number,\r\n  ): any[] {\r\n    const childrenColumnName = 'children';\r\n    return data.sort(sorterFn).map(\r\n      (item: any) =>\r\n        item[childrenColumnName]\r\n          ? {\r\n              ...item,\r\n              [childrenColumnName]: this.recursiveSort(\r\n                item[childrenColumnName],\r\n                sorterFn,\r\n              ),\r\n            }\r\n          : item,\r\n    );\r\n  }\r\n\r\n  private getSorterFn() {\r\n    // _sortMap\r\n    if (\r\n      !this._sortOrder ||\r\n      !this._sortColumn ||\r\n      typeof this._sortColumn.sorter !== 'function'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return (a: any, b: any) => {\r\n      const result = (this._sortColumn!.sorter as CompareFn)(a, b);\r\n      if (result !== 0) {\r\n        return this._sortOrder === 'descend' ? -result : result;\r\n      }\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  sort(index: number, value: any) {\r\n    if (this._sortIndex === index && this._sortOrder === value) return;\r\n    this._sortColumn = this._columns[index];\r\n    this._sortOrder = value;\r\n    this._sortIndex = index;\r\n    if (this.multiSort) {\r\n      this._sortMap[index].v = value;\r\n    } else {\r\n      Object.keys(this._sortMap).forEach(\r\n        key => (this._sortMap[key].v = +key === index ? value : null),\r\n      );\r\n    }\r\n    this._genAjax(true);\r\n    this._genData(true);\r\n    this.sortChange.emit({\r\n      value,\r\n      map: this.getReqSortMap(),\r\n      column: this._sortColumn,\r\n    });\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: filter\r\n\r\n  private getReqFilterMap(): { [key: string]: string } {\r\n    let ret: { [key: string]: string } = {};\r\n    this._columns.filter(w => w.filtered === true).forEach(col => {\r\n      const values = col.filters.filter(f => f.checked === true);\r\n      let obj: Object = {};\r\n      if (col.filterReName) obj = col.filterReName(col.filters, col);\r\n      else\r\n        obj[col.filterKey || col.indexKey] = values.map(i => i.value).join(',');\r\n\r\n      ret = Object.assign(ret, obj);\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  private handleFilter(col: SimpleTableColumn) {\r\n    col.filtered = col.filters.findIndex(w => w.checked) !== -1;\r\n    this._genAjax(true);\r\n    this._genData(true);\r\n    this.filterChange.emit(col);\r\n  }\r\n\r\n  filterConfirm(col: SimpleTableColumn) {\r\n    this.handleFilter(col);\r\n  }\r\n\r\n  filterClear(col: SimpleTableColumn) {\r\n    col.filters.forEach(i => (i.checked = false));\r\n    this.handleFilter(col);\r\n  }\r\n\r\n  filterRadio(\r\n    col: SimpleTableColumn,\r\n    item: SimpleTableFilter,\r\n    checked: boolean,\r\n  ) {\r\n    col.filters.forEach(i => (i.checked = false));\r\n    item.checked = checked;\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: checkbox\r\n\r\n  /** 清除所有 `checkbox` */\r\n  clearCheck(): this {\r\n    return this._checkAll(false);\r\n  }\r\n\r\n  _checkAll(checked?: boolean): this {\r\n    checked = typeof checked === 'undefined' ? this._allChecked : checked;\r\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = checked));\r\n    return this._refCheck()._checkNotify();\r\n  }\r\n\r\n  _checkSelection(i: SimpleTableData, value: boolean) {\r\n    i.checked = value;\r\n    return this._refCheck()._checkNotify();\r\n  }\r\n\r\n  _refCheck(): this {\r\n    const validData = this._data.filter(w => !w.disabled);\r\n    const checkedList = validData.filter(w => w.checked === true);\r\n    this._allChecked =\r\n      checkedList.length > 0 && checkedList.length === validData.length;\r\n    const allUnChecked = validData.every(value => !value.checked);\r\n    this._indeterminate = !this._allChecked && !allUnChecked;\r\n    return this;\r\n  }\r\n\r\n  _rowSelection(row: SimpleTableSelection): this {\r\n    if (row.select) row.select(this._data);\r\n    return this._refCheck()._checkNotify();\r\n  }\r\n\r\n  _checkNotify(): this {\r\n    this.checkboxChange.emit(\r\n      this._data.filter(w => !w.disabled && w.checked === true),\r\n    );\r\n    return this;\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: radio\r\n\r\n  /** 清除所有 `radio` */\r\n  clearRadio(): this {\r\n    this._data.filter(w => w.checked).forEach(item => (item.checked = false));\r\n    this.radioChange.emit(null);\r\n    return this;\r\n  }\r\n\r\n  _refRadio(idx: number, checked: boolean, item: SimpleTableData): this {\r\n    if (item.disabled === true) return;\r\n    this._data.filter(w => !w.disabled).forEach(i => (i.checked = false));\r\n    item.checked = checked;\r\n    this.radioChange.emit(item);\r\n    return this;\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: buttons\r\n\r\n  btnCoerceIf(list: SimpleTableButton[]) {\r\n    for (const item of list) {\r\n      if (!item.if) item.if = () => true;\r\n      if (!item.children) item.children = [];\r\n      if (item.children.length > 0) this.btnCoerceIf(item.children);\r\n    }\r\n  }\r\n\r\n  btnClick(record: any, btn: SimpleTableButton) {\r\n    if (btn.type === 'modal' || btn.type === 'static') {\r\n      const obj = {};\r\n      obj[btn.paramName || this.defConfig.modalParamsName || 'record'] = record;\r\n      (this.modal[btn.type === 'modal' ? 'open' : 'static'] as any)(\r\n        btn.component,\r\n        Object.assign(obj, btn.params && btn.params(record)),\r\n        btn.size,\r\n        btn.modalOptions,\r\n      )\r\n        .pipe(filter(w => typeof w !== 'undefined'))\r\n        .subscribe(res => {\r\n          if (btn.click) this.btnCallback(record, btn, res);\r\n        });\r\n      return;\r\n    }\r\n    this.btnCallback(record, btn);\r\n  }\r\n\r\n  private btnCallback(record: any, btn: SimpleTableButton, modal?: any) {\r\n    if (!btn.click) return;\r\n    if (typeof btn.click === 'string') {\r\n      switch (btn.click) {\r\n        case 'load':\r\n          this.load();\r\n          break;\r\n        case 'reload':\r\n          this.reload();\r\n          break;\r\n      }\r\n    } else {\r\n      btn.click(record, modal, this);\r\n    }\r\n  }\r\n\r\n  btnText(record: any, btn: SimpleTableButton) {\r\n    if (btn.format) return btn.format(record, btn);\r\n    return btn.text;\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: fixed\r\n\r\n  fixedCoerce(list: SimpleTableColumn[]) {\r\n    list.forEach((item, idx) => {\r\n      if (item.fixed && item.width) {\r\n        if (item.fixed === 'left') {\r\n          item._left = idx === 0 ? '0px' : list[idx - 1].width;\r\n        } else if (item.fixed === 'right') {\r\n          item._right = idx === list.length - 1 ? '0px' : list[idx + 1].width;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: export\r\n\r\n  /**\r\n   * 导出Excel，确保已经注册 `AdXlsxModule`\r\n   * @param urlOrData 重新指定数据，例如希望导出所有数据非常有用\r\n   * @param opt 额外参数\r\n   */\r\n  export(urlOrData?: string | any[], opt?: STExportOptions) {\r\n    ((!urlOrData && this._isAjax) ||\r\n    (urlOrData && typeof urlOrData === 'string')\r\n      ? this.getAjaxData(urlOrData as string)\r\n      : this.getDataObs(urlOrData)\r\n    ).subscribe((res: any[]) =>\r\n      this.exportSrv.export(\r\n        Object.assign({}, opt, <STExportOptions>{\r\n          _d: res,\r\n          _c: this._columns,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  // endregion\r\n\r\n  ngOnInit(): void {\r\n    this._inited = true;\r\n    this.updateColumns();\r\n    this.processData();\r\n  }\r\n\r\n  private setClass() {\r\n    this._classMap.forEach(cls =>\r\n      this.renderer.removeClass(this.el.nativeElement, cls),\r\n    );\r\n\r\n    this._classMap = [];\r\n    if (this.pagePlacement)\r\n      this._classMap.push('ad-st__p' + this.pagePlacement);\r\n\r\n    this._classMap.forEach(cls =>\r\n      this.renderer.addClass(this.el.nativeElement, cls),\r\n    );\r\n  }\r\n\r\n  private updateColumns() {\r\n    this._columns = [];\r\n    if (!this.columns || this.columns.length === 0)\r\n      throw new Error(`the columns property muse be define!`);\r\n    let checkboxCount = 0;\r\n    let radioCount = 0;\r\n    const sortMap: Object = {};\r\n    let idx = 0;\r\n    const newColumns: SimpleTableColumn[] = [];\r\n    const copyColumens = deepCopy(this.columns);\r\n    for (const item of copyColumens) {\r\n      if (this.acl && item.acl && !this.acl.can(item.acl)) continue;\r\n      if (item.index) {\r\n        if (!Array.isArray(item.index)) item.index = item.index.split('.');\r\n\r\n        item.indexKey = item.index.join('.');\r\n      }\r\n      // rowSelection\r\n      if (!item.selections) item.selections = [];\r\n      if (item.type === 'checkbox') {\r\n        ++checkboxCount;\r\n        if (!item.width)\r\n          item.width = `${item.selections.length > 0 ? 60 : 50}px`;\r\n      }\r\n      if (item.type === 'radio') {\r\n        ++radioCount;\r\n        item.selections = [];\r\n        if (!item.width) item.width = '50px';\r\n      }\r\n      if (!item.className) {\r\n        item.className = {\r\n          // 'checkbox': 'text-center',\r\n          // 'radio': 'text-center',\r\n          number: 'text-right',\r\n          currency: 'text-right',\r\n          date: 'text-center',\r\n        }[item.type];\r\n      }\r\n      if (item.type === 'yn' && typeof item.ynTruth === 'undefined')\r\n        item.ynTruth = true;\r\n\r\n      // sorter\r\n      if (item.sorter) {\r\n        sortMap[idx] = {\r\n          enabled: true,\r\n          v: item.sort,\r\n          key: item.sortKey || item.indexKey,\r\n          column: item,\r\n        };\r\n        if (item.sort && !this._sortColumn) {\r\n          this._sortColumn = item;\r\n          this._sortOrder = item.sort;\r\n          this._sortIndex = idx;\r\n        }\r\n      } else {\r\n        sortMap[idx] = {\r\n          enabled: false,\r\n        };\r\n      }\r\n      // filter\r\n      if (!item.filter || !item.filters) item.filters = [];\r\n      if (typeof item.filterMultiple === 'undefined')\r\n        item.filterMultiple = true;\r\n      if (!item.filterConfirmText) item.filterConfirmText = `确认`;\r\n      if (!item.filterClearText) item.filterClearText = `重置`;\r\n      if (!item.filterIcon) item.filterIcon = `anticon anticon-filter`;\r\n      item.filtered = item.filters.findIndex(w => w.checked) !== -1;\r\n\r\n      if (this.acl) {\r\n        item.selections = item.selections.filter(\r\n          w => !w.acl || this.acl.can(w.acl),\r\n        );\r\n        item.filters = item.filters.filter(w => !w.acl || this.acl.can(w.acl));\r\n      }\r\n\r\n      // buttons\r\n      const buttons: SimpleTableButton[] = [];\r\n      if (item.buttons) {\r\n        for (const btn of item.buttons) {\r\n          if (this.acl && btn.acl && !this.acl.can(btn.acl)) continue;\r\n\r\n          if (btn.type === 'del' && typeof btn.pop === 'undefined')\r\n            btn.pop = true;\r\n\r\n          if (btn.pop === true) {\r\n            btn._type = 2;\r\n            if (typeof btn.popTitle === 'undefined')\r\n              btn.popTitle = `确认删除吗？`;\r\n          }\r\n          if (btn.children && btn.children.length > 0) {\r\n            btn._type = 3;\r\n          }\r\n          if (!btn._type) btn._type = 1;\r\n\r\n          // i18n\r\n          if (btn.i18n && this.i18nSrv) btn.text = this.i18nSrv.fanyi(btn.i18n);\r\n\r\n          buttons.push(btn);\r\n        }\r\n        if (buttons.length === 0) continue;\r\n        this.btnCoerceIf(buttons);\r\n      }\r\n      item.buttons = buttons;\r\n      // i18n\r\n      if (item.i18n && this.i18nSrv) item.title = this.i18nSrv.fanyi(item.i18n);\r\n      ++idx;\r\n      newColumns.push(item);\r\n    }\r\n    this.fixedCoerce(newColumns);\r\n    this._columns = newColumns;\r\n    if (checkboxCount > 1) throw new Error(`just only one column checkbox`);\r\n    if (radioCount > 1) throw new Error(`just only one column radio`);\r\n    this._sortMap = sortMap;\r\n  }\r\n\r\n  ngOnChanges(\r\n    changes: { [P in keyof this]?: SimpleChange } & SimpleChanges,\r\n  ): void {\r\n    if (changes.columns && this._inited) this.updateColumns();\r\n    if (changes.data && this._inited) this.processData();\r\n\r\n    this.setClass();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.data$) {\r\n      this.data$.unsubscribe();\r\n      this.data$ = null;\r\n    }\r\n  }\r\n}\r\n"]}