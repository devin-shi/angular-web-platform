{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../../../packages/abc/simple-table/interface.ts"],"names":[],"mappings":"","sourcesContent":["import { SimpleTableComponent } from './simple-table.component';\r\nimport { ElementRef, TemplateRef } from '@angular/core';\r\n\r\nexport type CompareFn = ((a: any, b: any) => number);\r\n\r\n/**\r\n * 数据源\r\n */\r\nexport interface SimpleTableData {\r\n  /**\r\n   * 选择框或单选框状态值\r\n   */\r\n  checked?: boolean;\r\n  /**\r\n   * 选择框或单选框 `disabled` 值\r\n   */\r\n  disabled?: boolean;\r\n\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 列描述\r\n */\r\nexport interface SimpleTableColumn {\r\n  /**\r\n   * 类型\r\n   * - `checkbox` 多选\r\n   * - `radio` 单选\r\n   * - `link` 链接，可触发 `click`\r\n   * - `img` 图片且居中(若 `className` 存在则优先)\r\n   * - `number` 数字且居右(若 `className` 存在则优先)\r\n   * - `currency` 货币且居右(若 `className` 存在则优先)\r\n   * - `date` 日期格式且居中(若 `className` 存在则优先)\r\n   * - `yn` 将`boolean`类型徽章化 [document](http://ng-alain.com/docs/data-render#yn)\r\n   */\r\n  type?:\r\n    | 'checkbox'\r\n    | 'link'\r\n    | 'radio'\r\n    | 'img'\r\n    | 'currency'\r\n    | 'number'\r\n    | 'date'\r\n    | 'yn';\r\n  /**\r\n   * 列标题\r\n   */\r\n  title: string;\r\n  /**\r\n   * 列标题 i18n\r\n   */\r\n  i18n?: string;\r\n  /**\r\n   * 列数据在数据项中对应的 key，支持 `a.b.c` 的嵌套写法\r\n   */\r\n  index?: string | string[];\r\n  /**\r\n   * 链接回调\r\n   */\r\n  click?: (record: any, instance?: SimpleTableComponent) => void;\r\n  /**\r\n   * 按钮组\r\n   */\r\n  buttons?: SimpleTableButton[];\r\n  /**\r\n   * 自定义渲染ID\r\n   * @example\r\n   * ```html\r\n   * <ng-template st-row=\"custom\" let-item let-index=\"index\" let-column=\"column\">\r\n   *  {{ c.title }}\r\n   * </ng-template>\r\n   * ```\r\n   */\r\n  render?: string;\r\n  /**\r\n   * 标题自定义渲染ID\r\n   * @example\r\n   * ```html\r\n   * <ng-template st-row=\"custom\" type=\"title\" let-c>\r\n   *  {{ item | json }}\r\n   * </ng-template>\r\n   * ```\r\n   */\r\n  renderTitle?: string;\r\n  /**\r\n   * 列宽，例如：`10%`、`100px`\r\n   */\r\n  width?: string;\r\n  /**\r\n   * 排序的默认受控属性\r\n   * - 只支持同时对一列进行排序，除非指定 `multiSort`，建议后端支持时使用\r\n   * - 保证只有一列的 `sort` 值，否则自动获取所有列的第一个值\r\n   */\r\n  sort?: 'ascend' | 'descend';\r\n  /**\r\n   * 排序函数，本地排序使用一个函数(参考 [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) 的 compareFunction)\r\n   * - 只有当属性存在时排序才会真的生效\r\n   * - 如果是AJAX直接返回 true\r\n   */\r\n  sorter?: Function;\r\n  /**\r\n   * 排序的后端相对应的KEY，默认使用 `index` 属性\r\n   * sortKey: 'name' => ?name=1&pi=1\r\n   */\r\n  sortKey?: string;\r\n  /**\r\n   * 排序的后端相对应的VALUE\r\n   * { ascend: '0', descend: '1' } => ?name=1&pi=1\r\n   * { ascend: 'asc', descend: 'desc' } => ?name=desc&pi=1\r\n   */\r\n  sortReName?: { ascend?: string; descend?: string };\r\n  /**\r\n   * 表头的筛选菜单项，至少一项以上才会生效\r\n   */\r\n  filters?: SimpleTableFilter[];\r\n  /**\r\n   * 本地模式下，确定筛选的运行函数\r\n   * - 只有当属性存在时筛选才会真的生效\r\n   * - 如果是AJAX直接返回 true\r\n   */\r\n  filter?: Function;\r\n  /**\r\n   * 标识数据是否经过过滤，筛选图标会高亮\r\n   */\r\n  filtered?: boolean;\r\n  /**\r\n   * 自定义 filter 图标，默认 `anticon anticon-filter`\r\n   */\r\n  filterIcon?: string;\r\n  /**\r\n   * filter 确认按钮文本，默认 `确认`\r\n   */\r\n  filterConfirmText?: string;\r\n  /**\r\n   * filter 清除按钮文本，默认 `重置`\r\n   */\r\n  filterClearText?: string;\r\n  /**\r\n   * 是否多选，默认 `true`\r\n   */\r\n  filterMultiple?: boolean;\r\n  /**\r\n   * 过滤的后端相对应的KEY，默认使用 `index` 属性\r\n   * filterKey: 'name' => ?name=1&pi=1\r\n   */\r\n  filterKey?: string;\r\n  /**\r\n   * 过滤的后端相对应的VALUE\r\n   * - 默认当 `filterMultiple` 时以英文逗号拼接的字符串\r\n   * - 参数为 `filters` 原样数组\r\n   * - 返回为 Object 对象\r\n   */\r\n  filterReName?: (list: SimpleTableFilter[], col: SimpleTableColumn) => Object;\r\n  /**\r\n   * 格式化列值\r\n   */\r\n  format?: Function;\r\n  /**\r\n   * 自定义全/反选选择项\r\n   */\r\n  selections?: SimpleTableSelection[];\r\n  /**\r\n   * 列 `class` 属性值（注：无须 `.` 点），例如：\r\n   * - `text-center` 居中\r\n   * - `text-right` 居右\r\n   * - `text-success` 成功色\r\n   * - `text-danger` 异常色\r\n   */\r\n  className?: string;\r\n  /**\r\n   * 合并列\r\n   */\r\n  colSpan?: number;\r\n  /**\r\n   * 数字格式，`type=number` 有效\r\n   */\r\n  numberDigits?: string;\r\n  /**\r\n   * 日期格式，`type=date` 有效，（默认：YYYY-MM-DD HH:mm）\r\n   */\r\n  dateFormat?: string;\r\n  /**\r\n   * 真值条件，`type=yn` 有效，（默认：`true`）\r\n   */\r\n  ynTruth?: any;\r\n  /**\r\n   * 徽章 `true` 时文本，`type=yn` 有效，（默认：是）\r\n   */\r\n  ynYes?: string;\r\n  /**\r\n   * 徽章 `false` 时文本，`type=yn` 有效，（默认：否）\r\n   */\r\n  ynNo?: string;\r\n  /**\r\n   * 是否允许导出，默认 `true`\r\n   */\r\n  exported?: boolean;\r\n  /** 权限，等同 `can()` 参数值 */\r\n  acl?: any;\r\n  /** 当不存在数据时以默认值替代 */\r\n  default?: string;\r\n  /**\r\n   * 固定前后列，当指定时务必指定 `width` 否则视为无效，有若干 **注意：** 项：\r\n   *\r\n   * - 若列头与内容不对齐或出现列重复，请指定列的宽度 `width`\r\n   * - 建议指定 `scroll.x` 为大于表格宽度的固定值或百分比。注意，且非固定列宽度之和不要超过 `scroll.x`\r\n   */\r\n  fixed?: 'left' | 'right';\r\n\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 选择功能配置\r\n */\r\nexport interface SimpleTableSelection {\r\n  /**\r\n   * 选择项显示的文字\r\n   */\r\n  text: string;\r\n  /**\r\n   * 选择项点击回调\r\n   */\r\n  select: Function;\r\n  /** 权限，等同 `can()` 参数值 */\r\n  acl?: any;\r\n}\r\n\r\n/**\r\n * 过滤项配置\r\n */\r\nexport interface SimpleTableFilter {\r\n  /**\r\n   * 文本\r\n   */\r\n  text: string;\r\n  /**\r\n   * 值\r\n   */\r\n  value?: any;\r\n  /**\r\n   * 是否选中\r\n   */\r\n  checked?: boolean;\r\n  /** 权限，等同 `can()` 参数值 */\r\n  acl?: any;\r\n\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 按钮配置\r\n */\r\nexport interface SimpleTableButton {\r\n  /**\r\n   * 文本\r\n   */\r\n  text: string;\r\n  /**\r\n   * 文本 i18n\r\n   */\r\n  i18n?: string;\r\n  /**\r\n   * 格式化文本，较高调用频率，请勿过多复杂计算免得产生性能问题\r\n   */\r\n  format?: (record: any, btn: SimpleTableButton) => string;\r\n  /**\r\n   * 按钮类型\r\n   * - `none` 无任何互动\r\n   * - `del` 删除，默认开启 `pop: true`\r\n   * - `modal` 对话框，需要指定 `component` 才会生效\r\n   * - `static` 静态对话框，需要指定 `component` 才会生效\r\n   */\r\n  type?: 'none' | 'del' | 'modal' | 'static';\r\n  /**\r\n   * 点击回调\r\n   * - Function\r\n   *  - `type=modal` 只会在当有传回值时才会触发回调\r\n   * - reload：重新刷新当前页\r\n   * - load：重新加载数据，并重置页码为：`1`\r\n   */\r\n  click?:\r\n    | 'reload'\r\n    | 'load'\r\n    | ((record: any, modal?: any, instance?: SimpleTableComponent) => void);\r\n  /**\r\n   * 是否需要气泡确认框\r\n   */\r\n  pop?: boolean;\r\n  /**\r\n   * 气泡确认框内容，默认 `确认删除吗？`\r\n   */\r\n  popTitle?: string;\r\n  /**\r\n   * 对话框组件对象，务必在 `entryComponents` 注册\r\n   */\r\n  component?: any;\r\n  /**\r\n   * 对话框参数\r\n   */\r\n  params?: (record: any) => Object;\r\n  /**\r\n   * 指定模态框目标组件的接收参数名，默认：`record`\r\n   */\r\n  paramName?: string;\r\n  /**\r\n   * 对话框大小，默认：`lg`\r\n   */\r\n  size?: 'sm' | 'lg' | '' | number;\r\n  /**\r\n   * 对话框额外参数，见 [ModalHelper](http://ng-alain.com/docs/service#ModalHelper)\r\n   */\r\n  modalOptions?: any;\r\n  /**\r\n   * 下拉菜单，当存在时以 `dropdown` 形式渲染\r\n   * - 只支持一级\r\n   */\r\n  children?: SimpleTableButton[];\r\n  /**\r\n   * 权限，等同 `can()` 参数值\r\n   */\r\n  acl?: any;\r\n  /**\r\n   * 条件表达式，较高调用频率，请勿过多复杂计算免得产生性能问题\r\n   */\r\n  if?: (\r\n    item: any,\r\n    btn: SimpleTableButton,\r\n    column: SimpleTableColumn,\r\n  ) => boolean;\r\n\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 回调数据\r\n */\r\nexport interface SimpleTableChange {\r\n  /**\r\n   * 回调类型\r\n   */\r\n  type: 'pi' | 'ps';\r\n  /**\r\n   * 当前页码\r\n   */\r\n  pi: number;\r\n  /**\r\n   * 每页数量\r\n   */\r\n  ps: number;\r\n  /**\r\n   * 数据总量\r\n   */\r\n  total: number;\r\n}\r\n\r\nexport interface ReqReNameType {\r\n  pi?: string;\r\n  ps?: string;\r\n}\r\n\r\nexport interface ResReNameType {\r\n  total?: string | string[];\r\n  list?: string | string[];\r\n}\r\n\r\nexport interface STExportOptions {\r\n  _d: any[];\r\n  _c: SimpleTableColumn[];\r\n  /** 工作溥名 */\r\n  sheetname?: string;\r\n  /** 文件名 */\r\n  filename?: string;\r\n  /** triggers when saveas */\r\n  callback?: (wb: any) => void;\r\n}\r\n"]}