/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, Inject, TemplateRef, ContentChild, } from '@angular/core';
import { ElementRef, Renderer2 } from '@angular/core';
import { DOCUMENT } from '@angular/platform-browser';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
var /** @type {?} */ CLS = 'ad-footer-toolbar';
var FooterToolbarComponent = /** @class */ (function () {
    function FooterToolbarComponent(el, renderer, doc) {
        this.el = el;
        this.renderer = renderer;
        this.doc = doc;
        this._errorCollect = false;
    }
    Object.defineProperty(FooterToolbarComponent.prototype, "errorCollect", {
        get: /**
         * @return {?}
         */
        function () {
            return this._errorCollect;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._errorCollect = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FooterToolbarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        (/** @type {?} */ (this.el.nativeElement)).classList.add(CLS);
        this.renderer.addClass(this.el.nativeElement, CLS);
        this.doc.querySelector('body').classList.add("has-" + CLS);
    };
    /**
     * @return {?}
     */
    FooterToolbarComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.doc.querySelector('body').classList.remove("has-" + CLS);
    };
    FooterToolbarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'footer-toolbar',
                    template: "\n  <div class=\"left\"><ng-container *ngIf=\"extra\" [ngTemplateOutlet]=\"extra\"></ng-container></div>\n  <div class=\"right\">\n    <error-collect *ngIf=\"errorCollect\"></error-collect>\n    <ng-content></ng-content>\n  </div>\n  ",
                    preserveWhitespaces: false,
                },] },
    ];
    /** @nocollapse */
    FooterToolbarComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },
    ]; };
    FooterToolbarComponent.propDecorators = {
        "errorCollect": [{ type: Input },],
        "extra": [{ type: ContentChild, args: ['extra',] },],
    };
    return FooterToolbarComponent;
}());
export { FooterToolbarComponent };
function FooterToolbarComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    FooterToolbarComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    FooterToolbarComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    FooterToolbarComponent.propDecorators;
    /** @type {?} */
    FooterToolbarComponent.prototype._errorCollect;
    /** @type {?} */
    FooterToolbarComponent.prototype.extra;
    /** @type {?} */
    FooterToolbarComponent.prototype.el;
    /** @type {?} */
    FooterToolbarComponent.prototype.renderer;
    /** @type {?} */
    FooterToolbarComponent.prototype.doc;
}
//# sourceMappingURL=footer-toolbar.component.js.map