/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
import { XlsxService } from './xlsx.service';
var XlsxDirective = /** @class */ (function () {
    function XlsxDirective(srv) {
        this.srv = srv;
    }
    /**
     * @return {?}
     */
    XlsxDirective.prototype._click = /**
     * @return {?}
     */
    function () {
        this.srv.export(this.data);
    };
    XlsxDirective.decorators = [
        { type: Directive, args: [{ selector: '[xlsx]' },] },
    ];
    /** @nocollapse */
    XlsxDirective.ctorParameters = function () { return [
        { type: XlsxService, },
    ]; };
    XlsxDirective.propDecorators = {
        "data": [{ type: Input, args: ['xlsx',] },],
        "_click": [{ type: HostListener, args: ['click',] },],
    };
    return XlsxDirective;
}());
export { XlsxDirective };
function XlsxDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    XlsxDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    XlsxDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    XlsxDirective.propDecorators;
    /** @type {?} */
    XlsxDirective.prototype.data;
    /** @type {?} */
    XlsxDirective.prototype.srv;
}
//# sourceMappingURL=xlsx.directive.js.map