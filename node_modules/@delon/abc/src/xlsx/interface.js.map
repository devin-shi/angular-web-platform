{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../../../packages/abc/xlsx/interface.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,CAAC,qBAAM,cAAc,GAAG,IAAI,cAAc,CAAa,gBAAgB,CAAC,CAAC","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const DA_XLSX_CONFIG = new InjectionToken<XlsxConfig>('DA_XLSX_CONFIG');\r\n\r\nexport interface XlsxConfig {\r\n  /**\r\n   * Xlsx library path\r\n   * @default //cdn.bootcss.com/xlsx/0.11.17/xlsx.full.min.js\r\n   */\r\n  url?: string;\r\n  /**\r\n   * Defines which Xlsx optional modules should get loaded, e.g:\r\n   * `[ '//cdn.bootcss.com/xlsx/0.11.14/cpexcel.js' ]`\r\n   */\r\n  modules?: string[];\r\n}\r\n\r\nexport interface XlsxExportOptions {\r\n  /**\r\n   * worksheets in the workbook, e.g:\r\n   * - `{ Sheet1: { A1: { t:\"n\", v:10000 } } }`\r\n   * - `[['1'], [1]]`\r\n   */\r\n  sheets: { [sheet: string]: any } | XlsxExportSheet[];\r\n  /** save file name, default: `export.xlsx` */\r\n  filename?: string;\r\n  opts?: any;\r\n  /** triggers when saveas */\r\n  callback?: (wb: any) => void;\r\n}\r\n\r\nexport interface XlsxExportSheet {\r\n  /** arrays to a worksheet */\r\n  data: any[][];\r\n  /** sheet name */\r\n  name?: string;\r\n}\r\n"]}