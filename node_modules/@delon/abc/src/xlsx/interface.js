/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { InjectionToken } from '@angular/core';
export var /** @type {?} */ DA_XLSX_CONFIG = new InjectionToken('DA_XLSX_CONFIG');
/**
 * @record
 */
export function XlsxConfig() { }
function XlsxConfig_tsickle_Closure_declarations() {
    /**
     * Xlsx library path
     * \@default //cdn.bootcss.com/xlsx/0.11.17/xlsx.full.min.js
     * @type {?|undefined}
     */
    XlsxConfig.prototype.url;
    /**
     * Defines which Xlsx optional modules should get loaded, e.g:
     * `[ '//cdn.bootcss.com/xlsx/0.11.14/cpexcel.js' ]`
     * @type {?|undefined}
     */
    XlsxConfig.prototype.modules;
}
/**
 * @record
 */
export function XlsxExportOptions() { }
function XlsxExportOptions_tsickle_Closure_declarations() {
    /**
     * worksheets in the workbook, e.g:
     * - `{ Sheet1: { A1: { t:"n", v:10000 } } }`
     * - `[['1'], [1]]`
     * @type {?}
     */
    XlsxExportOptions.prototype.sheets;
    /**
     * save file name, default: `export.xlsx`
     * @type {?|undefined}
     */
    XlsxExportOptions.prototype.filename;
    /** @type {?|undefined} */
    XlsxExportOptions.prototype.opts;
    /**
     * triggers when saveas
     * @type {?|undefined}
     */
    XlsxExportOptions.prototype.callback;
}
/**
 * @record
 */
export function XlsxExportSheet() { }
function XlsxExportSheet_tsickle_Closure_declarations() {
    /**
     * arrays to a worksheet
     * @type {?}
     */
    XlsxExportSheet.prototype.data;
    /**
     * sheet name
     * @type {?|undefined}
     */
    XlsxExportSheet.prototype.name;
}
//# sourceMappingURL=interface.js.map