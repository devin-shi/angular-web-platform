{"version":3,"file":"qr.component.js","sourceRoot":"","sources":["../../../../../packages/abc/qr/qr.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,uBAAuB,EAEvB,iBAAiB,EAEjB,WAAW,EACX,MAAM,EACN,YAAY,GACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;;IAsCvC,YAAY;IAEZ,qBACE,GAAe,EACP,KACA;QADA,QAAG,GAAH,GAAG;QACH,OAAE,GAAF,EAAE;;;;sBAPO,IAAI,YAAY,EAAU;QAS3C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC1B;;;;;IAED,iCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChC;;gBA5DF,SAAS,SAAC;oBACT,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,mCAET;oBACD,mBAAmB,EAAE,KAAK;oBAC1B,IAAI,EAAE,EAAE,eAAe,EAAE,MAAM,EAAE;oBACjC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAVQ,UAAU;gBADV,SAAS;gBANhB,iBAAiB;;;+BAuBhB,KAAK;oCAEL,KAAK;+BAEL,KAAK;oCAEL,KAAK;0BAEL,KAAK;yBAEL,KAAK;4BAEL,KAAK;yBAEL,WAAW,SAAC,iBAAiB,cAC7B,WAAW,SAAC,gBAAgB,cAC5B,KAAK;0BAEL,KAAK;2BAEL,MAAM;;sBAhDT;;SAuBa,WAAW","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  OnChanges,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  HostBinding,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { QRService } from './qr.service';\r\nimport { AdQRConfig } from './qr.config';\r\n\r\n@Component({\r\n  selector: 'qr',\r\n  template: `\r\n  <img src=\"{{dataURL}}\">\r\n  `,\r\n  preserveWhitespaces: false,\r\n  host: { '[class.ad-qr]': 'true' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class QRComponent implements OnChanges {\r\n  dataURL: string;\r\n  // region: fields\r\n\r\n  /** 背景 */\r\n  @Input() background: string;\r\n  /** 背景透明级别，范围：`0-1` 之间 */\r\n  @Input() backgroundAlpha: number;\r\n  /** 前景 */\r\n  @Input() foreground: string;\r\n  /** 前景透明级别，范围：`0-1` 之间 */\r\n  @Input() foregroundAlpha: number;\r\n  /** 误差校正级别 */\r\n  @Input() level: string;\r\n  /** 二维码输出图片MIME类型 */\r\n  @Input() mime: string;\r\n  /** 内边距（单位：px） */\r\n  @Input() padding: number;\r\n  /** 大小（单位：px） */\r\n  @HostBinding('style.height.px')\r\n  @HostBinding('style.width.px')\r\n  @Input() size: number;\r\n  /** 值 */\r\n  @Input() value: string;\r\n  /** 变更时回调 */\r\n  @Output() change = new EventEmitter<string>();\r\n\r\n  // endregion\r\n\r\n  constructor(\r\n    cog: AdQRConfig,\r\n    private srv: QRService,\r\n    private cd: ChangeDetectorRef,\r\n  ) {\r\n    Object.assign(this, cog);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.dataURL = this.srv.refresh({\r\n      background: this.background,\r\n      backgroundAlpha: this.backgroundAlpha,\r\n      foreground: this.foreground,\r\n      foregroundAlpha: this.foregroundAlpha,\r\n      level: this.level,\r\n      mime: this.mime,\r\n      padding: this.padding,\r\n      size: this.size,\r\n      value: this.value\r\n    });\r\n    this.cd.detectChanges();\r\n    this.change.emit(this.dataURL);\r\n  }\r\n}\r\n"]}