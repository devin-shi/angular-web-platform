{"version":3,"file":"time.widget.js","sourceRoot":"","sources":["../../../../../../../packages/form/src/widgets/time/time.widget.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,KAAK,MAAM,MAAM,iBAAiB,CAAC;;IA+BV,sCAAa;;;6BACtB,IAAI;;;;;;IAIzB,6BAAQ;;;IAAR;QACE,qBAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,WACd,CAAC,CAAC,EAAE,WACJ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ;YAC7B,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,UAAU,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG;YACP,aAAa,EAAE,EAAE,qBAAkB,UAAU;YAC7C,UAAU,EAAE,EAAE,kBAAe,IAAI;YACjC,SAAS,EAAE,EAAE,iBAAc,IAAI;YAC/B,gBAAgB,EAAE,EAAE,wBAAqB,IAAI,IAAI,EAAE;YACnD,mBAAmB,EAAE,EAAE,2BAAwB,KAAK;YACpD,QAAQ,EAAE,EAAE,gBAAa,CAAC;YAC1B,UAAU,EAAE,EAAE,oBAAiB,CAAC;YAChC,UAAU,EAAE,EAAE,kBAAe,CAAC;SAC/B,CAAC;KACH;;;;;IAED,0BAAK;;;;IAAL,UAAM,KAAU;QACd,EAAE,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,MAAM,CAAC;SACR;QACD,qBAAI,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;QAG1E,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;gBAAC,KAAK,IAAI,KAAK,CAAC;YAC5D,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;KACvB;;;;;IAED,4BAAO;;;;IAAP,UAAQ,KAAW;QACjB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,MAAM,CAAC;SACR;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,iBAAc,IAAI,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,GAAG,CACN,IAAI,EACJ,CAAC,EACD,CAAC,EACD,KAAK,CAAC,QAAQ,EAAE,EAChB,KAAK,CAAC,UAAU,EAAE,EAClB,KAAK,CAAC,UAAU,EAAE,CACnB,CACF,CAAC;YACF,MAAM,CAAC;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3C;;gBAvFF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,s3BAwBT;oBACD,mBAAmB,EAAE,KAAK;iBAC3B;;qBAhCD;EAiCgC,aAAa;SAAhC,UAAU","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport * as format from 'date-fns/format';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: ui.allowEmpty || true,\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: ui.hideDisabledOptions || false,\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: any) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(\n        Date.UTC(\n          1970,\n          0,\n          1,\n          value.getHours(),\n          value.getMinutes(),\n          value.getSeconds(),\n        ),\n      );\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n"]}