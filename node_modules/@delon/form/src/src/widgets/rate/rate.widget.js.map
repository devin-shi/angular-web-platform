{"version":3,"file":"rate.widget.js","sourceRoot":"","sources":["../../../../../../../packages/form/src/widgets/rate/rate.widget.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;;IAqBb,sCAAa;;;wBAKjC,KAAK;;;;;;IACf,6BAAQ;;;IAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,kBAAe,IAAI,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,iBAAc,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAK,CAAC;KAC/B;;;;IAED,4BAAO;;;IAAP;QACE,MAAM,CAAC,IAAI,CAAC,OAAO;YACjB,CAAC,CAAC,mBAAC,IAAI,CAAC,EAAE,QAAe,EAAC,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxE,CAAC,CAAC,EAAE,CAAC;KACR;;gBArCF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,6gBAcT;oBACD,mBAAmB,EAAE,KAAK;iBAC3B;;qBArBD;EAsBgC,aAAa;SAAhC,UAAU","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-rate',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-rate\r\n      [nzDisabled]=\"disabled\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzAllowClear]=\"allowClear\"\r\n      [nzAllowHalf]=\"allowHalf\"\r\n      [nzAutoFocus]=\"autoFocus\"\r\n      [nzCount]=\"count\"></nz-rate>\r\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RateWidget extends ControlWidget implements OnInit {\r\n  count: number;\r\n  allowHalf: boolean;\r\n  allowClear: boolean;\r\n  autoFocus: boolean;\r\n  hasText = false;\r\n  ngOnInit(): void {\r\n    this.count = this.schema.maximum || 5;\r\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\r\n    this.allowClear = this.ui.allowClear || true;\r\n    this.autoFocus = this.ui.autoFocus || false;\r\n    this.hasText = !!this.ui.text;\r\n  }\r\n\r\n  genText() {\r\n    return this.hasText\r\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\r\n      : '';\r\n  }\r\n}\r\n"]}