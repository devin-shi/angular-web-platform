{"version":3,"file":"slider.widget.js","sourceRoot":"","sources":["../../../../../../../packages/form/src/widgets/slider/slider.widget.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;;IA2BX,wCAAa;;;2BAiBhC,UAAC,KAAU;YACtB,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE;gBAAY,MAAM,CAAC,KAAI,CAAC,EAAE,cAAW,KAAK,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC;SACd;;;;;;IAbD,+BAAQ;;;IAAR;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,aAAU,IAAI,CAAC;QACnC,qBAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,YAAS,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;KACnE;;;;;IAOD,mCAAY;;;;IAAZ,UAAa,KAAU;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE;YAAc,IAAI,CAAC,EAAE,gBAAa,KAAK,CAAC,CAAC;KACrD;;gBAjDF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,ymBAoBT;oBACD,mBAAmB,EAAE,KAAK;iBAC3B;;uBA3BD;EA4BkC,aAAa;SAAlC,YAAY","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-slider',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-slider\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzRange]=\"ui.range\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzMarks]=\"marks\"\r\n      [nzDots]=\"ui.dots\"\r\n      [nzIncluded]=\"included\"\r\n      [nzVertical]=\"ui.vertical\"\r\n      [nzTipFormatter]=\"_formatter\"\r\n      (nzOnAfterChange)=\"_afterChange($event)\">\r\n    </nz-slider>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SliderWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  marks: any;\r\n  included: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.min = this.schema.minimum || 0;\r\n    this.max = this.schema.maximum || 100;\r\n    this.step = this.schema.multipleOf || 1;\r\n\r\n    this.marks = this.ui.marks || null;\r\n    const included = this.ui.included;\r\n    this.included = typeof included === 'undefined' ? true : included;\r\n  }\r\n\r\n  _formatter = (value: any) => {\r\n    if (this.ui.formatter) return this.ui.formatter(value);\r\n    return value;\r\n  }\r\n\r\n  _afterChange(value: any) {\r\n    if (this.ui.afterChange) this.ui.afterChange(value);\r\n  }\r\n}\r\n"]}