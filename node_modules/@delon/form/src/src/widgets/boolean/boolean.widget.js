/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ControlWidget } from '../../widget';
var BooleanWidget = /** @class */ (function (_super) {
    tslib_1.__extends(BooleanWidget, _super);
    function BooleanWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BooleanWidget.decorators = [
        { type: Component, args: [{
                    selector: 'sf-boolean',
                    template: "\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-switch\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzCheckedChildren]=\"ui.checkedChildren\"\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\n    </nz-switch>\n  </sf-item-wrap>",
                    preserveWhitespaces: false,
                },] },
    ];
    return BooleanWidget;
}(ControlWidget));
export { BooleanWidget };
function BooleanWidget_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    BooleanWidget.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    BooleanWidget.ctorParameters;
}
//# sourceMappingURL=boolean.widget.js.map