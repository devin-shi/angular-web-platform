{"version":3,"file":"form.property.js","sourceRoot":"","sources":["../../../../../../packages/form/src/model/form.property.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable:no-use-before-declare\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { map, distinctUntilChanged } from 'rxjs/operators';\r\nimport { combineLatest } from 'rxjs/observable/combineLatest';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { Widget } from '../widget';\r\nimport { isBlank } from '../utils';\r\n\r\nexport abstract class FormProperty {\r\n  schemaValidator: (value: any) => ErrorData[];\r\n  schema: SFSchema;\r\n  ui: SFUISchema | SFUISchemaItemRun;\r\n  formData: {};\r\n  _value: any = null;\r\n  widget: Widget<any>;\r\n  private _errors: ErrorData[] = null;\r\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\r\n  private _valueChanges = new BehaviorSubject<any>(null);\r\n  private _errorsChanges = new BehaviorSubject<any>(null);\r\n  private _visible = true;\r\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\r\n  private _root: PropertyGroup;\r\n  private _parent: PropertyGroup;\r\n  private _path: string;\r\n\r\n  constructor(\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    this.schema = schema;\r\n    this.ui = ui;\r\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\r\n      ingoreKeywords: this.ui.ingoreKeywords,\r\n    });\r\n    this.formData = formData || schema.default;\r\n    this._parent = parent;\r\n    if (parent) {\r\n      this._root = parent.root;\r\n    } else if (this instanceof PropertyGroup) {\r\n      this._root = <PropertyGroup>(<any>this);\r\n    }\r\n    this._path = path;\r\n  }\r\n\r\n  get valueChanges() {\r\n    return this._valueChanges;\r\n  }\r\n\r\n  get errorsChanges() {\r\n    return this._errorsChanges;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.schema.type;\r\n  }\r\n\r\n  get parent(): PropertyGroup {\r\n    return this._parent;\r\n  }\r\n\r\n  get root(): PropertyGroup {\r\n    return this._root || <PropertyGroup>(<any>this);\r\n  }\r\n\r\n  get path(): string {\r\n    return this._path;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  get errors() {\r\n    return this._errors;\r\n  }\r\n\r\n  get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  get valid() {\r\n    return this._errors === null;\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract setValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * 重置值，默认值为 `schema.default`\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract resetValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  abstract _hasValue(): boolean;\r\n\r\n  /**\r\n   *  @internal\r\n   */\r\n  abstract _updateValue(): any;\r\n\r\n  /**\r\n   * 更新值且校验数据\r\n   *\r\n   * @param [onlySelf=false] 是否包含上级字段\r\n   * @param [emitValueEvent=true] 是否触发值变更通知\r\n   */\r\n  updateValueAndValidity(\r\n    onlySelf = false,\r\n    emitValueEvent = true,\r\n    emitValidator = true,\r\n  ) {\r\n    this._updateValue();\r\n\r\n    if (emitValueEvent) {\r\n      this.valueChanges.next(this.value);\r\n    }\r\n\r\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\r\n    if (emitValidator && this.ui.liveValidate === true) {\r\n      this._runValidation();\r\n    }\r\n\r\n    if (this.parent && !onlySelf) {\r\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\r\n    }\r\n  }\r\n\r\n  /** 根据路径搜索表单属性 */\r\n  searchProperty(path: string): FormProperty {\r\n    let prop: FormProperty = this;\r\n    let base: PropertyGroup = null;\r\n\r\n    let result = null;\r\n    if (path[0] === '/') {\r\n      base = this.findRoot();\r\n      result = base.getProperty(path.substr(1));\r\n    } else {\r\n      while (result === null && prop.parent !== null) {\r\n        prop = base = prop.parent;\r\n        result = base.getProperty(path);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** 查找根表单属性 */\r\n  findRoot(): PropertyGroup {\r\n    let property: FormProperty = this;\r\n    while (property.parent !== null) {\r\n      property = property.parent;\r\n    }\r\n    return <PropertyGroup>property;\r\n  }\r\n\r\n  // region: process errors\r\n\r\n  private _isRequired(value: any) {\r\n    if (this.ui._required !== true) return false;\r\n    if (isBlank(value)) return true;\r\n    switch (this.type) {\r\n      case 'string':\r\n        return ('' + value).length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  _runValidation() {\r\n    let errors: ErrorData[];\r\n    // Should not via ajv validator of required fields\r\n    if (this._isRequired(this._value)) {\r\n      errors = [{ keyword: 'required' }];\r\n    } else {\r\n      errors = this.schemaValidator(this._value) || [];\r\n    }\r\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\r\n    if (typeof customValidator === 'function') {\r\n      const customErrors = customValidator(this.value, this, this.findRoot());\r\n      if (customErrors instanceof Observable) {\r\n        customErrors.subscribe(res => {\r\n          this.setCustomErrors(errors, res);\r\n          this.widget.detectChanges();\r\n        });\r\n        return;\r\n      }\r\n      this.setCustomErrors(errors, customErrors);\r\n      return;\r\n    }\r\n\r\n    this._errors = errors;\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\r\n    // fix error format\r\n    const hasCustomError = list != null && list.length > 0;\r\n    if (hasCustomError) {\r\n      list.forEach((err, idx: number) => {\r\n        if (!err.message)\r\n          throw new Error(\r\n            `自定义校验器必须至少返回一个 'message' 属性，用于表示错误文本`,\r\n          );\r\n        err._custom = true;\r\n      });\r\n    }\r\n    this._errors = this.mergeErrors(errors, list);\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\r\n    if (newErrors) {\r\n      if (Array.isArray(newErrors)) {\r\n        errors = errors.concat(...newErrors);\r\n      } else {\r\n        errors.push(newErrors);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\r\n    if (emitFormat && errors && !this.ui.onlyVisual) {\r\n      errors = errors.map((err: ErrorData) => {\r\n        let message =\r\n          err._custom === true && err.message\r\n            ? err.message\r\n            : (this.ui.errors || {})[err.keyword] ||\r\n              this.options.errors[err.keyword] ||\r\n              ``;\r\n\r\n        if (message && typeof message === 'function')\r\n          message = message(err) as string;\r\n\r\n        if (message) {\r\n          if (~(message as string).indexOf('{')) {\r\n            message = (message as string).replace(\r\n              /{([\\.a-z0-9]+)}/g,\r\n              (v: string, key: string) => err.params[key] || '',\r\n            );\r\n          }\r\n          err.message = message as string;\r\n        }\r\n        return err;\r\n      });\r\n    }\r\n    this._errors = errors;\r\n    this._errorsChanges.next(errors);\r\n    // Should send errors to parent field\r\n    if (this._parent) {\r\n      this._parent.setParentAndPlatErrors(errors, this.path);\r\n    }\r\n  }\r\n\r\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\r\n    this._objErrors[path] = errors;\r\n    const platErrors: ErrorData[] = [];\r\n    Object.keys(this._objErrors).forEach(p => {\r\n      const property = this.searchProperty(p);\r\n      if (property && !property.visible) return;\r\n      platErrors.push(...this._objErrors[p]);\r\n    });\r\n    this.setErrors(platErrors, false);\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: condition\r\n\r\n  private setVisible(visible: boolean) {\r\n    this._visible = visible;\r\n    this._visibilityChanges.next(visible);\r\n    // this.updateValueAndValidity();\r\n    // if (this.parent) {\r\n    //     this.parent.updateValueAndValidity(false, true);\r\n    // }\r\n  }\r\n\r\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\r\n  _bindVisibility() {\r\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\r\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\r\n      this.setVisible(false);\r\n    } else if (visibleIf !== undefined) {\r\n      const propertiesBinding = [];\r\n      for (const dependencyPath in visibleIf) {\r\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\r\n          const property = this.searchProperty(dependencyPath);\r\n          if (property) {\r\n            const valueCheck = property.valueChanges.pipe(\r\n              map((value: any) => {\r\n                const vi = visibleIf[dependencyPath];\r\n                if (typeof vi === 'function') return vi(value);\r\n                if (vi.indexOf('$ANY$') !== -1) {\r\n                  return value.length > 0;\r\n                } else {\r\n                  return vi.indexOf(value) !== -1;\r\n                }\r\n              }),\r\n            );\r\n            const visibilityCheck = property._visibilityChanges;\r\n            const and = combineLatest(\r\n              [valueCheck, visibilityCheck],\r\n              (v1: boolean, v2: boolean) => v1 && v2,\r\n            );\r\n            propertiesBinding.push(and);\r\n          } else {\r\n            console.warn(\r\n              `Can't find property ${dependencyPath} for visibility check of ${\r\n                this.path\r\n              }`,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      combineLatest(\r\n        propertiesBinding,\r\n        (...values: boolean[]) => values.indexOf(true) !== -1,\r\n      )\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(visible => this.setVisible(visible));\r\n    }\r\n  }\r\n\r\n  // endregion\r\n}\r\n\r\nexport abstract class PropertyGroup extends FormProperty {\r\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\r\n\r\n    let property = this.properties[propertyId];\r\n    if (\r\n      property !== null &&\r\n      subPathIdx !== -1 &&\r\n      property instanceof PropertyGroup\r\n    ) {\r\n      const subPath = path.substr(subPathIdx + 1);\r\n      property = (<PropertyGroup>property).getProperty(subPath);\r\n    }\r\n    return property;\r\n  }\r\n\r\n  forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\r\n    for (const propertyId in this.properties) {\r\n      if (this.properties.hasOwnProperty(propertyId)) {\r\n        const property = this.properties[propertyId];\r\n        fn(property, propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\r\n    this.forEachChild(child => {\r\n      fn(child);\r\n      if (child instanceof PropertyGroup) {\r\n        (<PropertyGroup>child).forEachChildRecursive(fn);\r\n      }\r\n    });\r\n  }\r\n\r\n  _bindVisibility() {\r\n    super._bindVisibility();\r\n    this._bindVisibilityRecursive();\r\n  }\r\n\r\n  private _bindVisibilityRecursive() {\r\n    this.forEachChildRecursive(property => {\r\n      property._bindVisibility();\r\n    });\r\n  }\r\n\r\n  isRoot() {\r\n    return this === this.root;\r\n  }\r\n}\r\n"]}