{"version":3,"file":"form.property.factory.js","sourceRoot":"","sources":["../../../../../../packages/form/src/model/form.property.factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { DelonFormConfig } from '../config';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { PropertyGroup, FormProperty } from './form.property';\r\nimport { NumberProperty } from './number.property';\r\nimport { StringProperty } from './string.property';\r\nimport { BooleanProperty } from './boolean.property';\r\nimport { ArrayProperty } from './array.property';\r\nimport { ObjectProperty } from './object.property';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { retrieveSchema } from '../utils';\r\n\r\nexport class FormPropertyFactory {\r\n  constructor(\r\n    private schemaValidatorFactory: SchemaValidatorFactory,\r\n    private options: DelonFormConfig,\r\n  ) {}\r\n\r\n  createProperty(\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup = null,\r\n    propertyId?: string,\r\n  ): FormProperty {\r\n    let newProperty = null;\r\n    let path = '';\r\n    if (parent) {\r\n      path += parent.path;\r\n      if (parent.parent !== null) {\r\n        path += '/';\r\n      }\r\n      if (parent.type === 'object') {\r\n        path += propertyId;\r\n      } else if (parent.type === 'array') {\r\n        path += (parent as ArrayProperty).tick++;\r\n      } else {\r\n        throw new Error(\r\n          'Instanciation of a FormProperty with an unknown parent type: ' +\r\n            parent.type,\r\n        );\r\n      }\r\n    } else {\r\n      path = '/';\r\n    }\r\n\r\n    if (schema.$ref) {\r\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\r\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\r\n    } else {\r\n      // fix required\r\n      if (\r\n        propertyId &&\r\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\r\n      )\r\n        ui._required = true;\r\n      // fix title\r\n      if (schema.title == null) schema.title = propertyId;\r\n      // fix date\r\n      if (\r\n        (schema.type === 'string' || schema.type === 'number') &&\r\n        !schema.format &&\r\n        !(ui as SFUISchemaItem).format\r\n      ) {\r\n        if ((ui as SFUISchemaItem).widget === 'date')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiDateStringFormat\r\n              : this.options.uiDateNumberFormat;\r\n        else if ((ui as SFUISchemaItem).widget === 'time')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiTimeStringFormat\r\n              : this.options.uiTimeNumberFormat;\r\n      }\r\n      switch (schema.type) {\r\n        case 'integer':\r\n        case 'number':\r\n          newProperty = new NumberProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'string':\r\n          newProperty = new StringProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'boolean':\r\n          newProperty = new BooleanProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'object':\r\n          newProperty = new ObjectProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'array':\r\n          newProperty = new ArrayProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        default:\r\n          throw new TypeError(`Undefined type ${schema.type}`);\r\n      }\r\n    }\r\n\r\n    if (newProperty instanceof PropertyGroup) {\r\n      this.initializeRoot(newProperty);\r\n    }\r\n\r\n    return newProperty;\r\n  }\r\n\r\n  private initializeRoot(rootProperty: PropertyGroup) {\r\n    // rootProperty.init();\r\n    rootProperty._bindVisibility();\r\n  }\r\n}\r\n"]}