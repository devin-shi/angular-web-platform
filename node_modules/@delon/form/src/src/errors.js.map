{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../packages/form/src/errors.ts"],"names":[],"mappings":";;;;AAGA,MAAM,CAAC,qBAAM,aAAa,GAAG;IAC3B,cAAc,EAAU,sCAAQ;IAChC,MAAM,EAAkB,2CAAa;IACrC,eAAe,EAAS,qCAAY;IACpC,oBAAoB,EAAI,wDAAW;IACnC,KAAK,EAAmB,iFAAqB;IAC7C,YAAY,EAAY,oFAA6B;IACrD,IAAI,EAAoB,0EAAc;IACtC,MAAM,EAAkB,gCAAO;;IAC/B,IAAI,EAAoB,uCAAc;IACtC,QAAQ,EAAgB,oBAAK;IAC7B,SAAS,EAAe,yCAAgB;IACxC,SAAS,EAAe,qDAAkB;IAC1C,OAAO,EAAiB,kCAAwB;IAChD,aAAa,EAAW,kCAAwB;IAChD,OAAO,EAAiB,kCAAwB;IAChD,aAAa,EAAW,kCAAwB;IAChD,QAAQ,EAAgB,+CAAiB;IACzC,QAAQ,EAAgB,+CAAiB;IACzC,aAAa,EAAW,qDAAkB;IAC1C,aAAa,EAAW,qDAAkB;IAC1C,UAAU,EAAc,0DAAuB;IAC/C,GAAG,EAAqB,+CAAoB;IAC5C,KAAK,EAAmB,oEAA0B;IAClD,OAAO,EAAiB,4CAAS;IACjC,WAAW,EAAa,qHAAgC;IACxD,MAAM,EAAkB,gCAAO;IAC/B,aAAa,EAAW,oDAAyB;IACjD,eAAe,EAAS,yEAA4B;IACpD,MAAM,EAAkB,uFAAmC;IAC3D,KAAK,EAAmB,sCAAQ;IAChC,QAAQ,EAAgB,wDAAW;IACnC,sBAAsB,EAAE,6DAA+B;IACvD,sBAAsB,EAAE,6DAA+B;IACvD,EAAE,EAAsB,2DAA2B;CACpD,CAAC","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { FormProperty, PropertyGroup } from './model/form.property';\r\n\r\nexport const ERRORSDEFAULT = {\r\n  'false schema':         `布尔模式出错`,\r\n  '$ref':                 `无法找到引用{ref}`,\r\n  additionalItems:        `不允许超过{ref}`,\r\n  additionalProperties:   `不允许有额外的属性`,\r\n  anyOf:                  `数据应为 anyOf 所指定的其中一个`,\r\n  dependencies:           `应当拥有属性{property}的依赖属性{deps}`,\r\n  enum:                   `应当是预设定的枚举值之一`,\r\n  format:                 `格式不正确`, // `应当匹配格式 \"{format}\"`,\r\n  type:                   `类型应当是 {type}`,\r\n  required:               `必填项`,\r\n  maxLength:              `至多 {limit} 个字符`,\r\n  minLength:              `至少 {limit} 个字符以上`,\r\n  minimum:                `必须 {comparison}{limit}`,\r\n  formatMinimum:          `必须 {comparison}{limit}`,\r\n  maximum:                `必须 {comparison}{limit}`,\r\n  formatMaximum:          `必须 {comparison}{limit}`,\r\n  maxItems:               `不应多于 {limit} 个项`,\r\n  minItems:               `不应少于 {limit} 个项`,\r\n  maxProperties:          `不应多于 {limit} 个属性`,\r\n  minProperties:          `不应少于 {limit} 个属性`,\r\n  multipleOf:             `应当是 {multipleOf} 的整数倍`,\r\n  not:                    `不应当匹配 \"not\" schema`,\r\n  oneOf:                  `只能匹配一个 \"oneOf\" 中的 schema`,\r\n  pattern:                `数据格式不正确`,\r\n  uniqueItems:            `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\r\n  custom:                 `格式不正确`,\r\n  propertyNames:          `属性名 \"{propertyName}\" 无效`,\r\n  patternRequired:        `应当有属性匹配模式 {missingPattern}`,\r\n  switch:                 `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\r\n  const:                  `应当等于常量`,\r\n  contains:               `应当包含一个有效项`,\r\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\r\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\r\n  if:                     `应当匹配模式 \"{failingKeyword}\"`,\r\n};\r\n\r\nexport interface ErrorData {\r\n  keyword: string;\r\n  dataPath?: string;\r\n  schemaPath?: string;\r\n  params?: { [key: string]: any };\r\n  message?: string;\r\n  _custom?: boolean;\r\n}\r\n\r\nexport interface ErrorSchema {\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  liveValidate?: boolean;\r\n  /**\r\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\r\n   */\r\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\r\n  /**\r\n   * 是否立即呈现错误视觉，默认：`false`\r\n   */\r\n  firstVisual?: boolean;\r\n  /**\r\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\r\n   */\r\n  onlyVisual?: boolean;\r\n  /**\r\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\r\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\r\n   */\r\n  ingoreKeywords?: string[];\r\n  /**\r\n   * 自定义校验\r\n   */\r\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\r\n}\r\n"]}