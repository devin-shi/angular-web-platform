{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../../../../packages/form/src/widget.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  HostBinding,\r\n  Optional,\r\n  AfterViewInit,\r\n  Inject,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { di } from './utils';\r\nimport { FormProperty } from './model/form.property';\r\nimport { ArrayProperty } from './model/array.property';\r\nimport { ObjectProperty } from './model/object.property';\r\nimport { SFSchema } from './schema';\r\nimport { SFUISchemaItem } from './schema/ui';\r\nimport { ErrorData } from './errors';\r\nimport { SFComponent } from './sf.component';\r\n\r\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\r\n  formProperty: T;\r\n  error: string;\r\n  showError = false;\r\n  id = '';\r\n  schema: SFSchema;\r\n  ui: SFUISchemaItem;\r\n  firstVisual = false;\r\n\r\n  @HostBinding('class')\r\n  get cls() {\r\n    return this.ui.class || '';\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    if (typeof this.schema.readOnly !== 'undefined')\r\n      return this.schema.readOnly;\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\r\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.formProperty.errorsChanges\r\n      .pipe(filter(w => w != null))\r\n      .subscribe((errors: ErrorData[]) => {\r\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\r\n\r\n        // 不显示首次校验视觉\r\n        if (this.firstVisual) {\r\n          this.showError = errors.length > 0;\r\n          this.error = this.showError ? errors[0].message : '';\r\n\r\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\r\n        }\r\n        this.firstVisual = true;\r\n      });\r\n  }\r\n\r\n  setValue(value: any) {\r\n    this.formProperty.setValue(value, false);\r\n    if (this.ui.debug)\r\n      di('valueChanges', this.formProperty.path, this.formProperty);\r\n  }\r\n\r\n  get value() {\r\n    return this.formProperty.value;\r\n  }\r\n\r\n  detectChanges() {\r\n    this.cd.detectChanges();\r\n    this.formProperty.root.widget.cd.markForCheck();\r\n  }\r\n\r\n  abstract reset(value: any);\r\n}\r\n\r\nexport class ControlWidget extends Widget<FormProperty> {\r\n  reset(value: any) {}\r\n}\r\n\r\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n\r\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n"]}