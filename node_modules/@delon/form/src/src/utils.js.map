{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../packages/form/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { map, takeWhile } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { deepCopy } from '@delon/util';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\r\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\r\n\r\nexport const FORMATMAPS = {\r\n  'date-time': { widget: 'date' },\r\n  date: { widget: 'date' },\r\n  'full-date': { widget: 'date' },\r\n  time: { widget: 'time' },\r\n  'full-time': { widget: 'time' },\r\n  week: { widget: 'date' },\r\n  month: { widget: 'date' },\r\n  uri: { widget: 'upload' },\r\n  email: { widget: 'autocomplete', type: 'email' },\r\n  '': { widget: 'string' },\r\n};\r\n\r\nexport function isBlank(o: any) {\r\n  return o == null;\r\n}\r\n\r\nexport function di(...args) {\r\n  // tslint:disable-next-line:no-console\r\n  console.warn(...args);\r\n}\r\n\r\n/** 根据 `$ref` 查找 `definitions` */\r\nfunction findSchemaDefinition(\r\n  $ref: string,\r\n  definitions: SFSchemaDefinition = {},\r\n) {\r\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\r\n  if (match && match[1]) {\r\n    // parser JSON Pointer\r\n    const parts = match[1].split('/');\r\n    let current: any = definitions;\r\n    for (let part of parts) {\r\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\r\n      if (current.hasOwnProperty(part)) {\r\n        current = current[part];\r\n      } else {\r\n        throw new Error(`Could not find a definition for ${$ref}.`);\r\n      }\r\n    }\r\n    return current;\r\n  }\r\n  throw new Error(`Could not find a definition for ${$ref}.`);\r\n}\r\n\r\n/**\r\n * 取回Schema，并处理 `$ref` 的关系\r\n */\r\nexport function retrieveSchema(\r\n  schema: SFSchema,\r\n  definitions: SFSchemaDefinition = {},\r\n): SFSchema {\r\n  if (schema.hasOwnProperty('$ref')) {\r\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\r\n    // remove $ref property\r\n    const { $ref, ...localSchema } = schema;\r\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\r\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\r\n\r\n  if (!schema.if.properties)\r\n    throw new Error(`if: does not contain 'properties'`);\r\n\r\n  const allKeys = Object.keys(schema.properties),\r\n    ifKeys = Object.keys(schema.if.properties);\r\n  detectKey(allKeys, ifKeys);\r\n  detectKey(allKeys, schema.then.required);\r\n  schema.required = schema.required.concat(schema.then.required);\r\n  const hasElse = schema.hasOwnProperty('else');\r\n  if (hasElse) {\r\n    detectKey(allKeys, schema.else.required);\r\n    schema.required = schema.required.concat(schema.else.required);\r\n  }\r\n\r\n  const visibleIf: any = {};\r\n  const visibleElse: any = {};\r\n  ifKeys.forEach(key => {\r\n    const cond = schema.if.properties[key].enum;\r\n    visibleIf[key] = cond;\r\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\r\n  });\r\n\r\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\r\n  if (hasElse)\r\n    schema.else.required.forEach(\r\n      key => (ui[`$${key}`].visibleIf = visibleElse),\r\n    );\r\n\r\n  return schema;\r\n}\r\n\r\nfunction detectKey(keys: string[], detectKeys: string[]) {\r\n  detectKeys.forEach(key => {\r\n    if (!keys.includes(key)) {\r\n      throw new Error(`if: properties does not contain '${key}'`);\r\n    }\r\n  });\r\n}\r\n\r\nexport function orderProperties(properties: string[], order: string[]) {\r\n  if (!Array.isArray(order)) return properties;\r\n  const arrayToHash = arr =>\r\n    arr.reduce((prev, curr) => {\r\n      prev[curr] = true;\r\n      return prev;\r\n    }, {});\r\n  const errorPropList = arr =>\r\n    arr.length > 1\r\n      ? `properties '${arr.join(`', '`)}'`\r\n      : `property '${arr[0]}'`;\r\n\r\n  const propertyHash = arrayToHash(properties);\r\n  const orderHash = arrayToHash(order);\r\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\r\n  if (extraneous.length) {\r\n    throw new Error(\r\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\r\n    );\r\n  }\r\n  const rest = properties.filter(prop => !orderHash[prop]);\r\n  const restIndex = order.indexOf('*');\r\n  if (restIndex === -1) {\r\n    if (rest.length) {\r\n      throw new Error(\r\n        `ui schema order list does not contain ${errorPropList(rest)}`,\r\n      );\r\n    }\r\n    return order;\r\n  }\r\n  if (restIndex !== order.lastIndexOf('*')) {\r\n    throw new Error(\r\n      'ui schema order list contains more than one wildcard item',\r\n    );\r\n  }\r\n  const complete = [...order];\r\n  complete.splice(restIndex, 1, ...rest);\r\n  return complete;\r\n}\r\n\r\nexport function getUiOptions(uiSchema: SFUISchema) {\r\n  if (!uiSchema) return {};\r\n  return Object.keys(uiSchema)\r\n    .filter(key => !key.startsWith('$'))\r\n    .reduce(\r\n      (options, key) => {\r\n        return { ...options, [key]: uiSchema[key] };\r\n      },\r\n      <SFUISchemaItem>{},\r\n    );\r\n}\r\n\r\nexport function getEnum(list: any[], formData: any): SFSchemaEnum[] {\r\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\r\n  if (typeof list[0] !== 'object') {\r\n    list = list.map((item: any) => {\r\n      return <SFSchemaEnum>{ label: item, value: item };\r\n    });\r\n  }\r\n  if (formData) {\r\n    if (!Array.isArray(formData)) formData = [formData];\r\n    list.forEach((item: SFSchemaEnum) => {\r\n      if (~formData.indexOf(item.value)) item.checked = true;\r\n    });\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getCopyEnum(list: any[], formData: any) {\r\n  return getEnum(deepCopy(list || []), formData);\r\n}\r\n\r\nexport function getData(\r\n  schema: SFSchema,\r\n  ui: SFUISchemaItem,\r\n  formData: any,\r\n  asyncArgs?: any,\r\n): Observable<SFSchemaEnum[]> {\r\n  if (typeof ui.asyncData === 'function') {\r\n    return ui\r\n      .asyncData(asyncArgs)\r\n      .pipe(\r\n        takeWhile(() => ui.__destroy !== true),\r\n        map(list => getEnum(list, formData)),\r\n      );\r\n  }\r\n  return of(getCopyEnum(schema.enum, formData));\r\n}\r\n"]}