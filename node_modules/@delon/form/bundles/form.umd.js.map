{"version":3,"file":"form.umd.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/errors.ts","../../../../packages/form/src/config.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs/Observable';\r\nimport { FormProperty, PropertyGroup } from './model/form.property';\r\n\r\nexport const ERRORSDEFAULT = {\r\n  'false schema':         `布尔模式出错`,\r\n  '$ref':                 `无法找到引用{ref}`,\r\n  additionalItems:        `不允许超过{ref}`,\r\n  additionalProperties:   `不允许有额外的属性`,\r\n  anyOf:                  `数据应为 anyOf 所指定的其中一个`,\r\n  dependencies:           `应当拥有属性{property}的依赖属性{deps}`,\r\n  enum:                   `应当是预设定的枚举值之一`,\r\n  format:                 `格式不正确`, // `应当匹配格式 \"{format}\"`,\r\n  type:                   `类型应当是 {type}`,\r\n  required:               `必填项`,\r\n  maxLength:              `至多 {limit} 个字符`,\r\n  minLength:              `至少 {limit} 个字符以上`,\r\n  minimum:                `必须 {comparison}{limit}`,\r\n  formatMinimum:          `必须 {comparison}{limit}`,\r\n  maximum:                `必须 {comparison}{limit}`,\r\n  formatMaximum:          `必须 {comparison}{limit}`,\r\n  maxItems:               `不应多于 {limit} 个项`,\r\n  minItems:               `不应少于 {limit} 个项`,\r\n  maxProperties:          `不应多于 {limit} 个属性`,\r\n  minProperties:          `不应少于 {limit} 个属性`,\r\n  multipleOf:             `应当是 {multipleOf} 的整数倍`,\r\n  not:                    `不应当匹配 \"not\" schema`,\r\n  oneOf:                  `只能匹配一个 \"oneOf\" 中的 schema`,\r\n  pattern:                `数据格式不正确`,\r\n  uniqueItems:            `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\r\n  custom:                 `格式不正确`,\r\n  propertyNames:          `属性名 \"{propertyName}\" 无效`,\r\n  patternRequired:        `应当有属性匹配模式 {missingPattern}`,\r\n  switch:                 `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\r\n  const:                  `应当等于常量`,\r\n  contains:               `应当包含一个有效项`,\r\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\r\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\r\n  if:                     `应当匹配模式 \"{failingKeyword}\"`,\r\n};\r\n\r\nexport interface ErrorData {\r\n  keyword: string;\r\n  dataPath?: string;\r\n  schemaPath?: string;\r\n  params?: { [key: string]: any };\r\n  message?: string;\r\n  _custom?: boolean;\r\n}\r\n\r\nexport interface ErrorSchema {\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  liveValidate?: boolean;\r\n  /**\r\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\r\n   */\r\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\r\n  /**\r\n   * 是否立即呈现错误视觉，默认：`false`\r\n   */\r\n  firstVisual?: boolean;\r\n  /**\r\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\r\n   */\r\n  onlyVisual?: boolean;\r\n  /**\r\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\r\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\r\n   */\r\n  ingoreKeywords?: string[];\r\n  /**\r\n   * 自定义校验\r\n   */\r\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\r\n}\r\n","import { SFRenderSchema } from './schema/ui';\r\nimport { ERRORSDEFAULT } from './errors';\r\nimport { SFButton } from './interface';\r\n\r\nexport class DelonFormConfig {\r\n  /**\r\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`，默认：`[ 'type', 'enum' ]`\r\n   *\r\n   * - `type` 限定 Schema 中 `type` 类型\r\n   * - `enum` 限定应当是预设定的枚举值之一\r\n   */\r\n  ingoreKeywords?: string[] = ['type', 'enum'];\r\n  /**\r\n   * [ajv](http://epoberezkin.github.io/ajv/#options) 参数\r\n   */\r\n  ajv?: any;\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  liveValidate? = true;\r\n  /**\r\n   * 指定表单 `autocomplete` 值，默认：`on`\r\n   */\r\n  autocomplete?: 'on' | 'off' = null;\r\n  /**\r\n   * 是否立即呈现错误视觉，默认：`false`\r\n   */\r\n  firstVisual? = false;\r\n  /**\r\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\r\n   */\r\n  onlyVisual? = false;\r\n  /**\r\n   * 自定义通用错误信息\r\n   */\r\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\r\n  /**\r\n   * 元素组件大小，用于 `nzSize` 值\r\n   */\r\n  size?: 'default' | 'large' | 'small';\r\n  /**\r\n   * 按钮风格\r\n   */\r\n  button?: SFButton = {\r\n    submit: '提交',\r\n    submit_type: 'primary',\r\n    reset: '重置',\r\n    reset_type: 'default',\r\n  };\r\n  /**\r\n   * date小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`YYYY-MM-DD HH:mm:ss`\r\n   */\r\n  uiDateStringFormat? = 'YYYY-MM-DD HH:mm:ss';\r\n  /**\r\n   * date小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp\r\n   */\r\n  uiDateNumberFormat? = 'x';\r\n  /**\r\n   * time小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`HH:mm:ss`\r\n   */\r\n  uiTimeStringFormat? = 'HH:mm:ss';\r\n  /**\r\n   * time小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp，日期统一使用 `1970-01-01`\r\n   */\r\n  uiTimeNumberFormat? = 'x';\r\n}\r\n","import { Observable } from 'rxjs/Observable';\r\nimport { map, takeWhile } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { deepCopy } from '@delon/util';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\r\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\r\n\r\nexport const FORMATMAPS = {\r\n  'date-time': { widget: 'date' },\r\n  date: { widget: 'date' },\r\n  'full-date': { widget: 'date' },\r\n  time: { widget: 'time' },\r\n  'full-time': { widget: 'time' },\r\n  week: { widget: 'date' },\r\n  month: { widget: 'date' },\r\n  uri: { widget: 'upload' },\r\n  email: { widget: 'autocomplete', type: 'email' },\r\n  '': { widget: 'string' },\r\n};\r\n\r\nexport function isBlank(o: any) {\r\n  return o == null;\r\n}\r\n\r\nexport function di(...args) {\r\n  // tslint:disable-next-line:no-console\r\n  console.warn(...args);\r\n}\r\n\r\n/** 根据 `$ref` 查找 `definitions` */\r\nfunction findSchemaDefinition(\r\n  $ref: string,\r\n  definitions: SFSchemaDefinition = {},\r\n) {\r\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\r\n  if (match && match[1]) {\r\n    // parser JSON Pointer\r\n    const parts = match[1].split('/');\r\n    let current: any = definitions;\r\n    for (let part of parts) {\r\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\r\n      if (current.hasOwnProperty(part)) {\r\n        current = current[part];\r\n      } else {\r\n        throw new Error(`Could not find a definition for ${$ref}.`);\r\n      }\r\n    }\r\n    return current;\r\n  }\r\n  throw new Error(`Could not find a definition for ${$ref}.`);\r\n}\r\n\r\n/**\r\n * 取回Schema，并处理 `$ref` 的关系\r\n */\r\nexport function retrieveSchema(\r\n  schema: SFSchema,\r\n  definitions: SFSchemaDefinition = {},\r\n): SFSchema {\r\n  if (schema.hasOwnProperty('$ref')) {\r\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\r\n    // remove $ref property\r\n    const { $ref, ...localSchema } = schema;\r\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\r\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\r\n\r\n  if (!schema.if.properties)\r\n    throw new Error(`if: does not contain 'properties'`);\r\n\r\n  const allKeys = Object.keys(schema.properties),\r\n    ifKeys = Object.keys(schema.if.properties);\r\n  detectKey(allKeys, ifKeys);\r\n  detectKey(allKeys, schema.then.required);\r\n  schema.required = schema.required.concat(schema.then.required);\r\n  const hasElse = schema.hasOwnProperty('else');\r\n  if (hasElse) {\r\n    detectKey(allKeys, schema.else.required);\r\n    schema.required = schema.required.concat(schema.else.required);\r\n  }\r\n\r\n  const visibleIf: any = {};\r\n  const visibleElse: any = {};\r\n  ifKeys.forEach(key => {\r\n    const cond = schema.if.properties[key].enum;\r\n    visibleIf[key] = cond;\r\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\r\n  });\r\n\r\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\r\n  if (hasElse)\r\n    schema.else.required.forEach(\r\n      key => (ui[`$${key}`].visibleIf = visibleElse),\r\n    );\r\n\r\n  return schema;\r\n}\r\n\r\nfunction detectKey(keys: string[], detectKeys: string[]) {\r\n  detectKeys.forEach(key => {\r\n    if (!keys.includes(key)) {\r\n      throw new Error(`if: properties does not contain '${key}'`);\r\n    }\r\n  });\r\n}\r\n\r\nexport function orderProperties(properties: string[], order: string[]) {\r\n  if (!Array.isArray(order)) return properties;\r\n  const arrayToHash = arr =>\r\n    arr.reduce((prev, curr) => {\r\n      prev[curr] = true;\r\n      return prev;\r\n    }, {});\r\n  const errorPropList = arr =>\r\n    arr.length > 1\r\n      ? `properties '${arr.join(`', '`)}'`\r\n      : `property '${arr[0]}'`;\r\n\r\n  const propertyHash = arrayToHash(properties);\r\n  const orderHash = arrayToHash(order);\r\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\r\n  if (extraneous.length) {\r\n    throw new Error(\r\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\r\n    );\r\n  }\r\n  const rest = properties.filter(prop => !orderHash[prop]);\r\n  const restIndex = order.indexOf('*');\r\n  if (restIndex === -1) {\r\n    if (rest.length) {\r\n      throw new Error(\r\n        `ui schema order list does not contain ${errorPropList(rest)}`,\r\n      );\r\n    }\r\n    return order;\r\n  }\r\n  if (restIndex !== order.lastIndexOf('*')) {\r\n    throw new Error(\r\n      'ui schema order list contains more than one wildcard item',\r\n    );\r\n  }\r\n  const complete = [...order];\r\n  complete.splice(restIndex, 1, ...rest);\r\n  return complete;\r\n}\r\n\r\nexport function getUiOptions(uiSchema: SFUISchema) {\r\n  if (!uiSchema) return {};\r\n  return Object.keys(uiSchema)\r\n    .filter(key => !key.startsWith('$'))\r\n    .reduce(\r\n      (options, key) => {\r\n        return { ...options, [key]: uiSchema[key] };\r\n      },\r\n      <SFUISchemaItem>{},\r\n    );\r\n}\r\n\r\nexport function getEnum(list: any[], formData: any): SFSchemaEnum[] {\r\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\r\n  if (typeof list[0] !== 'object') {\r\n    list = list.map((item: any) => {\r\n      return <SFSchemaEnum>{ label: item, value: item };\r\n    });\r\n  }\r\n  if (formData) {\r\n    if (!Array.isArray(formData)) formData = [formData];\r\n    list.forEach((item: SFSchemaEnum) => {\r\n      if (~formData.indexOf(item.value)) item.checked = true;\r\n    });\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getCopyEnum(list: any[], formData: any) {\r\n  return getEnum(deepCopy(list || []), formData);\r\n}\r\n\r\nexport function getData(\r\n  schema: SFSchema,\r\n  ui: SFUISchemaItem,\r\n  formData: any,\r\n  asyncArgs?: any,\r\n): Observable<SFSchemaEnum[]> {\r\n  if (typeof ui.asyncData === 'function') {\r\n    return ui\r\n      .asyncData(asyncArgs)\r\n      .pipe(\r\n        takeWhile(() => ui.__destroy !== true),\r\n        map(list => getEnum(list, formData)),\r\n      );\r\n  }\r\n  return of(getCopyEnum(schema.enum, formData));\r\n}\r\n","import { Subject } from 'rxjs/Subject';\r\n\r\nexport class TerminatorService {\r\n  onDestroy: Subject<boolean>;\r\n\r\n  constructor() {\r\n    this.onDestroy = new Subject();\r\n  }\r\n\r\n  destroy() {\r\n    this.onDestroy.next(true);\r\n  }\r\n}\r\n","// tslint:disable:no-use-before-declare\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { map, distinctUntilChanged } from 'rxjs/operators';\r\nimport { combineLatest } from 'rxjs/observable/combineLatest';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { Widget } from '../widget';\r\nimport { isBlank } from '../utils';\r\n\r\nexport abstract class FormProperty {\r\n  schemaValidator: (value: any) => ErrorData[];\r\n  schema: SFSchema;\r\n  ui: SFUISchema | SFUISchemaItemRun;\r\n  formData: {};\r\n  _value: any = null;\r\n  widget: Widget<any>;\r\n  private _errors: ErrorData[] = null;\r\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\r\n  private _valueChanges = new BehaviorSubject<any>(null);\r\n  private _errorsChanges = new BehaviorSubject<any>(null);\r\n  private _visible = true;\r\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\r\n  private _root: PropertyGroup;\r\n  private _parent: PropertyGroup;\r\n  private _path: string;\r\n\r\n  constructor(\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    this.schema = schema;\r\n    this.ui = ui;\r\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\r\n      ingoreKeywords: this.ui.ingoreKeywords,\r\n    });\r\n    this.formData = formData || schema.default;\r\n    this._parent = parent;\r\n    if (parent) {\r\n      this._root = parent.root;\r\n    } else if (this instanceof PropertyGroup) {\r\n      this._root = <PropertyGroup>(<any>this);\r\n    }\r\n    this._path = path;\r\n  }\r\n\r\n  get valueChanges() {\r\n    return this._valueChanges;\r\n  }\r\n\r\n  get errorsChanges() {\r\n    return this._errorsChanges;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.schema.type;\r\n  }\r\n\r\n  get parent(): PropertyGroup {\r\n    return this._parent;\r\n  }\r\n\r\n  get root(): PropertyGroup {\r\n    return this._root || <PropertyGroup>(<any>this);\r\n  }\r\n\r\n  get path(): string {\r\n    return this._path;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  get errors() {\r\n    return this._errors;\r\n  }\r\n\r\n  get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  get valid() {\r\n    return this._errors === null;\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract setValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * 重置值，默认值为 `schema.default`\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract resetValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  abstract _hasValue(): boolean;\r\n\r\n  /**\r\n   *  @internal\r\n   */\r\n  abstract _updateValue(): any;\r\n\r\n  /**\r\n   * 更新值且校验数据\r\n   *\r\n   * @param [onlySelf=false] 是否包含上级字段\r\n   * @param [emitValueEvent=true] 是否触发值变更通知\r\n   */\r\n  updateValueAndValidity(\r\n    onlySelf = false,\r\n    emitValueEvent = true,\r\n    emitValidator = true,\r\n  ) {\r\n    this._updateValue();\r\n\r\n    if (emitValueEvent) {\r\n      this.valueChanges.next(this.value);\r\n    }\r\n\r\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\r\n    if (emitValidator && this.ui.liveValidate === true) {\r\n      this._runValidation();\r\n    }\r\n\r\n    if (this.parent && !onlySelf) {\r\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\r\n    }\r\n  }\r\n\r\n  /** 根据路径搜索表单属性 */\r\n  searchProperty(path: string): FormProperty {\r\n    let prop: FormProperty = this;\r\n    let base: PropertyGroup = null;\r\n\r\n    let result = null;\r\n    if (path[0] === '/') {\r\n      base = this.findRoot();\r\n      result = base.getProperty(path.substr(1));\r\n    } else {\r\n      while (result === null && prop.parent !== null) {\r\n        prop = base = prop.parent;\r\n        result = base.getProperty(path);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** 查找根表单属性 */\r\n  findRoot(): PropertyGroup {\r\n    let property: FormProperty = this;\r\n    while (property.parent !== null) {\r\n      property = property.parent;\r\n    }\r\n    return <PropertyGroup>property;\r\n  }\r\n\r\n  // region: process errors\r\n\r\n  private _isRequired(value: any) {\r\n    if (this.ui._required !== true) return false;\r\n    if (isBlank(value)) return true;\r\n    switch (this.type) {\r\n      case 'string':\r\n        return ('' + value).length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  _runValidation() {\r\n    let errors: ErrorData[];\r\n    // Should not via ajv validator of required fields\r\n    if (this._isRequired(this._value)) {\r\n      errors = [{ keyword: 'required' }];\r\n    } else {\r\n      errors = this.schemaValidator(this._value) || [];\r\n    }\r\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\r\n    if (typeof customValidator === 'function') {\r\n      const customErrors = customValidator(this.value, this, this.findRoot());\r\n      if (customErrors instanceof Observable) {\r\n        customErrors.subscribe(res => {\r\n          this.setCustomErrors(errors, res);\r\n          this.widget.detectChanges();\r\n        });\r\n        return;\r\n      }\r\n      this.setCustomErrors(errors, customErrors);\r\n      return;\r\n    }\r\n\r\n    this._errors = errors;\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\r\n    // fix error format\r\n    const hasCustomError = list != null && list.length > 0;\r\n    if (hasCustomError) {\r\n      list.forEach((err, idx: number) => {\r\n        if (!err.message)\r\n          throw new Error(\r\n            `自定义校验器必须至少返回一个 'message' 属性，用于表示错误文本`,\r\n          );\r\n        err._custom = true;\r\n      });\r\n    }\r\n    this._errors = this.mergeErrors(errors, list);\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\r\n    if (newErrors) {\r\n      if (Array.isArray(newErrors)) {\r\n        errors = errors.concat(...newErrors);\r\n      } else {\r\n        errors.push(newErrors);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\r\n    if (emitFormat && errors && !this.ui.onlyVisual) {\r\n      errors = errors.map((err: ErrorData) => {\r\n        let message =\r\n          err._custom === true && err.message\r\n            ? err.message\r\n            : (this.ui.errors || {})[err.keyword] ||\r\n              this.options.errors[err.keyword] ||\r\n              ``;\r\n\r\n        if (message && typeof message === 'function')\r\n          message = message(err) as string;\r\n\r\n        if (message) {\r\n          if (~(message as string).indexOf('{')) {\r\n            message = (message as string).replace(\r\n              /{([\\.a-z0-9]+)}/g,\r\n              (v: string, key: string) => err.params[key] || '',\r\n            );\r\n          }\r\n          err.message = message as string;\r\n        }\r\n        return err;\r\n      });\r\n    }\r\n    this._errors = errors;\r\n    this._errorsChanges.next(errors);\r\n    // Should send errors to parent field\r\n    if (this._parent) {\r\n      this._parent.setParentAndPlatErrors(errors, this.path);\r\n    }\r\n  }\r\n\r\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\r\n    this._objErrors[path] = errors;\r\n    const platErrors: ErrorData[] = [];\r\n    Object.keys(this._objErrors).forEach(p => {\r\n      const property = this.searchProperty(p);\r\n      if (property && !property.visible) return;\r\n      platErrors.push(...this._objErrors[p]);\r\n    });\r\n    this.setErrors(platErrors, false);\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: condition\r\n\r\n  private setVisible(visible: boolean) {\r\n    this._visible = visible;\r\n    this._visibilityChanges.next(visible);\r\n    // this.updateValueAndValidity();\r\n    // if (this.parent) {\r\n    //     this.parent.updateValueAndValidity(false, true);\r\n    // }\r\n  }\r\n\r\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\r\n  _bindVisibility() {\r\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\r\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\r\n      this.setVisible(false);\r\n    } else if (visibleIf !== undefined) {\r\n      const propertiesBinding = [];\r\n      for (const dependencyPath in visibleIf) {\r\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\r\n          const property = this.searchProperty(dependencyPath);\r\n          if (property) {\r\n            const valueCheck = property.valueChanges.pipe(\r\n              map((value: any) => {\r\n                const vi = visibleIf[dependencyPath];\r\n                if (typeof vi === 'function') return vi(value);\r\n                if (vi.indexOf('$ANY$') !== -1) {\r\n                  return value.length > 0;\r\n                } else {\r\n                  return vi.indexOf(value) !== -1;\r\n                }\r\n              }),\r\n            );\r\n            const visibilityCheck = property._visibilityChanges;\r\n            const and = combineLatest(\r\n              [valueCheck, visibilityCheck],\r\n              (v1: boolean, v2: boolean) => v1 && v2,\r\n            );\r\n            propertiesBinding.push(and);\r\n          } else {\r\n            console.warn(\r\n              `Can't find property ${dependencyPath} for visibility check of ${\r\n                this.path\r\n              }`,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      combineLatest(\r\n        propertiesBinding,\r\n        (...values: boolean[]) => values.indexOf(true) !== -1,\r\n      )\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(visible => this.setVisible(visible));\r\n    }\r\n  }\r\n\r\n  // endregion\r\n}\r\n\r\nexport abstract class PropertyGroup extends FormProperty {\r\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\r\n\r\n    let property = this.properties[propertyId];\r\n    if (\r\n      property !== null &&\r\n      subPathIdx !== -1 &&\r\n      property instanceof PropertyGroup\r\n    ) {\r\n      const subPath = path.substr(subPathIdx + 1);\r\n      property = (<PropertyGroup>property).getProperty(subPath);\r\n    }\r\n    return property;\r\n  }\r\n\r\n  forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\r\n    for (const propertyId in this.properties) {\r\n      if (this.properties.hasOwnProperty(propertyId)) {\r\n        const property = this.properties[propertyId];\r\n        fn(property, propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\r\n    this.forEachChild(child => {\r\n      fn(child);\r\n      if (child instanceof PropertyGroup) {\r\n        (<PropertyGroup>child).forEachChildRecursive(fn);\r\n      }\r\n    });\r\n  }\r\n\r\n  _bindVisibility() {\r\n    super._bindVisibility();\r\n    this._bindVisibilityRecursive();\r\n  }\r\n\r\n  private _bindVisibilityRecursive() {\r\n    this.forEachChildRecursive(property => {\r\n      property._bindVisibility();\r\n    });\r\n  }\r\n\r\n  isRoot() {\r\n    return this === this.root;\r\n  }\r\n}\r\n","import { FormProperty } from './form.property';\r\n\r\nexport abstract class AtomicProperty extends FormProperty {\r\n  abstract fallbackValue(): any;\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    if (value == null) {\r\n      if (this.schema.default !== undefined) {\r\n        value = this.schema.default;\r\n      } else {\r\n        value = this.fallbackValue();\r\n      }\r\n    }\r\n    this._value = value;\r\n\r\n    this.updateValueAndValidity(onlySelf, true);\r\n\r\n    if (this.widget) this.widget.reset(value);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return this.fallbackValue() !== this.value;\r\n  }\r\n\r\n  _updateValue() {}\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class NumberProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    if (typeof value === 'string') {\r\n      if (value.length) {\r\n        value =\r\n          value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\r\n      } else {\r\n        value = null;\r\n      }\r\n    }\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class StringProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return '';\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class BooleanProperty extends AtomicProperty {\r\n  fallbackValue(): any {\r\n    return null;\r\n  }\r\n}\r\n","import { PropertyGroup, FormProperty } from './form.property';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { ObjectProperty } from './object.property';\r\nimport { ErrorData } from '../errors';\r\n\r\nexport class ArrayProperty extends PropertyGroup {\r\n  tick = 1;\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.properties = [];\r\n  }\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\r\n    const list = this.properties as PropertyGroup[];\r\n    if (isNaN(pos) || pos >= list.length) return undefined;\r\n    const subPath = path.substr(subPathIdx + 1);\r\n    return list[pos].getProperty(subPath);\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    this._value = value || this.schema.default || [];\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(this._value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return true;\r\n  }\r\n\r\n  _updateValue() {\r\n    const value: any[] = [];\r\n    this.forEachChild((property: ObjectProperty, _) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value.push(Object.assign({}, property.formData, property.value));\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n\r\n  private addProperty(value: any) {\r\n    const newProperty = this.formPropertyFactory.createProperty(\r\n      this.schema.items,\r\n      this.ui.$items,\r\n      value,\r\n      this,\r\n    ) as ObjectProperty;\r\n    (<FormProperty[]>this.properties).push(newProperty);\r\n    return newProperty;\r\n  }\r\n\r\n  private resetProperties(value: any[]) {\r\n    for (const item of value) {\r\n      const property = this.addProperty(item);\r\n      property.resetValue(item, true);\r\n    }\r\n  }\r\n\r\n  private clearErrors(path?: string) {\r\n    if (path) delete this._objErrors[path];\r\n    else this._objErrors = {};\r\n  }\r\n\r\n  // region: actions\r\n\r\n  add(value: any = null): FormProperty {\r\n    const newProperty = this.addProperty(value);\r\n    newProperty.resetValue(value, false);\r\n    return newProperty;\r\n  }\r\n\r\n  remove(index: number) {\r\n    const list = <FormProperty[]>this.properties;\r\n    this.clearErrors(list[index].path);\r\n    list.splice(index, 1);\r\n    this.updateValueAndValidity(false, true);\r\n  }\r\n\r\n  // endregion\r\n}\r\n","import { PropertyGroup } from './form.property';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { orderProperties } from '../utils';\r\n\r\nexport class ObjectProperty extends PropertyGroup {\r\n  private _propertiesId: string[] = [];\r\n\r\n  get propertiesId() {\r\n    return this._propertiesId;\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.createProperties();\r\n  }\r\n\r\n  private createProperties() {\r\n    this.properties = {};\r\n    this._propertiesId = [];\r\n    let orderedProperties: string[];\r\n    try {\r\n      orderedProperties = orderProperties(\r\n        Object.keys(this.schema.properties),\r\n        this.ui.order,\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\r\n        e,\r\n      );\r\n    }\r\n    orderedProperties.forEach(propertyId => {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        const propertySchema = this.schema.properties[propertyId];\r\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(\r\n          this.schema.properties[propertyId],\r\n          this.ui['$' + propertyId],\r\n          (this.formData || {})[propertyId],\r\n          this,\r\n          propertyId,\r\n        );\r\n        this._propertiesId.push(propertyId);\r\n      }\r\n    });\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    for (const propertyId in value) {\r\n      if (value.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].setValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    value = value || this.schema.default || {};\r\n    for (const propertyId in this.schema.properties) {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].resetValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  _hasValue(): boolean {\r\n    return this.value != null && !!Object.keys(this.value).length;\r\n  }\r\n  _updateValue() {\r\n    const value: any = {};\r\n    this.forEachChild((property: any, propertyId: string) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value[propertyId] = property.value;\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n}\r\n","import { DelonFormConfig } from '../config';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { PropertyGroup, FormProperty } from './form.property';\r\nimport { NumberProperty } from './number.property';\r\nimport { StringProperty } from './string.property';\r\nimport { BooleanProperty } from './boolean.property';\r\nimport { ArrayProperty } from './array.property';\r\nimport { ObjectProperty } from './object.property';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { retrieveSchema } from '../utils';\r\n\r\nexport class FormPropertyFactory {\r\n  constructor(\r\n    private schemaValidatorFactory: SchemaValidatorFactory,\r\n    private options: DelonFormConfig,\r\n  ) {}\r\n\r\n  createProperty(\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup = null,\r\n    propertyId?: string,\r\n  ): FormProperty {\r\n    let newProperty = null;\r\n    let path = '';\r\n    if (parent) {\r\n      path += parent.path;\r\n      if (parent.parent !== null) {\r\n        path += '/';\r\n      }\r\n      if (parent.type === 'object') {\r\n        path += propertyId;\r\n      } else if (parent.type === 'array') {\r\n        path += (parent as ArrayProperty).tick++;\r\n      } else {\r\n        throw new Error(\r\n          'Instanciation of a FormProperty with an unknown parent type: ' +\r\n            parent.type,\r\n        );\r\n      }\r\n    } else {\r\n      path = '/';\r\n    }\r\n\r\n    if (schema.$ref) {\r\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\r\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\r\n    } else {\r\n      // fix required\r\n      if (\r\n        propertyId &&\r\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\r\n      )\r\n        ui._required = true;\r\n      // fix title\r\n      if (schema.title == null) schema.title = propertyId;\r\n      // fix date\r\n      if (\r\n        (schema.type === 'string' || schema.type === 'number') &&\r\n        !schema.format &&\r\n        !(ui as SFUISchemaItem).format\r\n      ) {\r\n        if ((ui as SFUISchemaItem).widget === 'date')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiDateStringFormat\r\n              : this.options.uiDateNumberFormat;\r\n        else if ((ui as SFUISchemaItem).widget === 'time')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiTimeStringFormat\r\n              : this.options.uiTimeNumberFormat;\r\n      }\r\n      switch (schema.type) {\r\n        case 'integer':\r\n        case 'number':\r\n          newProperty = new NumberProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'string':\r\n          newProperty = new StringProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'boolean':\r\n          newProperty = new BooleanProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'object':\r\n          newProperty = new ObjectProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'array':\r\n          newProperty = new ArrayProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        default:\r\n          throw new TypeError(`Undefined type ${schema.type}`);\r\n      }\r\n    }\r\n\r\n    if (newProperty instanceof PropertyGroup) {\r\n      this.initializeRoot(newProperty);\r\n    }\r\n\r\n    return newProperty;\r\n  }\r\n\r\n  private initializeRoot(rootProperty: PropertyGroup) {\r\n    // rootProperty.init();\r\n    rootProperty._bindVisibility();\r\n  }\r\n}\r\n","import { Inject, Optional } from '@angular/core';\r\nimport { DelonFormConfig } from './config';\r\nimport { ErrorData } from './errors';\r\nimport { SFSchema } from './schema';\r\n\r\ndeclare var Ajv: any;\r\n\r\nexport abstract class SchemaValidatorFactory {\r\n  abstract createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: SFSchema) => ErrorData[];\r\n}\r\n\r\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\r\n  protected ajv: any;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(DelonFormConfig)\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    super();\r\n    this.ajv = new Ajv(\r\n      Object.assign({}, options.ajv, {\r\n        errorDataPath: 'property',\r\n        allErrors: true,\r\n        jsonPointers: true,\r\n      }),\r\n    );\r\n    this.ajv.addFormat(\r\n      'data-url',\r\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\r\n    );\r\n    this.ajv.addFormat(\r\n      'color',\r\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\r\n    );\r\n  }\r\n\r\n  createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: any) => ErrorData[] {\r\n    const ingoreKeywords: string[] = []\r\n      .concat(this.options.ingoreKeywords)\r\n      .concat(extraOptions.ingoreKeywords);\r\n\r\n    return (value: any): ErrorData[] => {\r\n      try {\r\n        this.ajv.validate(schema, value);\r\n      } catch (e) {\r\n        // swallow errors thrown in ajv due to invalid schemas, these\r\n        // still get displayed\r\n      }\r\n      let errors = this.ajv.errors;\r\n      if (this.options && ingoreKeywords && errors) {\r\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\r\n      }\r\n      return errors;\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n} from '@angular/core';\r\nimport { Widget } from './widget';\r\n\r\nexport class WidgetRegistry {\r\n  private widgets: { [type: string]: any } = {};\r\n\r\n  private defaultWidget: any;\r\n\r\n  setDefault(widget: any) {\r\n    this.defaultWidget = widget;\r\n  }\r\n\r\n  register(type: string, widget: any) {\r\n    this.widgets[type] = widget;\r\n  }\r\n\r\n  has(type: string) {\r\n    return this.widgets.hasOwnProperty(type);\r\n  }\r\n\r\n  getType(type: string): any {\r\n    if (this.has(type)) {\r\n      return this.widgets[type];\r\n    }\r\n    return this.defaultWidget;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class WidgetFactory {\r\n  private resolver: ComponentFactoryResolver;\r\n  private registry: WidgetRegistry;\r\n\r\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\r\n    this.registry = registry;\r\n    this.resolver = resolver;\r\n  }\r\n\r\n  createWidget(\r\n    container: ViewContainerRef,\r\n    type: string,\r\n  ): ComponentRef<Widget<any>> {\r\n    if (!this.registry.has(type)) {\r\n      console.warn(`No widget for type \"${type}\"`);\r\n    }\r\n\r\n    const componentClass = this.registry.getType(type);\r\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<any>>(\r\n      componentClass,\r\n    );\r\n    return container.createComponent(componentFactory);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  Input,\r\n  SimpleChange,\r\n  Output,\r\n  EventEmitter,\r\n  TemplateRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { deepCopy } from '@delon/util';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport { di, retrieveSchema, FORMATMAPS, resolveIf } from './utils';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFSchema } from './schema/index';\r\nimport {\r\n  SFUISchema,\r\n  SFUISchemaItem,\r\n  SFRenderSchema,\r\n  SFUISchemaItemRun,\r\n} from './schema/ui';\r\nimport { FormProperty } from './model/form.property';\r\nimport { FormPropertyFactory } from './model/form.property.factory';\r\nimport { SchemaValidatorFactory } from './validator.factory';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { SFButton } from './interface';\r\nimport { ErrorData } from './errors';\r\n\r\nexport function useFactory(\r\n  schemaValidatorFactory: any,\r\n  options: DelonFormConfig,\r\n) {\r\n  return new FormPropertyFactory(schemaValidatorFactory, options);\r\n}\r\n\r\n@Component({\r\n  selector: 'sf, [sf]',\r\n  template: `\r\n  <ng-template #con><ng-content></ng-content></ng-template>\r\n  <form nz-form [nzLayout]=\"layout\" (submit)=\"onSubmit($event)\" [attr.autocomplete]=\"autocomplete\">\r\n    <sf-item [formProperty]=\"rootProperty\"></sf-item>\r\n    <ng-container *ngIf=\"button !== 'none'; else con\">\r\n      <nz-form-item [ngClass]=\"_btn.render.class\" class=\"sf-btns\" [fixed-label]=\"_btn.render.spanLabelFixed\">\r\n        <nz-col class=\"ant-form-item-control-wrapper\"\r\n          [nzSpan]=\"_btn.render.grid.span\" [nzOffset]=\"_btn.render.grid.offset\"\r\n          [nzXs]=\"_btn.render.grid.xs\" [nzSm]=\"_btn.render.grid.sm\" [nzMd]=\"_btn.render.grid.md\"\r\n          [nzLg]=\"_btn.render.grid.lg\" [nzXl]=\"_btn.render.grid.xl\">\r\n          <div class=\"ant-form-item-control\">\r\n            <ng-container *ngIf=\"button; else con\">\r\n              <button type=\"submit\" nz-button [nzType]=\"_btn.submit_type\" [disabled]=\"liveValidate && !valid\">{{_btn.submit}}</button>\r\n              <button *ngIf=\"_btn.reset\" (click)=\"reset()\" type=\"button\" nz-button [nzType]=\"_btn.reset_type\">{{_btn.reset}}</button>\r\n            </ng-container>\r\n          </div>\r\n        </nz-col>\r\n      </nz-form-item>\r\n    </ng-container>\r\n  </form>`,\r\n  providers: [\r\n    WidgetFactory,\r\n    {\r\n      provide: FormPropertyFactory,\r\n      useFactory: useFactory,\r\n      deps: [SchemaValidatorFactory, DelonFormConfig],\r\n    },\r\n    TerminatorService,\r\n  ],\r\n  host: {\r\n    '[class.sf]': 'true',\r\n    '[class.sf-search]': `mode === 'search'`,\r\n    '[class.sf-edit]': `mode === 'edit'`,\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\r\n  rootProperty: FormProperty = null;\r\n  _formData: any;\r\n  _btn: SFButton;\r\n  _schema: SFSchema;\r\n  _ui: SFUISchema;\r\n  private _item: any;\r\n  private _valid = true;\r\n  private _defUi: SFUISchemaItem;\r\n  private _inited = false;\r\n\r\n  // region: fields\r\n\r\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\r\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\r\n\r\n  /** JSON Schema */\r\n  @Input() schema: SFSchema;\r\n\r\n  /** UI Schema */\r\n  @Input() ui: SFUISchema;\r\n\r\n  /** 表单默认值 */\r\n  @Input() formData: {};\r\n\r\n  /**\r\n   * 按钮\r\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\r\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\r\n   * - 使用固定 `label` 标签宽度时，若无 `render.class` 则默认为居中状态\r\n   */\r\n  @Input() button: SFButton | 'none' = {};\r\n\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  @Input()\r\n  get liveValidate() {\r\n    return this._liveValidate;\r\n  }\r\n  set liveValidate(value: any) {\r\n    this._liveValidate = coerceBooleanProperty(value);\r\n  }\r\n  private _liveValidate = true;\r\n\r\n  /** 指定表单 `autocomplete` 值 */\r\n  @Input() autocomplete: 'on' | 'off';\r\n\r\n  /** 立即显示错误视觉 */\r\n  @Input()\r\n  get firstVisual() {\r\n    return this._firstVisual;\r\n  }\r\n  set firstVisual(value: any) {\r\n    this._firstVisual = coerceBooleanProperty(value);\r\n  }\r\n  private _firstVisual = true;\r\n\r\n  /** 表单模式 */\r\n  @Input()\r\n  set mode(value: 'default' | 'search' | 'edit') {\r\n    switch (value) {\r\n      case 'search':\r\n        this.layout = 'inline';\r\n        this.firstVisual = false;\r\n        this.liveValidate = false;\r\n        if (this._btn) this._btn.submit = '搜索';\r\n        break;\r\n      case 'edit':\r\n        this.layout = 'horizontal';\r\n        this.firstVisual = false;\r\n        this.liveValidate = true;\r\n        if (this._btn) this._btn.submit = '保存';\r\n        break;\r\n    }\r\n    this._mode = value;\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  private _mode: 'default' | 'search' | 'edit';\r\n\r\n  /** 数据变更时回调 */\r\n  @Output() formChange = new EventEmitter<{}>();\r\n\r\n  /** 提交表单时回调 */\r\n  @Output() formSubmit = new EventEmitter<{}>();\r\n\r\n  /** 重置表单时回调 */\r\n  @Output() formReset = new EventEmitter<{}>();\r\n\r\n  /** 表单校验结果回调 */\r\n  @Output() formError = new EventEmitter<ErrorData[]>();\r\n\r\n  // endregion\r\n\r\n  /** 表单校验状态 */\r\n  get valid(): boolean {\r\n    return this._valid;\r\n  }\r\n\r\n  /** 表单值 */\r\n  get value(): any {\r\n    return this._item;\r\n  }\r\n\r\n  onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!this.liveValidate) this.validator();\r\n    if (!this.valid) return;\r\n    this.formSubmit.emit(this.value);\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    private terminator: TerminatorService,\r\n    private options: DelonFormConfig,\r\n    private cd: ChangeDetectorRef,\r\n  ) {\r\n    this.liveValidate = options.liveValidate;\r\n    this.firstVisual = options.firstVisual;\r\n    this.autocomplete = options.autocomplete;\r\n  }\r\n\r\n  private coverProperty() {\r\n    const isHorizontal = this.layout === 'horizontal';\r\n    const _schema = deepCopy(this.schema);\r\n    const { definitions } = _schema;\r\n\r\n    const inFn = (\r\n      schema: SFSchema,\r\n      parentSchema: SFSchema,\r\n      uiSchema: SFUISchemaItemRun,\r\n      parentUiSchema: SFUISchemaItemRun,\r\n      uiRes: SFUISchemaItemRun,\r\n    ) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const uiKey = `$${key}`;\r\n        const property = retrieveSchema(\r\n          schema.properties[key] as SFSchema,\r\n          definitions,\r\n        );\r\n        const ui = Object.assign(\r\n          { widget: property.type },\r\n          property.format && FORMATMAPS[property.format],\r\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\r\n          !property.ui &&\r\n          Array.isArray(property.enum) &&\r\n          property.enum.length > 0\r\n            ? { widget: 'select' }\r\n            : null,\r\n          this._defUi,\r\n          property.ui,\r\n          uiSchema[uiKey],\r\n        ) as SFUISchemaItemRun;\r\n        // 继承父节点布局属性\r\n        if (isHorizontal) {\r\n          if (parentUiSchema.spanLabelFixed) {\r\n            if (!ui.spanLabelFixed)\r\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\r\n          } else {\r\n            if (!ui.spanLabel)\r\n              ui.spanLabel =\r\n                typeof parentUiSchema.spanLabel === 'undefined'\r\n                  ? 5\r\n                  : parentUiSchema.spanLabel;\r\n            if (!ui.spanControl)\r\n              ui.spanControl =\r\n                typeof parentUiSchema.spanControl === 'undefined'\r\n                  ? 19\r\n                  : parentUiSchema.spanControl;\r\n            if (!ui.offsetControl)\r\n              ui.offsetControl =\r\n                typeof parentUiSchema.offsetControl === 'undefined'\r\n                  ? null\r\n                  : parentUiSchema.offsetControl;\r\n          }\r\n        } else {\r\n          ui.spanLabel = null;\r\n          ui.spanControl = null;\r\n          ui.offsetControl = null;\r\n        }\r\n\r\n        uiRes[uiKey] = ui;\r\n        delete property.ui;\r\n\r\n        if (property.items) {\r\n          uiRes[uiKey]['$items'] = uiRes[uiKey]['$items'] || {};\r\n          inFn(\r\n            property.items,\r\n            property.items,\r\n            (uiSchema[uiKey] || {})['$items'] || {},\r\n            ui,\r\n            uiRes[uiKey]['$items'],\r\n          );\r\n        }\r\n\r\n        if (property.properties && Object.keys(property.properties).length) {\r\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const property = schema.properties[key];\r\n        const uiKey = `$${key}`;\r\n        resolveIf(property, ui[uiKey]);\r\n        if (property.items) {\r\n          inIfFn(property.items, ui[uiKey].$items);\r\n        }\r\n        if (property.properties) {\r\n          inIfFn(property, ui[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.ui == null) this.ui = {};\r\n    this._defUi = Object.assign(\r\n      <SFUISchemaItem>{\r\n        onlyVisual: this.options.onlyVisual,\r\n        size: this.options.size,\r\n        liveValidate: this.liveValidate,\r\n        firstVisual: this.firstVisual,\r\n      },\r\n      _schema.ui,\r\n      this.ui['*'],\r\n    );\r\n\r\n    // root\r\n    this._ui = Object.assign({}, this._defUi);\r\n\r\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\r\n\r\n    // cond\r\n    resolveIf(_schema, this._ui);\r\n    inIfFn(_schema, this._ui);\r\n\r\n    this._schema = _schema;\r\n\r\n    if (this._ui.debug) di('cover schema & ui', this._ui, _schema);\r\n  }\r\n\r\n  private coverButtonProperty() {\r\n    this._btn = Object.assign({ render: {} }, this.options.button, this.button);\r\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\r\n    if (this.layout === 'horizontal') {\r\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\r\n      if (!this._btn.render.grid) {\r\n        this._btn.render.grid = {\r\n          offset: btnUi.spanLabel,\r\n          span: btnUi.spanControl,\r\n        };\r\n      }\r\n      // fixed label\r\n      if (!this._btn.render.spanLabelFixed) {\r\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\r\n      }\r\n      // 固定标签宽度时，若不指定样式，则默认居中\r\n      if (\r\n        !this._btn.render.class &&\r\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\r\n      ) {\r\n        this._btn.render.class = 'text-center';\r\n      }\r\n    } else {\r\n      this._btn.render.grid = {};\r\n    }\r\n    if (this._mode) this.mode = this._mode;\r\n    if (this._ui.debug) di('button property', this._btn);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._inited = true;\r\n    this.validator();\r\n  }\r\n\r\n  ngOnChanges(\r\n    changes: { [P in keyof this]?: SimpleChange } & SimpleChanges,\r\n  ): void {\r\n    this.refreshSchema();\r\n  }\r\n\r\n  /** @internal */\r\n  _addTpl(path: string, templateRef: TemplateRef<{}>) {\r\n    const property = this.rootProperty.searchProperty(path);\r\n    if (!property) {\r\n      console.warn(`未找到路径 ${path}`);\r\n      return;\r\n    }\r\n    (property.ui as SFUISchemaItemRun)._render = templateRef;\r\n  }\r\n\r\n  private validator() {\r\n    this.rootProperty._runValidation();\r\n    const errors = this.rootProperty.errors;\r\n    this._valid = !(errors && errors.length);\r\n    this.formError.emit(errors);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * 刷新 Schema，一般需要动态修改 Schema 某个值时可以方便调用\r\n   */\r\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema) {\r\n    if (newSchema) this.schema = newSchema;\r\n    if (newUI) this.ui = newUI;\r\n\r\n    if (!this.schema || typeof this.schema.properties === 'undefined')\r\n      throw new Error(`Invalid Schema`);\r\n    if (this.schema.ui && typeof this.schema.ui === 'string')\r\n      throw new Error(`Don't support string with root ui property`);\r\n\r\n    this.schema.type = 'object';\r\n\r\n    this._formData = { ...this.formData };\r\n\r\n    if (this._inited) this.terminator.destroy();\r\n\r\n    this.coverProperty();\r\n    this.coverButtonProperty();\r\n\r\n    this.rootProperty = this.formPropertyFactory.createProperty(\r\n      this._schema,\r\n      this._ui,\r\n      this.formData,\r\n    );\r\n\r\n    this.rootProperty.valueChanges.subscribe(value => {\r\n      this._item = Object.assign({}, this.formData, value);\r\n      this.formChange.emit(this._item);\r\n    });\r\n    this.rootProperty.errorsChanges.subscribe(errors => {\r\n      this._valid = !(errors && errors.length);\r\n      this.formError.emit(errors);\r\n      this.cd.detectChanges();\r\n    });\r\n\r\n    this.reset();\r\n  }\r\n\r\n  /** 重置表单 */\r\n  reset() {\r\n    this.rootProperty.resetValue(this.formData, false);\r\n    Promise.resolve().then(() => this.cd.detectChanges());\r\n    this.formReset.emit(this.value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.terminator.destroy();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormProperty } from './model/form.property';\r\nimport { Widget } from './widget';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFUISchemaItem } from './schema/ui';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Component({\r\n  selector: 'sf-item',\r\n  template: `<ng-template #target></ng-template>`,\r\n})\r\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\r\n  private ref: ComponentRef<any>;\r\n  widget: Widget<any> = null;\r\n\r\n  // region: fields\r\n\r\n  @Input() formProperty: FormProperty;\r\n\r\n  @ViewChild('target', { read: ViewContainerRef })\r\n  container: ViewContainerRef;\r\n\r\n  // endregion\r\n\r\n  constructor(\r\n    private widgetFactory: WidgetFactory,\r\n    private terminator: TerminatorService,\r\n  ) {}\r\n\r\n  onWidgetInstanciated(widget: Widget<any>) {\r\n    this.widget = widget;\r\n    const id = `_sf-${nextUniqueId++}`;\r\n\r\n    const ui = this.formProperty.ui as SFUISchemaItem;\r\n    this.widget.formProperty = this.formProperty;\r\n    this.widget.schema = this.formProperty.schema;\r\n    this.widget.ui = ui;\r\n    this.widget.id = id;\r\n    this.widget.firstVisual = ui.firstVisual;\r\n    this.formProperty.widget = widget;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.terminator.onDestroy.subscribe(() => {\r\n      this.ngOnDestroy();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.ref = this.widgetFactory.createWidget(\r\n      this.container,\r\n      this.formProperty.ui.widget || this.formProperty.schema.type,\r\n    );\r\n    this.onWidgetInstanciated(this.ref.instance);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.formProperty.ui.__destroy = true;\r\n    this.ref.destroy();\r\n  }\r\n}\r\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf-fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector(\n        '.ant-form-item-control-wrapper',\n      );\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  template: `\n  <nz-form-item>\n    <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n        <ng-content></ng-content>\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>`,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\r\nimport { SFComponent } from '../../sf.component';\r\n\r\n@Directive({\r\n  selector: '[sf-template]',\r\n})\r\nexport class SFTemplateDirective implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('sf-template') path: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private table: SFComponent,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.table._addTpl(\r\n      this.path.startsWith('/') ? this.path : `/` + this.path,\r\n      this.templateRef,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HostBinding,\r\n  Optional,\r\n  AfterViewInit,\r\n  Inject,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { di } from './utils';\r\nimport { FormProperty } from './model/form.property';\r\nimport { ArrayProperty } from './model/array.property';\r\nimport { ObjectProperty } from './model/object.property';\r\nimport { SFSchema } from './schema';\r\nimport { SFUISchemaItem } from './schema/ui';\r\nimport { ErrorData } from './errors';\r\nimport { SFComponent } from './sf.component';\r\n\r\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\r\n  formProperty: T;\r\n  error: string;\r\n  showError = false;\r\n  id = '';\r\n  schema: SFSchema;\r\n  ui: SFUISchemaItem;\r\n  firstVisual = false;\r\n\r\n  @HostBinding('class')\r\n  get cls() {\r\n    return this.ui.class || '';\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    if (typeof this.schema.readOnly !== 'undefined')\r\n      return this.schema.readOnly;\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\r\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.formProperty.errorsChanges\r\n      .pipe(filter(w => w != null))\r\n      .subscribe((errors: ErrorData[]) => {\r\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\r\n\r\n        // 不显示首次校验视觉\r\n        if (this.firstVisual) {\r\n          this.showError = errors.length > 0;\r\n          this.error = this.showError ? errors[0].message : '';\r\n\r\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\r\n        }\r\n        this.firstVisual = true;\r\n      });\r\n  }\r\n\r\n  setValue(value: any) {\r\n    this.formProperty.setValue(value, false);\r\n    if (this.ui.debug)\r\n      di('valueChanges', this.formProperty.path, this.formProperty);\r\n  }\r\n\r\n  get value() {\r\n    return this.formProperty.value;\r\n  }\r\n\r\n  detectChanges() {\r\n    this.cd.detectChanges();\r\n    this.formProperty.root.widget.cd.markForCheck();\r\n  }\r\n\r\n  abstract reset(value: any);\r\n}\r\n\r\nexport class ControlWidget extends Widget<FormProperty> {\r\n  reset(value: any) {}\r\n}\r\n\r\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n\r\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ObjectLayoutWidget } from '../../widget';\r\nimport { SFGridSchema } from '../../schema/ui';\r\nimport { FormProperty } from '../../model/form.property';\r\n\r\n@Component({\r\n  selector: 'sf-object',\r\n  template: `\r\n  <ng-container *ngIf=\"grid; else noGrid\">\r\n    <nz-row [nzGutter]=\"grid.gutter\">\r\n      <ng-container *ngFor=\"let i of list\">\r\n        <ng-container *ngIf=\"i.property.visible\">\r\n          <nz-col\r\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\r\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\r\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\r\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n          </nz-col>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-row>\r\n  </ng-container>\r\n  <ng-template #noGrid>\r\n    <ng-container *ngFor=\"let i of list\">\r\n      <ng-container *ngIf=\"i.property.visible\">\r\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-template>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\r\n  grid: SFGridSchema;\r\n  list: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.grid = this.ui.grid;\r\n    const list: any[] = [];\r\n    for (const key of this.formProperty.propertiesId) {\r\n      const property = this.formProperty.properties[key] as FormProperty;\r\n      const item = {\r\n        property,\r\n        grid: property.ui.grid || this.grid || {},\r\n        spanLabelFixed: property.ui.spanLabelFixed,\r\n      };\r\n      list.push(item);\r\n    }\r\n    this.list = list;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ArrayLayoutWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-array',\r\n  template: `\r\n  <nz-form-item>\r\n    <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\r\n      <label>\r\n        {{ schema.title }}\r\n        <span class=\"optional\">\r\n          {{ ui.optional }}\r\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n          </nz-tooltip>\r\n        </span>\r\n      </label>\r\n      <div class=\"add\">\r\n        <button nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\r\n      </div>\r\n    </nz-col>\r\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\r\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\r\n\r\n        <nz-row class=\"sf-array-container\">\r\n          <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\r\n            <nz-col [nzSpan]=\"arraySpan\" *ngIf=\"i.visible\">\r\n              <nz-card>\r\n                <sf-item [formProperty]=\"i\"></sf-item>\r\n                <span *ngIf=\"removeTitle\" class=\"remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\r\n                  <i class=\"anticon anticon-delete\"></i>\r\n                </span>\r\n              </nz-card>\r\n            </nz-col>\r\n          </ng-container>\r\n        </nz-row>\r\n\r\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\r\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\r\n\r\n      </div>\r\n    </nz-col>\r\n  </nz-form-item>\r\n  `\r\n})\r\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\r\n  addTitle: string;\r\n  addType: string;\r\n  removeTitle: string;\r\n  arraySpan = 8;\r\n\r\n  get addDisabled() {\r\n    return (\r\n      this.schema.maxItems &&\r\n      (this.formProperty.properties as any[]).length >= this.schema.maxItems\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.ui.grid && this.ui.grid.arraySpan)\r\n      this.arraySpan = this.ui.grid.arraySpan;\r\n\r\n    this.addTitle = this.ui.addTitle || '添加';\r\n    this.addType = this.ui.addType || 'dashed';\r\n    this.removeTitle =\r\n      this.ui.removable === false ? null : this.ui.removeTitle || '移除';\r\n  }\r\n\r\n  addItem() {\r\n    this.formProperty.add();\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.formProperty.remove(index);\r\n  }\r\n\r\n  trackByIndex(index: number, item: any) {\r\n    return index;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-string',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template #ipt>\r\n      <input nz-input\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [value]=\"value\"\r\n        (input)=\"setValue($event.target?.value)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.type]=\"ui.type || 'text'\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        [attr.autocomplete]=\"ui.autocomplete\"\r\n        [attr.autoFocus]=\"ui.autofocus\">\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\r\n      <nz-input-group\r\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\r\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\r\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\r\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\r\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\r\n      </nz-input-group>\r\n    </ng-container>\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class StringWidget extends ControlWidget implements OnInit {\r\n  type: string;\r\n\r\n  ngOnInit(): void {\r\n    this.type = !!(\r\n      this.ui.addOnAfter ||\r\n      this.ui.addOnBefore ||\r\n      this.ui.addOnAfterIcon ||\r\n      this.ui.addOnBeforeIcon ||\r\n      this.ui.prefix ||\r\n      this.ui.prefixIcon ||\r\n      this.ui.suffix ||\r\n      this.ui.suffixIcon\r\n    )\r\n      ? 'addon'\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-number',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-input-number\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzFormatter]=\"formatter\"\r\n      [nzParser]=\"parser\"\r\n      [nzPrecision]=\"ui.precision\">\r\n    </nz-input-number>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class NumberWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  formatter = (value: any) => value;\r\n  parser = (value: any) => value;\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.schema.minimum !== 'undefined') {\r\n      this.min = this.schema.exclusiveMinimum\r\n        ? this.schema.minimum + 1\r\n        : this.schema.minimum;\r\n    }\r\n    if (typeof this.schema.maximum !== 'undefined') {\r\n      this.max = this.schema.exclusiveMaximum\r\n        ? this.schema.maximum - 1\r\n        : this.schema.maximum;\r\n    }\r\n    this.step = this.schema.multipleOf || 1;\r\n    if (this.schema.type === 'integer') {\r\n      this.min = Math.trunc(this.min);\r\n      this.max = Math.trunc(this.max);\r\n      this.step = Math.trunc(this.step);\r\n    }\r\n    if (this.ui.formatter) this.formatter = this.ui.formatter;\r\n    if (this.ui.parser) this.parser = this.ui.parser;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport * as format from 'date-fns/format';\r\n\r\nconst DATEFORMAT = {\r\n  'date-time': `YYYY-MM-DDTHH:mm:ssZ`,\r\n};\r\n\r\nconst DEFAULTFORMAT = 'YYYY-MM-DD HH:mm:ss';\r\n\r\n@Component({\r\n  selector: 'sf-date',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <input nz-input\r\n      [attr.id]=\"id\"\r\n      [disabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [value]=\"displayValue\"\r\n      (input)=\"_change($event.target?.value)\"\r\n      [attr.type]=\"type\"\r\n      [attr.placeholder]=\"ui.placeholder\"\r\n      autocomplete=\"off\">\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class DateWidget extends ControlWidget implements OnInit {\r\n  type: string;\r\n  displayValue: string;\r\n  format: string;\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.schema.format === 'date-time' ? 'datetime-local' : 'date';\r\n    this.format =\r\n      !this.ui.format && this.schema.format\r\n        ? DATEFORMAT[this.schema.format] || 'YYYY-MM-DD'\r\n        : this.ui.format;\r\n  }\r\n\r\n  reset(value: any) {\r\n    this.formatDisplay(value);\r\n  }\r\n\r\n  private formatData(value: string, formatString: string) {\r\n    return format(value, formatString, { locale: (window as any).__locale__ });\r\n  }\r\n\r\n  private formatDisplay(value: any) {\r\n    // TODO：HTML 原生日期组件无法按 `displayFormat` 格式，暂时停用以下代码\r\n    // this.displayValue = this.formatData(value, this.ui.displayFormat || DEFAULTFORMAT);\r\n  }\r\n\r\n  _change(value: string) {\r\n    this.formatDisplay(value);\r\n    this.setValue(this.formatData(value, this.format || DEFAULTFORMAT));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport * as format from 'date-fns/format';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: ui.allowEmpty || true,\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: ui.hideDisabledOptions || false,\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: any) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(\n        Date.UTC(\n          1970,\n          0,\n          1,\n          value.getHours(),\n          value.getMinutes(),\n          value.getSeconds(),\n        ),\n      );\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-radio',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-radio-group\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzName]=\"id\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\">\r\n      <ng-container *ngIf=\"styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio-button\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n    </nz-radio-group>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RadioWidget extends ControlWidget {\r\n  data: any[] = [];\r\n  styleType: boolean;\r\n\r\n  reset(value: any) {\r\n    this.styleType = (this.ui.styleType || 'default') === 'default';\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => (this.data = list),\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  template: `\n  <ng-template #all>\n    <label *ngIf=\"ui.checkAll\" nz-checkbox class=\"mr-sm\"\n      [(ngModel)]=\"allChecked\"\n      [nzIndeterminate]=\"indeterminate\"\n      (click)=\"onAllChecked($event)\">\n      {{ ui.checkAllText || '全选' }}\n    </label>\n  </ng-template>\n  <nz-form-item>\n    <nz-form-label *ngIf=\"data.length > 0\" [nzSpan]=\"label\" [nzRequired]=\"ui._required\">\n      {{ schema.title }}\n      <span class=\"optional\">\n        {{ ui.optional }}\n        <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n          <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n        </nz-tooltip>\n      </span>\n    </nz-form-label>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"control\" [nzOffset]=\"offset\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n          <ng-container *ngIf=\"data.length === 0\">\n            <label nz-checkbox\n              [nzDisabled]=\"disabled\"\n              [ngModel]=\"value\"\n              (ngModelChange)=\"_setValue($event)\">\n              <span [innerHTML]=\"schema.title\"></span>\n              <span class=\"optional\">\n                {{ ui.optional }}\n                <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n                  <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n                </nz-tooltip>\n              </span>\n            </label>\n          </ng-container>\n          <ng-container *ngIf=\"data.length > 0\">\n            <ng-container *ngIf=\"grid_span === 0\">\n              <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n              <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\n            </ng-container>\n            <ng-container *ngIf=\"grid_span !== 0\">\n              <nz-checkbox-wrapper class=\"checkbox-grid-list\" (nzOnChange)=\"groupInGridChange($event)\">\n                <nz-row>\n                  <nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n                    <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n                  </nz-col>\n                  <nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n                    <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\n                  </nz-col>\n                </nz-row>\n              </nz-checkbox-wrapper>\n            </ng-container>\n          </ng-container>\n\n          <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n          <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  label: number;\n  control: number;\n  offset: number;\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n\n        this.label = this.ui.spanLabel;\n        this.control = this.ui.spanControl;\n        if (list.length === 0) {\n          this.label = null;\n          this.offset = this.ui.spanLabel;\n        }\n        this.grid_span =\n          this.ui.grid && this.ui.grid.span > 0 ? this.ui.grid.span : 0;\n        this.updateAllChecked();\n      },\n    );\n  }\n\n  _setValue(value: any) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(\n      checkList.map(item => item.value),\n    );\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: any[]) {\n    this.data.forEach(\n      item => (item.checked = values.indexOf(item.value) !== -1),\n    );\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-boolean',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-switch\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzCheckedChildren]=\"ui.checkedChildren\"\r\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\r\n    </nz-switch>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class BooleanWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-textarea',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <textarea nz-input\r\n      [attr.id]=\"id\"\r\n      [disabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [value]=\"value\"\r\n      (input)=\"setValue($event.target?.value)\"\r\n      [attr.maxLength]=\"schema.maxLength || null\"\r\n      [attr.placeholder]=\"ui.placeholder\"\r\n      [nzAutosize]=\"ui.autosize\">\r\n    </textarea>\r\n\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TextareaWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-select',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-select\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzAllowClear]=\"i.allowClear\"\r\n      [nzAutoFocus]=\"i.autoFocus\"\r\n      [nzDropdownClassName]=\"i.dropdownClassName\"\r\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\r\n      [nzServerSearch]=\"i.serverSearch\"\r\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\r\n      [nzMode]=\"i.mode\"\r\n      [nzNotFoundContent]=\"i.notFoundContent\"\r\n      [nzShowSearch]=\"i.showSearch\"\r\n      (nzOpenChange)=\"openChange($event)\"\r\n      (nzOnSearch)=\"searchChange($event)\"\r\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\r\n      <ng-container *ngIf=\"!hasGroup\">\r\n        <nz-option\r\n          *ngFor=\"let o of data\"\r\n          [nzLabel]=\"o.label\"\r\n          [nzValue]=\"o.value\"\r\n          [nzDisabled]=\"o.disabled\">\r\n        </nz-option>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"hasGroup\">\r\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\r\n          <nz-option\r\n            *ngFor=\"let o of i.children\"\r\n            [nzLabel]=\"o.label\"\r\n            [nzValue]=\"o.value\"\r\n            [nzDisabled]=\"o.disabled\">\r\n          </nz-option>\r\n        </nz-option-group>\r\n      </ng-container>\r\n    </nz-select>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SelectWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  data: SFSchemaEnum[];\r\n  hasGroup = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      allowClear: this.ui.allowClear,\r\n      autoFocus: this.ui.autoFocus || false,\r\n      dropdownClassName: this.ui.dropdownClassName || null,\r\n      dropdownMatchSelectWidth: this.ui.dropdownMatchSelectWidth || true,\r\n      serverSearch: this.ui.serverSearch || false,\r\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\r\n      mode: this.ui.mode || 'default',\r\n      notFoundContent: this.ui.notFoundContent || '无法找到',\r\n      showSearch: this.ui.showSearch || true,\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  openChange(value: any) {\r\n    if (this.ui.openChange) this.ui.openChange(value);\r\n  }\r\n\r\n  searchChange(text: string) {\r\n    if (this.ui.onSearch) {\r\n      this.ui.onSearch(text).then((res: any[]) => {\r\n        this.data = res;\r\n        this.detectChanges();\r\n      });\r\n      return;\r\n    }\r\n    this.detectChanges();\r\n  }\r\n\r\n  scrollToBottom(value: any) {\r\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom(value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-tag',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: any) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { deepGet } from '@delon/util';\r\nimport { UploadFile, UploadChangeParam, NzModalService } from 'ng-zorro-antd';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-upload',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-upload\r\n      [nzType]=\"i.type\"\r\n      [nzFileList]=\"fileList\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzAction]=\"i.action\"\r\n      [nzAccept]=\"i.accept\"\r\n      [nzLimit]=\"i.limit\"\r\n      [nzSize]=\"i.size\"\r\n      [nzFileType]=\"i.fileType\"\r\n      [nzHeaders]=\"ui.headers\"\r\n      [nzData]=\"ui.data\"\r\n      [nzListType]=\"i.listType\"\r\n      [nzMultiple]=\"i.multiple\"\r\n      [nzName]=\"i.argName\"\r\n      [nzShowUploadList]=\"i.showUploadList\"\r\n      [nzWithCredentials]=\"i.withCredentials\"\r\n      [nzRemove]=\"ui.remove\"\r\n      [nzPreview]=\"handlePreview\"\r\n      (nzChange)=\"change($event)\">\r\n      <ng-container [ngSwitch]=\"btnType\">\r\n        <ng-container *ngSwitchCase=\"'plus'\">\r\n          <i class=\"anticon anticon-plus\"></i>\r\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'drag'\">\r\n          <p class=\"ant-upload-drag-icon\"><i class=\"anticon anticon-inbox\"></i></p>\r\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\r\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <button type=\"button\" nz-button>\r\n            <i class=\"anticon anticon-upload\"></i><span [innerHTML]=\"i.text\"></span>\r\n          </button>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-upload>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class UploadWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fileList: UploadFile[] = [];\r\n  btnType = '';\r\n\r\n  constructor(cd: ChangeDetectorRef, private modalSrv: NzModalService) {\r\n    super(cd);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      type: this.ui.type || 'select',\r\n      text: this.ui.text || '点击上传',\r\n      action: this.ui.action || '',\r\n      accept: this.ui.accept || '',\r\n      limit: this.ui.limit == null ? 0 : +this.ui.limit,\r\n      size: this.ui.size == null ? 0 : +this.ui.size,\r\n      fileType: this.ui.fileType || '',\r\n      listType: this.ui.listType || 'text',\r\n      multiple: this.ui.multiple || false,\r\n      name: this.ui.name || 'file',\r\n      showUploadList: this.ui.showUploadList || true,\r\n      withCredentials: this.ui.withCredentials || false,\r\n      resReName: (this.ui.resReName || '').split('.'),\r\n    };\r\n    if (this.i.listType === 'picture-card') this.btnType = 'plus';\r\n    if (this.i.type === 'drag') {\r\n      this.i.listType = null;\r\n      this.btnType = 'drag';\r\n      this.i.text = this.ui.text || `单击或拖动文件到该区域上传`;\r\n      this.i.hint =\r\n        this.ui.hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\r\n    }\r\n  }\r\n\r\n  change(args: UploadChangeParam) {\r\n    if (this.ui.change) this.ui.change(args);\r\n    if (args.type !== 'success') return;\r\n    this.notify(args.fileList);\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.fileList = list as UploadFile[];\r\n        this.notify(this.fileList);\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  private notify(fileList: UploadFile[]) {\r\n    const res = fileList.map(item =>\r\n      deepGet(item.response, this.i.resReName, item.response),\r\n    );\r\n    this.formProperty.setValue(\r\n      this.i.multiple === true ? res : res.pop(),\r\n      false,\r\n    );\r\n  }\r\n\r\n  handlePreview = (file: UploadFile) => {\r\n    this.modalSrv\r\n      .create({\r\n        nzContent: `<img src=\"${file.url ||\r\n          file.thumbUrl}\" class=\"img-fluid\" />`,\r\n        nzFooter: null,\r\n      })\r\n      .afterClose.subscribe(() => this.detectChanges());\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-transfer',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: any[] = [];\n  i: any;\n  private _data: any[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || '项',\n      itemsUnit: this.ui.itemsUnit || '项',\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) formData = [formData];\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: any): Observable<any[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: any) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter(w => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: any) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n  }\n\n  _selectChange(options: any) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-slider',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-slider\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzRange]=\"ui.range\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzMarks]=\"marks\"\r\n      [nzDots]=\"ui.dots\"\r\n      [nzIncluded]=\"included\"\r\n      [nzVertical]=\"ui.vertical\"\r\n      [nzTipFormatter]=\"_formatter\"\r\n      (nzOnAfterChange)=\"_afterChange($event)\">\r\n    </nz-slider>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SliderWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  marks: any;\r\n  included: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.min = this.schema.minimum || 0;\r\n    this.max = this.schema.maximum || 100;\r\n    this.step = this.schema.multipleOf || 1;\r\n\r\n    this.marks = this.ui.marks || null;\r\n    const included = this.ui.included;\r\n    this.included = typeof included === 'undefined' ? true : included;\r\n  }\r\n\r\n  _formatter = (value: any) => {\r\n    if (this.ui.formatter) return this.ui.formatter(value);\r\n    return value;\r\n  }\r\n\r\n  _afterChange(value: any) {\r\n    if (this.ui.afterChange) this.ui.afterChange(value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-custom',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"$any(ui)._render\"\r\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CustomWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-rate',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-rate\r\n      [nzDisabled]=\"disabled\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzAllowClear]=\"allowClear\"\r\n      [nzAllowHalf]=\"allowHalf\"\r\n      [nzAutoFocus]=\"autoFocus\"\r\n      [nzCount]=\"count\"></nz-rate>\r\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RateWidget extends ControlWidget implements OnInit {\r\n  count: number;\r\n  allowHalf: boolean;\r\n  allowClear: boolean;\r\n  autoFocus: boolean;\r\n  hasText = false;\r\n  ngOnInit(): void {\r\n    this.count = this.schema.maximum || 5;\r\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\r\n    this.allowClear = this.ui.allowClear || true;\r\n    this.autoFocus = this.ui.autoFocus || false;\r\n    this.hasText = !!this.ui.text;\r\n  }\r\n\r\n  genText() {\r\n    return this.hasText\r\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { startWith, map, flatMap, debounceTime } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getCopyEnum, getEnum } from '../../utils';\r\n\r\nconst EMAILSUFFIX = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\r\n\r\n@Component({\r\n  selector: 'sf-autocomplete',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n      <input nz-input [nzAutocomplete]=\"auto\"\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [value]=\"value\"\r\n        (input)=\"setValue($event.target?.value)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        autocomplete=\"off\">\r\n      <nz-autocomplete #auto\r\n        [nzBackfill]=\"i.backfill\"\r\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\r\n        [nzWidth]=\"i.width\"\r\n        (selectionChange)=\"setValue($event?.nzValue)\">\r\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\r\n      </nz-autocomplete>\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class AutoCompleteWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fixData: SFSchemaEnum[] = [];\r\n  list: Observable<SFSchemaEnum[]>;\r\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\r\n  private isAsync = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      backfill: this.ui.backfill || false,\r\n      defaultActiveFirstOption: this.ui.defaultActiveFirstOption || true,\r\n      width: this.ui.width || undefined,\r\n    };\r\n\r\n    this.filterOption = this.ui.filterOption || true;\r\n    if (typeof this.filterOption === 'boolean') {\r\n      this.filterOption =\r\n        this.filterOption === true\r\n          ? (input: string, option: SFSchemaEnum) =>\r\n              option.label.toLowerCase().indexOf(input.toLowerCase()) > -1\r\n          : () => true;\r\n    }\r\n\r\n    this.isAsync = !!this.ui.asyncData;\r\n    const orgTime = +(this.ui.debounceTime || 0);\r\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\r\n    this.list = this.formProperty.valueChanges.pipe(\r\n      debounceTime(time),\r\n      startWith(''),\r\n      flatMap(\r\n        input =>\r\n          this.isAsync ? this.ui.asyncData(input) : this.filterData(input),\r\n      ),\r\n      map(res => getEnum(res, null)),\r\n    );\r\n  }\r\n\r\n  reset(value: any) {\r\n    if (!this.isAsync) {\r\n      switch (this.ui.type) {\r\n        case 'email':\r\n          this.fixData = getCopyEnum(EMAILSUFFIX, null);\r\n          break;\r\n        default:\r\n          this.fixData = getCopyEnum(\r\n            this.schema.enum,\r\n            this.formProperty.formData,\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private filterData(input: string) {\r\n    switch (this.ui.type) {\r\n      case 'email':\r\n        return this.addEmailSuffix(input);\r\n      default:\r\n        return of(\r\n          this.fixData.filter(option => this.filterOption(input, option)),\r\n        );\r\n    }\r\n  }\r\n\r\n  private addEmailSuffix(value: string) {\r\n    return of(\r\n      !value || ~value.indexOf('@')\r\n        ? []\r\n        : this.fixData.map(domain => `${value}@${domain.label}`),\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\nimport { SFSchemaEnum } from '../../schema';\r\n\r\n@Component({\r\n  selector: 'sf-cascader',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-cascader\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"_change($event)\"\r\n      [nzOptions]=\"data\"\r\n      [nzAllowClear]=\"ui.allowClear\"\r\n      [nzAutoFocus]=\"ui.autoFocus\"\r\n      [nzChangeOn]=\"ui.changeOn\"\r\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\r\n      [nzColumnClassName]=\"ui.columnClassName\"\r\n      [nzExpandTrigger]=\"ui.expandTrigger\"\r\n      [nzMenuClassName]=\"ui.menuClassName\"\r\n      [nzMenuStyle]=\"ui.menuStyle\"\r\n      [nzLabelProperty]=\"ui.labelProperty\"\r\n      [nzValueProperty]=\"ui.valueProperty\"\r\n      [nzLoadData]=\"loadData\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzShowArrow]=\"showArrow\"\r\n      [nzShowInput]=\"showInput\"\r\n      (nzClear)=\"_clear($event)\"\r\n      (nzVisibleChange)=\"_visibleChange($event)\"\r\n      (nzSelect)=\"_select($event)\"\r\n      (nzSelectionChange)=\"_selectionChange($event)\">\r\n    </nz-cascader>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CascaderWidget extends ControlWidget implements OnInit {\r\n  clearText: string;\r\n  showArrow: boolean;\r\n  showInput: boolean;\r\n  triggerAction: string[];\r\n  data: SFSchemaEnum[] = [];\r\n  loadData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.clearText = this.ui.clearText || '清除';\r\n    this.showArrow = this.ui.showArrow || true;\r\n    this.showInput = this.ui.showInput || true;\r\n    this.triggerAction = this.ui.triggerAction || ['click'];\r\n    if (!!this.ui.loadData) {\r\n      this.loadData = (node: any, index: number) =>\r\n        this.ui.loadData(node, index, this);\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  _visibleChange(status: boolean) {\r\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\r\n  }\r\n\r\n  _change(value: string) {\r\n    this.setValue(value);\r\n    if (this.ui.change) this.ui.change(value);\r\n  }\r\n\r\n  _selectionChange(options: any) {\r\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\r\n  }\r\n\r\n  _select(options: any) {\r\n    if (this.ui.select) this.ui.select(options);\r\n  }\r\n\r\n  _clear(options: any) {\r\n    if (this.ui.clear) this.ui.clear(options);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData, getEnum } from '../../utils';\r\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\r\nimport { FormProperty, PropertyGroup } from '../../model/form.property';\r\nimport { NzMentionComponent } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'sf-mention',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n      <nz-mention #mentions\r\n        [nzSuggestions]=\"data\"\r\n        [nzValueWith]=\"i.valueWith\"\r\n        [nzLoading]=\"loading\"\r\n        [nzNotFoundContent]=\"i.notFoundContent\"\r\n        [nzPlacement]=\"i.placement\"\r\n        [nzPrefix]=\"i.prefix\"\r\n        (nzOnSelect)=\"_select($event)\"\r\n        (nzOnSearchChange)=\"_search($event)\">\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\r\n          <input nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            autocomplete=\"off\">\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\r\n          <textarea nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            [nzAutosize]=\"ui.autosize\">\r\n          </textarea>\r\n        </ng-container>\r\n\r\n      </nz-mention>\r\n\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MentionWidget extends ControlWidget implements OnInit {\r\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\r\n  data: SFSchemaEnum[] = [];\r\n  i: any;\r\n  loading = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      valueWith: this.ui.valueWith || (item => item.label),\r\n      notFoundContent:\r\n        this.ui.notFoundContent || '无匹配结果，轻敲空格完成输入',\r\n      placement: this.ui.placement || 'bottom',\r\n      prefix: this.ui.prefix || '@',\r\n    };\r\n    const min =\r\n        typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1,\r\n      max =\r\n        typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\r\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\r\n      this.ui.validator = (\r\n        value: any,\r\n        formProperty: FormProperty,\r\n        form: PropertyGroup,\r\n      ) => {\r\n        const count = this.mentionChild.getMentions().length;\r\n        if (min !== -1 && count < min) {\r\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\r\n        }\r\n        if (max !== -1 && count > max) {\r\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\r\n        }\r\n        return null;\r\n      };\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, null).subscribe(list => {\r\n      this.data = list;\r\n      this.detectChanges();\r\n    });\r\n  }\r\n\r\n  _select(options: any) {\r\n    if (this.ui.select) this.ui.select(options);\r\n  }\r\n\r\n  _search(option: any) {\r\n    if (typeof this.ui.loadData !== 'function') return;\r\n\r\n    this.loading = true;\r\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\r\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null)))\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n}\r\n","import { WidgetRegistry } from '../widget.factory';\r\n\r\nimport { ObjectWidget } from './object/object.widget';\r\nimport { ArrayWidget } from './array/array.widget';\r\nimport { StringWidget } from './string/string.widget';\r\nimport { NumberWidget } from './number/number.widget';\r\nimport { DateWidget } from './date/date.widget';\r\nimport { TimeWidget } from './time/time.widget';\r\nimport { RadioWidget } from './radio/radio.widget';\r\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\r\nimport { BooleanWidget } from './boolean/boolean.widget';\r\nimport { TextareaWidget } from './textarea/textarea.widget';\r\nimport { SelectWidget } from './select/select.widget';\r\nimport { TagWidget } from './tag/tag.widget';\r\nimport { UploadWidget } from './upload/upload.widget';\r\nimport { TransferWidget } from './transfer/transfer.widget';\r\nimport { SliderWidget } from './slider/slider.widget';\r\nimport { CustomWidget } from './custom/custom.widget';\r\nimport { RateWidget } from './rate/rate.widget';\r\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\r\nimport { CascaderWidget } from './cascader/cascader.widget';\r\nimport { MentionWidget } from './mention/mention.widget';\r\n\r\nexport class NzWidgetRegistry extends WidgetRegistry {\r\n  constructor() {\r\n    super();\r\n\r\n    this.register('object', ObjectWidget);\r\n    this.register('array', ArrayWidget);\r\n\r\n    this.register('string', StringWidget);\r\n    this.register('number', NumberWidget);\r\n    this.register('integer', NumberWidget);\r\n    this.register('date', DateWidget);\r\n    this.register('time', TimeWidget);\r\n    this.register('radio', RadioWidget);\r\n    this.register('checkbox', CheckboxWidget);\r\n    this.register('boolean', BooleanWidget);\r\n    this.register('textarea', TextareaWidget);\r\n    this.register('select', SelectWidget);\r\n    this.register('tag', TagWidget);\r\n    this.register('upload', UploadWidget);\r\n    this.register('transfer', TransferWidget);\r\n    this.register('slider', SliderWidget);\r\n    this.register('rate', RateWidget);\r\n    this.register('autocomplete', AutoCompleteWidget);\r\n    this.register('cascader', CascaderWidget);\r\n    this.register('mention', MentionWidget);\r\n    this.register('custom', CustomWidget);\r\n\r\n    this.setDefault(StringWidget);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { DelonUtilModule } from '@delon/util';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport {\r\n  SchemaValidatorFactory,\r\n  AjvSchemaValidatorFactory,\r\n} from './validator.factory';\r\nimport { SFComponent } from './sf.component';\r\nimport { SFItemComponent } from './sf-item.component';\r\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\r\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\r\nimport { SFFixedDirective } from './sf-fixed.directive';\r\n\r\nconst COMPONENTS = [\r\n  SFComponent,\r\n  SFItemComponent,\r\n  SFItemWrapComponent,\r\n  SFTemplateDirective,\r\n  SFFixedDirective,\r\n];\r\n\r\n// region: widgets\r\n\r\nimport { WidgetRegistry } from './widget.factory';\r\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\r\nimport { ObjectWidget } from './widgets/object/object.widget';\r\nimport { ArrayWidget } from './widgets/array/array.widget';\r\nimport { StringWidget } from './widgets/string/string.widget';\r\nimport { NumberWidget } from './widgets/number/number.widget';\r\nimport { DateWidget } from './widgets/date/date.widget';\r\nimport { TimeWidget } from './widgets/time/time.widget';\r\nimport { RadioWidget } from './widgets/radio/radio.widget';\r\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\r\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\r\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\r\nimport { SelectWidget } from './widgets/select/select.widget';\r\nimport { TagWidget } from './widgets/tag/tag.widget';\r\nimport { UploadWidget } from './widgets/upload/upload.widget';\r\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\r\nimport { SliderWidget } from './widgets/slider/slider.widget';\r\nimport { CustomWidget } from './widgets/custom/custom.widget';\r\nimport { RateWidget } from './widgets/rate/rate.widget';\r\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\r\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\r\nimport { MentionWidget } from './widgets/mention/mention.widget';\r\n\r\nconst WIDGETS = [\r\n  ObjectWidget,\r\n  ArrayWidget,\r\n  StringWidget,\r\n  NumberWidget,\r\n  DateWidget,\r\n  TimeWidget,\r\n  RadioWidget,\r\n  CheckboxWidget,\r\n  BooleanWidget,\r\n  TextareaWidget,\r\n  SelectWidget,\r\n  TagWidget,\r\n  UploadWidget,\r\n  TransferWidget,\r\n  SliderWidget,\r\n  RateWidget,\r\n  AutoCompleteWidget,\r\n  CascaderWidget,\r\n  MentionWidget,\r\n  CustomWidget,\r\n];\r\n\r\n// endregion\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, DelonUtilModule, NgZorroAntdModule],\r\n  declarations: [...COMPONENTS, ...WIDGETS],\r\n  entryComponents: [...WIDGETS],\r\n  exports: [...COMPONENTS],\r\n})\r\nexport class DelonFormModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DelonFormModule,\r\n      providers: [\r\n        DelonFormConfig,\r\n        {\r\n          provide: SchemaValidatorFactory,\r\n          useClass: AjvSchemaValidatorFactory,\r\n        },\r\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"names":["deepCopy","takeWhile","map","of","Subject","BehaviorSubject","Observable","combineLatest","distinctUntilChanged","tslib_1.__extends","Optional","Inject","Injectable","ComponentFactoryResolver","EventEmitter","coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","ViewChild","ViewContainerRef","Directive","ElementRef","Renderer2","TemplateRef","filter","HostBinding","deepGet","NzModalService","debounceTime","startWith","flatMap","tap","NgModule","CommonModule","FormsModule","DelonUtilModule","NgZorroAntdModule"],"mappings":"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"}