{"version":3,"file":"form.umd.min.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","../../../../packages/form/src/errors.ts","../../../../packages/form/src/config.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs/Observable';\r\nimport { FormProperty, PropertyGroup } from './model/form.property';\r\n\r\nexport const ERRORSDEFAULT = {\r\n  'false schema':         `布尔模式出错`,\r\n  '$ref':                 `无法找到引用{ref}`,\r\n  additionalItems:        `不允许超过{ref}`,\r\n  additionalProperties:   `不允许有额外的属性`,\r\n  anyOf:                  `数据应为 anyOf 所指定的其中一个`,\r\n  dependencies:           `应当拥有属性{property}的依赖属性{deps}`,\r\n  enum:                   `应当是预设定的枚举值之一`,\r\n  format:                 `格式不正确`, // `应当匹配格式 \"{format}\"`,\r\n  type:                   `类型应当是 {type}`,\r\n  required:               `必填项`,\r\n  maxLength:              `至多 {limit} 个字符`,\r\n  minLength:              `至少 {limit} 个字符以上`,\r\n  minimum:                `必须 {comparison}{limit}`,\r\n  formatMinimum:          `必须 {comparison}{limit}`,\r\n  maximum:                `必须 {comparison}{limit}`,\r\n  formatMaximum:          `必须 {comparison}{limit}`,\r\n  maxItems:               `不应多于 {limit} 个项`,\r\n  minItems:               `不应少于 {limit} 个项`,\r\n  maxProperties:          `不应多于 {limit} 个属性`,\r\n  minProperties:          `不应少于 {limit} 个属性`,\r\n  multipleOf:             `应当是 {multipleOf} 的整数倍`,\r\n  not:                    `不应当匹配 \"not\" schema`,\r\n  oneOf:                  `只能匹配一个 \"oneOf\" 中的 schema`,\r\n  pattern:                `数据格式不正确`,\r\n  uniqueItems:            `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\r\n  custom:                 `格式不正确`,\r\n  propertyNames:          `属性名 \"{propertyName}\" 无效`,\r\n  patternRequired:        `应当有属性匹配模式 {missingPattern}`,\r\n  switch:                 `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\r\n  const:                  `应当等于常量`,\r\n  contains:               `应当包含一个有效项`,\r\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\r\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\r\n  if:                     `应当匹配模式 \"{failingKeyword}\"`,\r\n};\r\n\r\nexport interface ErrorData {\r\n  keyword: string;\r\n  dataPath?: string;\r\n  schemaPath?: string;\r\n  params?: { [key: string]: any };\r\n  message?: string;\r\n  _custom?: boolean;\r\n}\r\n\r\nexport interface ErrorSchema {\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  liveValidate?: boolean;\r\n  /**\r\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\r\n   */\r\n  errors?: { [ key: string ]: string | ((obj: ErrorData) => string) };\r\n  /**\r\n   * 是否立即呈现错误视觉，默认：`false`\r\n   */\r\n  firstVisual?: boolean;\r\n  /**\r\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\r\n   */\r\n  onlyVisual?: boolean;\r\n  /**\r\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\r\n   * - 值始终包含 `DelonSchemaFormConfig.ingoreKeywords`\r\n   */\r\n  ingoreKeywords?: string[];\r\n  /**\r\n   * 自定义校验\r\n   */\r\n  validator?: (value: any, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\r\n}\r\n","import { SFRenderSchema } from './schema/ui';\r\nimport { ERRORSDEFAULT } from './errors';\r\nimport { SFButton } from './interface';\r\n\r\nexport class DelonFormConfig {\r\n  /**\r\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`，默认：`[ 'type', 'enum' ]`\r\n   *\r\n   * - `type` 限定 Schema 中 `type` 类型\r\n   * - `enum` 限定应当是预设定的枚举值之一\r\n   */\r\n  ingoreKeywords?: string[] = ['type', 'enum'];\r\n  /**\r\n   * [ajv](http://epoberezkin.github.io/ajv/#options) 参数\r\n   */\r\n  ajv?: any;\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  liveValidate? = true;\r\n  /**\r\n   * 指定表单 `autocomplete` 值，默认：`on`\r\n   */\r\n  autocomplete?: 'on' | 'off' = null;\r\n  /**\r\n   * 是否立即呈现错误视觉，默认：`false`\r\n   */\r\n  firstVisual? = false;\r\n  /**\r\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\r\n   */\r\n  onlyVisual? = false;\r\n  /**\r\n   * 自定义通用错误信息\r\n   */\r\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\r\n  /**\r\n   * 元素组件大小，用于 `nzSize` 值\r\n   */\r\n  size?: 'default' | 'large' | 'small';\r\n  /**\r\n   * 按钮风格\r\n   */\r\n  button?: SFButton = {\r\n    submit: '提交',\r\n    submit_type: 'primary',\r\n    reset: '重置',\r\n    reset_type: 'default',\r\n  };\r\n  /**\r\n   * date小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`YYYY-MM-DD HH:mm:ss`\r\n   */\r\n  uiDateStringFormat? = 'YYYY-MM-DD HH:mm:ss';\r\n  /**\r\n   * date小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp\r\n   */\r\n  uiDateNumberFormat? = 'x';\r\n  /**\r\n   * time小部件：`type=\"string\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`HH:mm:ss`\r\n   */\r\n  uiTimeStringFormat? = 'HH:mm:ss';\r\n  /**\r\n   * time小部件：`type=\"number\"` 且不指定 `schema.format` 和 `ui.format` 时日期格式，默认：`x` 13位Unix Timestamp，日期统一使用 `1970-01-01`\r\n   */\r\n  uiTimeNumberFormat? = 'x';\r\n}\r\n","import { Observable } from 'rxjs/Observable';\r\nimport { map, takeWhile } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { deepCopy } from '@delon/util';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\r\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\r\n\r\nexport const FORMATMAPS = {\r\n  'date-time': { widget: 'date' },\r\n  date: { widget: 'date' },\r\n  'full-date': { widget: 'date' },\r\n  time: { widget: 'time' },\r\n  'full-time': { widget: 'time' },\r\n  week: { widget: 'date' },\r\n  month: { widget: 'date' },\r\n  uri: { widget: 'upload' },\r\n  email: { widget: 'autocomplete', type: 'email' },\r\n  '': { widget: 'string' },\r\n};\r\n\r\nexport function isBlank(o: any) {\r\n  return o == null;\r\n}\r\n\r\nexport function di(...args) {\r\n  // tslint:disable-next-line:no-console\r\n  console.warn(...args);\r\n}\r\n\r\n/** 根据 `$ref` 查找 `definitions` */\r\nfunction findSchemaDefinition(\r\n  $ref: string,\r\n  definitions: SFSchemaDefinition = {},\r\n) {\r\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\r\n  if (match && match[1]) {\r\n    // parser JSON Pointer\r\n    const parts = match[1].split('/');\r\n    let current: any = definitions;\r\n    for (let part of parts) {\r\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\r\n      if (current.hasOwnProperty(part)) {\r\n        current = current[part];\r\n      } else {\r\n        throw new Error(`Could not find a definition for ${$ref}.`);\r\n      }\r\n    }\r\n    return current;\r\n  }\r\n  throw new Error(`Could not find a definition for ${$ref}.`);\r\n}\r\n\r\n/**\r\n * 取回Schema，并处理 `$ref` 的关系\r\n */\r\nexport function retrieveSchema(\r\n  schema: SFSchema,\r\n  definitions: SFSchemaDefinition = {},\r\n): SFSchema {\r\n  if (schema.hasOwnProperty('$ref')) {\r\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\r\n    // remove $ref property\r\n    const { $ref, ...localSchema } = schema;\r\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\r\n  }\r\n\r\n  return schema;\r\n}\r\n\r\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\r\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\r\n\r\n  if (!schema.if.properties)\r\n    throw new Error(`if: does not contain 'properties'`);\r\n\r\n  const allKeys = Object.keys(schema.properties),\r\n    ifKeys = Object.keys(schema.if.properties);\r\n  detectKey(allKeys, ifKeys);\r\n  detectKey(allKeys, schema.then.required);\r\n  schema.required = schema.required.concat(schema.then.required);\r\n  const hasElse = schema.hasOwnProperty('else');\r\n  if (hasElse) {\r\n    detectKey(allKeys, schema.else.required);\r\n    schema.required = schema.required.concat(schema.else.required);\r\n  }\r\n\r\n  const visibleIf: any = {};\r\n  const visibleElse: any = {};\r\n  ifKeys.forEach(key => {\r\n    const cond = schema.if.properties[key].enum;\r\n    visibleIf[key] = cond;\r\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\r\n  });\r\n\r\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\r\n  if (hasElse)\r\n    schema.else.required.forEach(\r\n      key => (ui[`$${key}`].visibleIf = visibleElse),\r\n    );\r\n\r\n  return schema;\r\n}\r\n\r\nfunction detectKey(keys: string[], detectKeys: string[]) {\r\n  detectKeys.forEach(key => {\r\n    if (!keys.includes(key)) {\r\n      throw new Error(`if: properties does not contain '${key}'`);\r\n    }\r\n  });\r\n}\r\n\r\nexport function orderProperties(properties: string[], order: string[]) {\r\n  if (!Array.isArray(order)) return properties;\r\n  const arrayToHash = arr =>\r\n    arr.reduce((prev, curr) => {\r\n      prev[curr] = true;\r\n      return prev;\r\n    }, {});\r\n  const errorPropList = arr =>\r\n    arr.length > 1\r\n      ? `properties '${arr.join(`', '`)}'`\r\n      : `property '${arr[0]}'`;\r\n\r\n  const propertyHash = arrayToHash(properties);\r\n  const orderHash = arrayToHash(order);\r\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\r\n  if (extraneous.length) {\r\n    throw new Error(\r\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\r\n    );\r\n  }\r\n  const rest = properties.filter(prop => !orderHash[prop]);\r\n  const restIndex = order.indexOf('*');\r\n  if (restIndex === -1) {\r\n    if (rest.length) {\r\n      throw new Error(\r\n        `ui schema order list does not contain ${errorPropList(rest)}`,\r\n      );\r\n    }\r\n    return order;\r\n  }\r\n  if (restIndex !== order.lastIndexOf('*')) {\r\n    throw new Error(\r\n      'ui schema order list contains more than one wildcard item',\r\n    );\r\n  }\r\n  const complete = [...order];\r\n  complete.splice(restIndex, 1, ...rest);\r\n  return complete;\r\n}\r\n\r\nexport function getUiOptions(uiSchema: SFUISchema) {\r\n  if (!uiSchema) return {};\r\n  return Object.keys(uiSchema)\r\n    .filter(key => !key.startsWith('$'))\r\n    .reduce(\r\n      (options, key) => {\r\n        return { ...options, [key]: uiSchema[key] };\r\n      },\r\n      <SFUISchemaItem>{},\r\n    );\r\n}\r\n\r\nexport function getEnum(list: any[], formData: any): SFSchemaEnum[] {\r\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\r\n  if (typeof list[0] !== 'object') {\r\n    list = list.map((item: any) => {\r\n      return <SFSchemaEnum>{ label: item, value: item };\r\n    });\r\n  }\r\n  if (formData) {\r\n    if (!Array.isArray(formData)) formData = [formData];\r\n    list.forEach((item: SFSchemaEnum) => {\r\n      if (~formData.indexOf(item.value)) item.checked = true;\r\n    });\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getCopyEnum(list: any[], formData: any) {\r\n  return getEnum(deepCopy(list || []), formData);\r\n}\r\n\r\nexport function getData(\r\n  schema: SFSchema,\r\n  ui: SFUISchemaItem,\r\n  formData: any,\r\n  asyncArgs?: any,\r\n): Observable<SFSchemaEnum[]> {\r\n  if (typeof ui.asyncData === 'function') {\r\n    return ui\r\n      .asyncData(asyncArgs)\r\n      .pipe(\r\n        takeWhile(() => ui.__destroy !== true),\r\n        map(list => getEnum(list, formData)),\r\n      );\r\n  }\r\n  return of(getCopyEnum(schema.enum, formData));\r\n}\r\n","import { Subject } from 'rxjs/Subject';\r\n\r\nexport class TerminatorService {\r\n  onDestroy: Subject<boolean>;\r\n\r\n  constructor() {\r\n    this.onDestroy = new Subject();\r\n  }\r\n\r\n  destroy() {\r\n    this.onDestroy.next(true);\r\n  }\r\n}\r\n","// tslint:disable:no-use-before-declare\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { map, distinctUntilChanged } from 'rxjs/operators';\r\nimport { combineLatest } from 'rxjs/observable/combineLatest';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { Widget } from '../widget';\r\nimport { isBlank } from '../utils';\r\n\r\nexport abstract class FormProperty {\r\n  schemaValidator: (value: any) => ErrorData[];\r\n  schema: SFSchema;\r\n  ui: SFUISchema | SFUISchemaItemRun;\r\n  formData: {};\r\n  _value: any = null;\r\n  widget: Widget<any>;\r\n  private _errors: ErrorData[] = null;\r\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\r\n  private _valueChanges = new BehaviorSubject<any>(null);\r\n  private _errorsChanges = new BehaviorSubject<any>(null);\r\n  private _visible = true;\r\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\r\n  private _root: PropertyGroup;\r\n  private _parent: PropertyGroup;\r\n  private _path: string;\r\n\r\n  constructor(\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    this.schema = schema;\r\n    this.ui = ui;\r\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\r\n      ingoreKeywords: this.ui.ingoreKeywords,\r\n    });\r\n    this.formData = formData || schema.default;\r\n    this._parent = parent;\r\n    if (parent) {\r\n      this._root = parent.root;\r\n    } else if (this instanceof PropertyGroup) {\r\n      this._root = <PropertyGroup>(<any>this);\r\n    }\r\n    this._path = path;\r\n  }\r\n\r\n  get valueChanges() {\r\n    return this._valueChanges;\r\n  }\r\n\r\n  get errorsChanges() {\r\n    return this._errorsChanges;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.schema.type;\r\n  }\r\n\r\n  get parent(): PropertyGroup {\r\n    return this._parent;\r\n  }\r\n\r\n  get root(): PropertyGroup {\r\n    return this._root || <PropertyGroup>(<any>this);\r\n  }\r\n\r\n  get path(): string {\r\n    return this._path;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  get errors() {\r\n    return this._errors;\r\n  }\r\n\r\n  get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  get valid() {\r\n    return this._errors === null;\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract setValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * 重置值，默认值为 `schema.default`\r\n   *\r\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\r\n   */\r\n  abstract resetValue(value: any, onlySelf: boolean): any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  abstract _hasValue(): boolean;\r\n\r\n  /**\r\n   *  @internal\r\n   */\r\n  abstract _updateValue(): any;\r\n\r\n  /**\r\n   * 更新值且校验数据\r\n   *\r\n   * @param [onlySelf=false] 是否包含上级字段\r\n   * @param [emitValueEvent=true] 是否触发值变更通知\r\n   */\r\n  updateValueAndValidity(\r\n    onlySelf = false,\r\n    emitValueEvent = true,\r\n    emitValidator = true,\r\n  ) {\r\n    this._updateValue();\r\n\r\n    if (emitValueEvent) {\r\n      this.valueChanges.next(this.value);\r\n    }\r\n\r\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\r\n    if (emitValidator && this.ui.liveValidate === true) {\r\n      this._runValidation();\r\n    }\r\n\r\n    if (this.parent && !onlySelf) {\r\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\r\n    }\r\n  }\r\n\r\n  /** 根据路径搜索表单属性 */\r\n  searchProperty(path: string): FormProperty {\r\n    let prop: FormProperty = this;\r\n    let base: PropertyGroup = null;\r\n\r\n    let result = null;\r\n    if (path[0] === '/') {\r\n      base = this.findRoot();\r\n      result = base.getProperty(path.substr(1));\r\n    } else {\r\n      while (result === null && prop.parent !== null) {\r\n        prop = base = prop.parent;\r\n        result = base.getProperty(path);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /** 查找根表单属性 */\r\n  findRoot(): PropertyGroup {\r\n    let property: FormProperty = this;\r\n    while (property.parent !== null) {\r\n      property = property.parent;\r\n    }\r\n    return <PropertyGroup>property;\r\n  }\r\n\r\n  // region: process errors\r\n\r\n  private _isRequired(value: any) {\r\n    if (this.ui._required !== true) return false;\r\n    if (isBlank(value)) return true;\r\n    switch (this.type) {\r\n      case 'string':\r\n        return ('' + value).length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  _runValidation() {\r\n    let errors: ErrorData[];\r\n    // Should not via ajv validator of required fields\r\n    if (this._isRequired(this._value)) {\r\n      errors = [{ keyword: 'required' }];\r\n    } else {\r\n      errors = this.schemaValidator(this._value) || [];\r\n    }\r\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\r\n    if (typeof customValidator === 'function') {\r\n      const customErrors = customValidator(this.value, this, this.findRoot());\r\n      if (customErrors instanceof Observable) {\r\n        customErrors.subscribe(res => {\r\n          this.setCustomErrors(errors, res);\r\n          this.widget.detectChanges();\r\n        });\r\n        return;\r\n      }\r\n      this.setCustomErrors(errors, customErrors);\r\n      return;\r\n    }\r\n\r\n    this._errors = errors;\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\r\n    // fix error format\r\n    const hasCustomError = list != null && list.length > 0;\r\n    if (hasCustomError) {\r\n      list.forEach((err, idx: number) => {\r\n        if (!err.message)\r\n          throw new Error(\r\n            `自定义校验器必须至少返回一个 'message' 属性，用于表示错误文本`,\r\n          );\r\n        err._custom = true;\r\n      });\r\n    }\r\n    this._errors = this.mergeErrors(errors, list);\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\r\n    if (newErrors) {\r\n      if (Array.isArray(newErrors)) {\r\n        errors = errors.concat(...newErrors);\r\n      } else {\r\n        errors.push(newErrors);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\r\n    if (emitFormat && errors && !this.ui.onlyVisual) {\r\n      errors = errors.map((err: ErrorData) => {\r\n        let message =\r\n          err._custom === true && err.message\r\n            ? err.message\r\n            : (this.ui.errors || {})[err.keyword] ||\r\n              this.options.errors[err.keyword] ||\r\n              ``;\r\n\r\n        if (message && typeof message === 'function')\r\n          message = message(err) as string;\r\n\r\n        if (message) {\r\n          if (~(message as string).indexOf('{')) {\r\n            message = (message as string).replace(\r\n              /{([\\.a-z0-9]+)}/g,\r\n              (v: string, key: string) => err.params[key] || '',\r\n            );\r\n          }\r\n          err.message = message as string;\r\n        }\r\n        return err;\r\n      });\r\n    }\r\n    this._errors = errors;\r\n    this._errorsChanges.next(errors);\r\n    // Should send errors to parent field\r\n    if (this._parent) {\r\n      this._parent.setParentAndPlatErrors(errors, this.path);\r\n    }\r\n  }\r\n\r\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\r\n    this._objErrors[path] = errors;\r\n    const platErrors: ErrorData[] = [];\r\n    Object.keys(this._objErrors).forEach(p => {\r\n      const property = this.searchProperty(p);\r\n      if (property && !property.visible) return;\r\n      platErrors.push(...this._objErrors[p]);\r\n    });\r\n    this.setErrors(platErrors, false);\r\n  }\r\n\r\n  // endregion\r\n\r\n  // region: condition\r\n\r\n  private setVisible(visible: boolean) {\r\n    this._visible = visible;\r\n    this._visibilityChanges.next(visible);\r\n    // this.updateValueAndValidity();\r\n    // if (this.parent) {\r\n    //     this.parent.updateValueAndValidity(false, true);\r\n    // }\r\n  }\r\n\r\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\r\n  _bindVisibility() {\r\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\r\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\r\n      this.setVisible(false);\r\n    } else if (visibleIf !== undefined) {\r\n      const propertiesBinding = [];\r\n      for (const dependencyPath in visibleIf) {\r\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\r\n          const property = this.searchProperty(dependencyPath);\r\n          if (property) {\r\n            const valueCheck = property.valueChanges.pipe(\r\n              map((value: any) => {\r\n                const vi = visibleIf[dependencyPath];\r\n                if (typeof vi === 'function') return vi(value);\r\n                if (vi.indexOf('$ANY$') !== -1) {\r\n                  return value.length > 0;\r\n                } else {\r\n                  return vi.indexOf(value) !== -1;\r\n                }\r\n              }),\r\n            );\r\n            const visibilityCheck = property._visibilityChanges;\r\n            const and = combineLatest(\r\n              [valueCheck, visibilityCheck],\r\n              (v1: boolean, v2: boolean) => v1 && v2,\r\n            );\r\n            propertiesBinding.push(and);\r\n          } else {\r\n            console.warn(\r\n              `Can't find property ${dependencyPath} for visibility check of ${\r\n                this.path\r\n              }`,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      combineLatest(\r\n        propertiesBinding,\r\n        (...values: boolean[]) => values.indexOf(true) !== -1,\r\n      )\r\n        .pipe(distinctUntilChanged())\r\n        .subscribe(visible => this.setVisible(visible));\r\n    }\r\n  }\r\n\r\n  // endregion\r\n}\r\n\r\nexport abstract class PropertyGroup extends FormProperty {\r\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\r\n\r\n    let property = this.properties[propertyId];\r\n    if (\r\n      property !== null &&\r\n      subPathIdx !== -1 &&\r\n      property instanceof PropertyGroup\r\n    ) {\r\n      const subPath = path.substr(subPathIdx + 1);\r\n      property = (<PropertyGroup>property).getProperty(subPath);\r\n    }\r\n    return property;\r\n  }\r\n\r\n  forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\r\n    for (const propertyId in this.properties) {\r\n      if (this.properties.hasOwnProperty(propertyId)) {\r\n        const property = this.properties[propertyId];\r\n        fn(property, propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\r\n    this.forEachChild(child => {\r\n      fn(child);\r\n      if (child instanceof PropertyGroup) {\r\n        (<PropertyGroup>child).forEachChildRecursive(fn);\r\n      }\r\n    });\r\n  }\r\n\r\n  _bindVisibility() {\r\n    super._bindVisibility();\r\n    this._bindVisibilityRecursive();\r\n  }\r\n\r\n  private _bindVisibilityRecursive() {\r\n    this.forEachChildRecursive(property => {\r\n      property._bindVisibility();\r\n    });\r\n  }\r\n\r\n  isRoot() {\r\n    return this === this.root;\r\n  }\r\n}\r\n","import { FormProperty } from './form.property';\r\n\r\nexport abstract class AtomicProperty extends FormProperty {\r\n  abstract fallbackValue(): any;\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    if (value == null) {\r\n      if (this.schema.default !== undefined) {\r\n        value = this.schema.default;\r\n      } else {\r\n        value = this.fallbackValue();\r\n      }\r\n    }\r\n    this._value = value;\r\n\r\n    this.updateValueAndValidity(onlySelf, true);\r\n\r\n    if (this.widget) this.widget.reset(value);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return this.fallbackValue() !== this.value;\r\n  }\r\n\r\n  _updateValue() {}\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class NumberProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    if (typeof value === 'string') {\r\n      if (value.length) {\r\n        value =\r\n          value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\r\n      } else {\r\n        value = null;\r\n      }\r\n    }\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class StringProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return '';\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomic.property';\r\n\r\nexport class BooleanProperty extends AtomicProperty {\r\n  fallbackValue(): any {\r\n    return null;\r\n  }\r\n}\r\n","import { PropertyGroup, FormProperty } from './form.property';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { DelonFormConfig } from '../config';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { ObjectProperty } from './object.property';\r\nimport { ErrorData } from '../errors';\r\n\r\nexport class ArrayProperty extends PropertyGroup {\r\n  tick = 1;\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.properties = [];\r\n  }\r\n\r\n  getProperty(path: string) {\r\n    const subPathIdx = path.indexOf('/');\r\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\r\n    const list = this.properties as PropertyGroup[];\r\n    if (isNaN(pos) || pos >= list.length) return undefined;\r\n    const subPath = path.substr(subPathIdx + 1);\r\n    return list[pos].getProperty(subPath);\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    this._value = value || this.schema.default || [];\r\n    this.properties = [];\r\n    this.clearErrors();\r\n    this.resetProperties(this._value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  _hasValue(): boolean {\r\n    return true;\r\n  }\r\n\r\n  _updateValue() {\r\n    const value: any[] = [];\r\n    this.forEachChild((property: ObjectProperty, _) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value.push(Object.assign({}, property.formData, property.value));\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n\r\n  private addProperty(value: any) {\r\n    const newProperty = this.formPropertyFactory.createProperty(\r\n      this.schema.items,\r\n      this.ui.$items,\r\n      value,\r\n      this,\r\n    ) as ObjectProperty;\r\n    (<FormProperty[]>this.properties).push(newProperty);\r\n    return newProperty;\r\n  }\r\n\r\n  private resetProperties(value: any[]) {\r\n    for (const item of value) {\r\n      const property = this.addProperty(item);\r\n      property.resetValue(item, true);\r\n    }\r\n  }\r\n\r\n  private clearErrors(path?: string) {\r\n    if (path) delete this._objErrors[path];\r\n    else this._objErrors = {};\r\n  }\r\n\r\n  // region: actions\r\n\r\n  add(value: any = null): FormProperty {\r\n    const newProperty = this.addProperty(value);\r\n    newProperty.resetValue(value, false);\r\n    return newProperty;\r\n  }\r\n\r\n  remove(index: number) {\r\n    const list = <FormProperty[]>this.properties;\r\n    this.clearErrors(list[index].path);\r\n    list.splice(index, 1);\r\n    this.updateValueAndValidity(false, true);\r\n  }\r\n\r\n  // endregion\r\n}\r\n","import { PropertyGroup } from './form.property';\r\nimport { FormPropertyFactory } from './form.property.factory';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { DelonFormConfig } from '../config';\r\nimport { ErrorData } from '../errors';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { orderProperties } from '../utils';\r\n\r\nexport class ObjectProperty extends PropertyGroup {\r\n  private _propertiesId: string[] = [];\r\n\r\n  get propertiesId() {\r\n    return this._propertiesId;\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    schema: any,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    options: DelonFormConfig,\r\n  ) {\r\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\r\n    this.createProperties();\r\n  }\r\n\r\n  private createProperties() {\r\n    this.properties = {};\r\n    this._propertiesId = [];\r\n    let orderedProperties: string[];\r\n    try {\r\n      orderedProperties = orderProperties(\r\n        Object.keys(this.schema.properties),\r\n        this.ui.order,\r\n      );\r\n    } catch (e) {\r\n      console.error(\r\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\r\n        e,\r\n      );\r\n    }\r\n    orderedProperties.forEach(propertyId => {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        const propertySchema = this.schema.properties[propertyId];\r\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(\r\n          this.schema.properties[propertyId],\r\n          this.ui['$' + propertyId],\r\n          (this.formData || {})[propertyId],\r\n          this,\r\n          propertyId,\r\n        );\r\n        this._propertiesId.push(propertyId);\r\n      }\r\n    });\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    for (const propertyId in value) {\r\n      if (value.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].setValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  resetValue(value: any, onlySelf: boolean) {\r\n    value = value || this.schema.default || {};\r\n    for (const propertyId in this.schema.properties) {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].resetValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n  _hasValue(): boolean {\r\n    return this.value != null && !!Object.keys(this.value).length;\r\n  }\r\n  _updateValue() {\r\n    const value: any = {};\r\n    this.forEachChild((property: any, propertyId: string) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value[propertyId] = property.value;\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n}\r\n","import { DelonFormConfig } from '../config';\r\nimport { SchemaValidatorFactory } from '../validator.factory';\r\nimport { PropertyGroup, FormProperty } from './form.property';\r\nimport { NumberProperty } from './number.property';\r\nimport { StringProperty } from './string.property';\r\nimport { BooleanProperty } from './boolean.property';\r\nimport { ArrayProperty } from './array.property';\r\nimport { ObjectProperty } from './object.property';\r\nimport { SFSchema } from '../schema';\r\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\r\nimport { retrieveSchema } from '../utils';\r\n\r\nexport class FormPropertyFactory {\r\n  constructor(\r\n    private schemaValidatorFactory: SchemaValidatorFactory,\r\n    private options: DelonFormConfig,\r\n  ) {}\r\n\r\n  createProperty(\r\n    schema: SFSchema,\r\n    ui: SFUISchema | SFUISchemaItem,\r\n    formData: {},\r\n    parent: PropertyGroup = null,\r\n    propertyId?: string,\r\n  ): FormProperty {\r\n    let newProperty = null;\r\n    let path = '';\r\n    if (parent) {\r\n      path += parent.path;\r\n      if (parent.parent !== null) {\r\n        path += '/';\r\n      }\r\n      if (parent.type === 'object') {\r\n        path += propertyId;\r\n      } else if (parent.type === 'array') {\r\n        path += (parent as ArrayProperty).tick++;\r\n      } else {\r\n        throw new Error(\r\n          'Instanciation of a FormProperty with an unknown parent type: ' +\r\n            parent.type,\r\n        );\r\n      }\r\n    } else {\r\n      path = '/';\r\n    }\r\n\r\n    if (schema.$ref) {\r\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\r\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\r\n    } else {\r\n      // fix required\r\n      if (\r\n        propertyId &&\r\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\r\n      )\r\n        ui._required = true;\r\n      // fix title\r\n      if (schema.title == null) schema.title = propertyId;\r\n      // fix date\r\n      if (\r\n        (schema.type === 'string' || schema.type === 'number') &&\r\n        !schema.format &&\r\n        !(ui as SFUISchemaItem).format\r\n      ) {\r\n        if ((ui as SFUISchemaItem).widget === 'date')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiDateStringFormat\r\n              : this.options.uiDateNumberFormat;\r\n        else if ((ui as SFUISchemaItem).widget === 'time')\r\n          ui.format =\r\n            schema.type === 'string'\r\n              ? this.options.uiTimeStringFormat\r\n              : this.options.uiTimeNumberFormat;\r\n      }\r\n      switch (schema.type) {\r\n        case 'integer':\r\n        case 'number':\r\n          newProperty = new NumberProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'string':\r\n          newProperty = new StringProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'boolean':\r\n          newProperty = new BooleanProperty(\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'object':\r\n          newProperty = new ObjectProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        case 'array':\r\n          newProperty = new ArrayProperty(\r\n            this,\r\n            this.schemaValidatorFactory,\r\n            schema,\r\n            ui,\r\n            formData,\r\n            parent,\r\n            path,\r\n            this.options,\r\n          );\r\n          break;\r\n        default:\r\n          throw new TypeError(`Undefined type ${schema.type}`);\r\n      }\r\n    }\r\n\r\n    if (newProperty instanceof PropertyGroup) {\r\n      this.initializeRoot(newProperty);\r\n    }\r\n\r\n    return newProperty;\r\n  }\r\n\r\n  private initializeRoot(rootProperty: PropertyGroup) {\r\n    // rootProperty.init();\r\n    rootProperty._bindVisibility();\r\n  }\r\n}\r\n","import { Inject, Optional } from '@angular/core';\r\nimport { DelonFormConfig } from './config';\r\nimport { ErrorData } from './errors';\r\nimport { SFSchema } from './schema';\r\n\r\ndeclare var Ajv: any;\r\n\r\nexport abstract class SchemaValidatorFactory {\r\n  abstract createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: SFSchema) => ErrorData[];\r\n}\r\n\r\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\r\n  protected ajv: any;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(DelonFormConfig)\r\n    private options: DelonFormConfig,\r\n  ) {\r\n    super();\r\n    this.ajv = new Ajv(\r\n      Object.assign({}, options.ajv, {\r\n        errorDataPath: 'property',\r\n        allErrors: true,\r\n        jsonPointers: true,\r\n      }),\r\n    );\r\n    this.ajv.addFormat(\r\n      'data-url',\r\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\r\n    );\r\n    this.ajv.addFormat(\r\n      'color',\r\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\r\n    );\r\n  }\r\n\r\n  createValidatorFn(\r\n    schema: SFSchema,\r\n    extraOptions: { ingoreKeywords: string[] },\r\n  ): (value: any) => ErrorData[] {\r\n    const ingoreKeywords: string[] = []\r\n      .concat(this.options.ingoreKeywords)\r\n      .concat(extraOptions.ingoreKeywords);\r\n\r\n    return (value: any): ErrorData[] => {\r\n      try {\r\n        this.ajv.validate(schema, value);\r\n      } catch (e) {\r\n        // swallow errors thrown in ajv due to invalid schemas, these\r\n        // still get displayed\r\n      }\r\n      let errors = this.ajv.errors;\r\n      if (this.options && ingoreKeywords && errors) {\r\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\r\n      }\r\n      return errors;\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n} from '@angular/core';\r\nimport { Widget } from './widget';\r\n\r\nexport class WidgetRegistry {\r\n  private widgets: { [type: string]: any } = {};\r\n\r\n  private defaultWidget: any;\r\n\r\n  setDefault(widget: any) {\r\n    this.defaultWidget = widget;\r\n  }\r\n\r\n  register(type: string, widget: any) {\r\n    this.widgets[type] = widget;\r\n  }\r\n\r\n  has(type: string) {\r\n    return this.widgets.hasOwnProperty(type);\r\n  }\r\n\r\n  getType(type: string): any {\r\n    if (this.has(type)) {\r\n      return this.widgets[type];\r\n    }\r\n    return this.defaultWidget;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class WidgetFactory {\r\n  private resolver: ComponentFactoryResolver;\r\n  private registry: WidgetRegistry;\r\n\r\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\r\n    this.registry = registry;\r\n    this.resolver = resolver;\r\n  }\r\n\r\n  createWidget(\r\n    container: ViewContainerRef,\r\n    type: string,\r\n  ): ComponentRef<Widget<any>> {\r\n    if (!this.registry.has(type)) {\r\n      console.warn(`No widget for type \"${type}\"`);\r\n    }\r\n\r\n    const componentClass = this.registry.getType(type);\r\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<any>>(\r\n      componentClass,\r\n    );\r\n    return container.createComponent(componentFactory);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  Input,\r\n  SimpleChange,\r\n  Output,\r\n  EventEmitter,\r\n  TemplateRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { deepCopy } from '@delon/util';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport { di, retrieveSchema, FORMATMAPS, resolveIf } from './utils';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFSchema } from './schema/index';\r\nimport {\r\n  SFUISchema,\r\n  SFUISchemaItem,\r\n  SFRenderSchema,\r\n  SFUISchemaItemRun,\r\n} from './schema/ui';\r\nimport { FormProperty } from './model/form.property';\r\nimport { FormPropertyFactory } from './model/form.property.factory';\r\nimport { SchemaValidatorFactory } from './validator.factory';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { SFButton } from './interface';\r\nimport { ErrorData } from './errors';\r\n\r\nexport function useFactory(\r\n  schemaValidatorFactory: any,\r\n  options: DelonFormConfig,\r\n) {\r\n  return new FormPropertyFactory(schemaValidatorFactory, options);\r\n}\r\n\r\n@Component({\r\n  selector: 'sf, [sf]',\r\n  template: `\r\n  <ng-template #con><ng-content></ng-content></ng-template>\r\n  <form nz-form [nzLayout]=\"layout\" (submit)=\"onSubmit($event)\" [attr.autocomplete]=\"autocomplete\">\r\n    <sf-item [formProperty]=\"rootProperty\"></sf-item>\r\n    <ng-container *ngIf=\"button !== 'none'; else con\">\r\n      <nz-form-item [ngClass]=\"_btn.render.class\" class=\"sf-btns\" [fixed-label]=\"_btn.render.spanLabelFixed\">\r\n        <nz-col class=\"ant-form-item-control-wrapper\"\r\n          [nzSpan]=\"_btn.render.grid.span\" [nzOffset]=\"_btn.render.grid.offset\"\r\n          [nzXs]=\"_btn.render.grid.xs\" [nzSm]=\"_btn.render.grid.sm\" [nzMd]=\"_btn.render.grid.md\"\r\n          [nzLg]=\"_btn.render.grid.lg\" [nzXl]=\"_btn.render.grid.xl\">\r\n          <div class=\"ant-form-item-control\">\r\n            <ng-container *ngIf=\"button; else con\">\r\n              <button type=\"submit\" nz-button [nzType]=\"_btn.submit_type\" [disabled]=\"liveValidate && !valid\">{{_btn.submit}}</button>\r\n              <button *ngIf=\"_btn.reset\" (click)=\"reset()\" type=\"button\" nz-button [nzType]=\"_btn.reset_type\">{{_btn.reset}}</button>\r\n            </ng-container>\r\n          </div>\r\n        </nz-col>\r\n      </nz-form-item>\r\n    </ng-container>\r\n  </form>`,\r\n  providers: [\r\n    WidgetFactory,\r\n    {\r\n      provide: FormPropertyFactory,\r\n      useFactory: useFactory,\r\n      deps: [SchemaValidatorFactory, DelonFormConfig],\r\n    },\r\n    TerminatorService,\r\n  ],\r\n  host: {\r\n    '[class.sf]': 'true',\r\n    '[class.sf-search]': `mode === 'search'`,\r\n    '[class.sf-edit]': `mode === 'edit'`,\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\r\n  rootProperty: FormProperty = null;\r\n  _formData: any;\r\n  _btn: SFButton;\r\n  _schema: SFSchema;\r\n  _ui: SFUISchema;\r\n  private _item: any;\r\n  private _valid = true;\r\n  private _defUi: SFUISchemaItem;\r\n  private _inited = false;\r\n\r\n  // region: fields\r\n\r\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\r\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\r\n\r\n  /** JSON Schema */\r\n  @Input() schema: SFSchema;\r\n\r\n  /** UI Schema */\r\n  @Input() ui: SFUISchema;\r\n\r\n  /** 表单默认值 */\r\n  @Input() formData: {};\r\n\r\n  /**\r\n   * 按钮\r\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\r\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\r\n   * - 使用固定 `label` 标签宽度时，若无 `render.class` 则默认为居中状态\r\n   */\r\n  @Input() button: SFButton | 'none' = {};\r\n\r\n  /**\r\n   * 是否实时校验，默认：`true`\r\n   * - `true` 每一次都校验\r\n   * - `false` 提交时校验\r\n   */\r\n  @Input()\r\n  get liveValidate() {\r\n    return this._liveValidate;\r\n  }\r\n  set liveValidate(value: any) {\r\n    this._liveValidate = coerceBooleanProperty(value);\r\n  }\r\n  private _liveValidate = true;\r\n\r\n  /** 指定表单 `autocomplete` 值 */\r\n  @Input() autocomplete: 'on' | 'off';\r\n\r\n  /** 立即显示错误视觉 */\r\n  @Input()\r\n  get firstVisual() {\r\n    return this._firstVisual;\r\n  }\r\n  set firstVisual(value: any) {\r\n    this._firstVisual = coerceBooleanProperty(value);\r\n  }\r\n  private _firstVisual = true;\r\n\r\n  /** 表单模式 */\r\n  @Input()\r\n  set mode(value: 'default' | 'search' | 'edit') {\r\n    switch (value) {\r\n      case 'search':\r\n        this.layout = 'inline';\r\n        this.firstVisual = false;\r\n        this.liveValidate = false;\r\n        if (this._btn) this._btn.submit = '搜索';\r\n        break;\r\n      case 'edit':\r\n        this.layout = 'horizontal';\r\n        this.firstVisual = false;\r\n        this.liveValidate = true;\r\n        if (this._btn) this._btn.submit = '保存';\r\n        break;\r\n    }\r\n    this._mode = value;\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  private _mode: 'default' | 'search' | 'edit';\r\n\r\n  /** 数据变更时回调 */\r\n  @Output() formChange = new EventEmitter<{}>();\r\n\r\n  /** 提交表单时回调 */\r\n  @Output() formSubmit = new EventEmitter<{}>();\r\n\r\n  /** 重置表单时回调 */\r\n  @Output() formReset = new EventEmitter<{}>();\r\n\r\n  /** 表单校验结果回调 */\r\n  @Output() formError = new EventEmitter<ErrorData[]>();\r\n\r\n  // endregion\r\n\r\n  /** 表单校验状态 */\r\n  get valid(): boolean {\r\n    return this._valid;\r\n  }\r\n\r\n  /** 表单值 */\r\n  get value(): any {\r\n    return this._item;\r\n  }\r\n\r\n  onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!this.liveValidate) this.validator();\r\n    if (!this.valid) return;\r\n    this.formSubmit.emit(this.value);\r\n  }\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    private terminator: TerminatorService,\r\n    private options: DelonFormConfig,\r\n    private cd: ChangeDetectorRef,\r\n  ) {\r\n    this.liveValidate = options.liveValidate;\r\n    this.firstVisual = options.firstVisual;\r\n    this.autocomplete = options.autocomplete;\r\n  }\r\n\r\n  private coverProperty() {\r\n    const isHorizontal = this.layout === 'horizontal';\r\n    const _schema = deepCopy(this.schema);\r\n    const { definitions } = _schema;\r\n\r\n    const inFn = (\r\n      schema: SFSchema,\r\n      parentSchema: SFSchema,\r\n      uiSchema: SFUISchemaItemRun,\r\n      parentUiSchema: SFUISchemaItemRun,\r\n      uiRes: SFUISchemaItemRun,\r\n    ) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const uiKey = `$${key}`;\r\n        const property = retrieveSchema(\r\n          schema.properties[key] as SFSchema,\r\n          definitions,\r\n        );\r\n        const ui = Object.assign(\r\n          { widget: property.type },\r\n          property.format && FORMATMAPS[property.format],\r\n          typeof property.ui === 'string' ? { widget: property.ui } : null,\r\n          !property.ui &&\r\n          Array.isArray(property.enum) &&\r\n          property.enum.length > 0\r\n            ? { widget: 'select' }\r\n            : null,\r\n          this._defUi,\r\n          property.ui,\r\n          uiSchema[uiKey],\r\n        ) as SFUISchemaItemRun;\r\n        // 继承父节点布局属性\r\n        if (isHorizontal) {\r\n          if (parentUiSchema.spanLabelFixed) {\r\n            if (!ui.spanLabelFixed)\r\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\r\n          } else {\r\n            if (!ui.spanLabel)\r\n              ui.spanLabel =\r\n                typeof parentUiSchema.spanLabel === 'undefined'\r\n                  ? 5\r\n                  : parentUiSchema.spanLabel;\r\n            if (!ui.spanControl)\r\n              ui.spanControl =\r\n                typeof parentUiSchema.spanControl === 'undefined'\r\n                  ? 19\r\n                  : parentUiSchema.spanControl;\r\n            if (!ui.offsetControl)\r\n              ui.offsetControl =\r\n                typeof parentUiSchema.offsetControl === 'undefined'\r\n                  ? null\r\n                  : parentUiSchema.offsetControl;\r\n          }\r\n        } else {\r\n          ui.spanLabel = null;\r\n          ui.spanControl = null;\r\n          ui.offsetControl = null;\r\n        }\r\n\r\n        uiRes[uiKey] = ui;\r\n        delete property.ui;\r\n\r\n        if (property.items) {\r\n          uiRes[uiKey]['$items'] = uiRes[uiKey]['$items'] || {};\r\n          inFn(\r\n            property.items,\r\n            property.items,\r\n            (uiSchema[uiKey] || {})['$items'] || {},\r\n            ui,\r\n            uiRes[uiKey]['$items'],\r\n          );\r\n        }\r\n\r\n        if (property.properties && Object.keys(property.properties).length) {\r\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\r\n      Object.keys(schema.properties).forEach(key => {\r\n        const property = schema.properties[key];\r\n        const uiKey = `$${key}`;\r\n        resolveIf(property, ui[uiKey]);\r\n        if (property.items) {\r\n          inIfFn(property.items, ui[uiKey].$items);\r\n        }\r\n        if (property.properties) {\r\n          inIfFn(property, ui[uiKey]);\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.ui == null) this.ui = {};\r\n    this._defUi = Object.assign(\r\n      <SFUISchemaItem>{\r\n        onlyVisual: this.options.onlyVisual,\r\n        size: this.options.size,\r\n        liveValidate: this.liveValidate,\r\n        firstVisual: this.firstVisual,\r\n      },\r\n      _schema.ui,\r\n      this.ui['*'],\r\n    );\r\n\r\n    // root\r\n    this._ui = Object.assign({}, this._defUi);\r\n\r\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\r\n\r\n    // cond\r\n    resolveIf(_schema, this._ui);\r\n    inIfFn(_schema, this._ui);\r\n\r\n    this._schema = _schema;\r\n\r\n    if (this._ui.debug) di('cover schema & ui', this._ui, _schema);\r\n  }\r\n\r\n  private coverButtonProperty() {\r\n    this._btn = Object.assign({ render: {} }, this.options.button, this.button);\r\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\r\n    if (this.layout === 'horizontal') {\r\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\r\n      if (!this._btn.render.grid) {\r\n        this._btn.render.grid = {\r\n          offset: btnUi.spanLabel,\r\n          span: btnUi.spanControl,\r\n        };\r\n      }\r\n      // fixed label\r\n      if (!this._btn.render.spanLabelFixed) {\r\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\r\n      }\r\n      // 固定标签宽度时，若不指定样式，则默认居中\r\n      if (\r\n        !this._btn.render.class &&\r\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\r\n      ) {\r\n        this._btn.render.class = 'text-center';\r\n      }\r\n    } else {\r\n      this._btn.render.grid = {};\r\n    }\r\n    if (this._mode) this.mode = this._mode;\r\n    if (this._ui.debug) di('button property', this._btn);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._inited = true;\r\n    this.validator();\r\n  }\r\n\r\n  ngOnChanges(\r\n    changes: { [P in keyof this]?: SimpleChange } & SimpleChanges,\r\n  ): void {\r\n    this.refreshSchema();\r\n  }\r\n\r\n  /** @internal */\r\n  _addTpl(path: string, templateRef: TemplateRef<{}>) {\r\n    const property = this.rootProperty.searchProperty(path);\r\n    if (!property) {\r\n      console.warn(`未找到路径 ${path}`);\r\n      return;\r\n    }\r\n    (property.ui as SFUISchemaItemRun)._render = templateRef;\r\n  }\r\n\r\n  private validator() {\r\n    this.rootProperty._runValidation();\r\n    const errors = this.rootProperty.errors;\r\n    this._valid = !(errors && errors.length);\r\n    this.formError.emit(errors);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * 刷新 Schema，一般需要动态修改 Schema 某个值时可以方便调用\r\n   */\r\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema) {\r\n    if (newSchema) this.schema = newSchema;\r\n    if (newUI) this.ui = newUI;\r\n\r\n    if (!this.schema || typeof this.schema.properties === 'undefined')\r\n      throw new Error(`Invalid Schema`);\r\n    if (this.schema.ui && typeof this.schema.ui === 'string')\r\n      throw new Error(`Don't support string with root ui property`);\r\n\r\n    this.schema.type = 'object';\r\n\r\n    this._formData = { ...this.formData };\r\n\r\n    if (this._inited) this.terminator.destroy();\r\n\r\n    this.coverProperty();\r\n    this.coverButtonProperty();\r\n\r\n    this.rootProperty = this.formPropertyFactory.createProperty(\r\n      this._schema,\r\n      this._ui,\r\n      this.formData,\r\n    );\r\n\r\n    this.rootProperty.valueChanges.subscribe(value => {\r\n      this._item = Object.assign({}, this.formData, value);\r\n      this.formChange.emit(this._item);\r\n    });\r\n    this.rootProperty.errorsChanges.subscribe(errors => {\r\n      this._valid = !(errors && errors.length);\r\n      this.formError.emit(errors);\r\n      this.cd.detectChanges();\r\n    });\r\n\r\n    this.reset();\r\n  }\r\n\r\n  /** 重置表单 */\r\n  reset() {\r\n    this.rootProperty.resetValue(this.formData, false);\r\n    Promise.resolve().then(() => this.cd.detectChanges());\r\n    this.formReset.emit(this.value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.terminator.destroy();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormProperty } from './model/form.property';\r\nimport { Widget } from './widget';\r\nimport { WidgetFactory } from './widget.factory';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { SFUISchemaItem } from './schema/ui';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Component({\r\n  selector: 'sf-item',\r\n  template: `<ng-template #target></ng-template>`,\r\n})\r\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\r\n  private ref: ComponentRef<any>;\r\n  widget: Widget<any> = null;\r\n\r\n  // region: fields\r\n\r\n  @Input() formProperty: FormProperty;\r\n\r\n  @ViewChild('target', { read: ViewContainerRef })\r\n  container: ViewContainerRef;\r\n\r\n  // endregion\r\n\r\n  constructor(\r\n    private widgetFactory: WidgetFactory,\r\n    private terminator: TerminatorService,\r\n  ) {}\r\n\r\n  onWidgetInstanciated(widget: Widget<any>) {\r\n    this.widget = widget;\r\n    const id = `_sf-${nextUniqueId++}`;\r\n\r\n    const ui = this.formProperty.ui as SFUISchemaItem;\r\n    this.widget.formProperty = this.formProperty;\r\n    this.widget.schema = this.formProperty.schema;\r\n    this.widget.ui = ui;\r\n    this.widget.id = id;\r\n    this.widget.firstVisual = ui.firstVisual;\r\n    this.formProperty.widget = widget;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.terminator.onDestroy.subscribe(() => {\r\n      this.ngOnDestroy();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.ref = this.widgetFactory.createWidget(\r\n      this.container,\r\n      this.formProperty.ui.widget || this.formProperty.schema.type,\r\n    );\r\n    this.onWidgetInstanciated(this.ref.instance);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.formProperty.ui.__destroy = true;\r\n    this.ref.destroy();\r\n  }\r\n}\r\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf-fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector(\n        '.ant-form-item-control-wrapper',\n      );\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  template: `\n  <nz-form-item>\n    <nz-col *ngIf=\"showTitle\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\n      <label [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n        {{ schema.title }}\n        <span class=\"optional\">\n          {{ ui.optional }}\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n          </nz-tooltip>\n        </span>\n      </label>\n    </nz-col>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n        <ng-content></ng-content>\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>`,\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n}\n","import { Directive, Input, TemplateRef, OnInit } from '@angular/core';\r\nimport { SFComponent } from '../../sf.component';\r\n\r\n@Directive({\r\n  selector: '[sf-template]',\r\n})\r\nexport class SFTemplateDirective implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('sf-template') path: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private table: SFComponent,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.table._addTpl(\r\n      this.path.startsWith('/') ? this.path : `/` + this.path,\r\n      this.templateRef,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HostBinding,\r\n  Optional,\r\n  AfterViewInit,\r\n  Inject,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { di } from './utils';\r\nimport { FormProperty } from './model/form.property';\r\nimport { ArrayProperty } from './model/array.property';\r\nimport { ObjectProperty } from './model/object.property';\r\nimport { SFSchema } from './schema';\r\nimport { SFUISchemaItem } from './schema/ui';\r\nimport { ErrorData } from './errors';\r\nimport { SFComponent } from './sf.component';\r\n\r\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\r\n  formProperty: T;\r\n  error: string;\r\n  showError = false;\r\n  id = '';\r\n  schema: SFSchema;\r\n  ui: SFUISchemaItem;\r\n  firstVisual = false;\r\n\r\n  @HostBinding('class')\r\n  get cls() {\r\n    return this.ui.class || '';\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    if (typeof this.schema.readOnly !== 'undefined')\r\n      return this.schema.readOnly;\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\r\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.formProperty.errorsChanges\r\n      .pipe(filter(w => w != null))\r\n      .subscribe((errors: ErrorData[]) => {\r\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\r\n\r\n        // 不显示首次校验视觉\r\n        if (this.firstVisual) {\r\n          this.showError = errors.length > 0;\r\n          this.error = this.showError ? errors[0].message : '';\r\n\r\n          if (this.ui.__destroy !== true) this.cd.detectChanges();\r\n        }\r\n        this.firstVisual = true;\r\n      });\r\n  }\r\n\r\n  setValue(value: any) {\r\n    this.formProperty.setValue(value, false);\r\n    if (this.ui.debug)\r\n      di('valueChanges', this.formProperty.path, this.formProperty);\r\n  }\r\n\r\n  get value() {\r\n    return this.formProperty.value;\r\n  }\r\n\r\n  detectChanges() {\r\n    this.cd.detectChanges();\r\n    this.formProperty.root.widget.cd.markForCheck();\r\n  }\r\n\r\n  abstract reset(value: any);\r\n}\r\n\r\nexport class ControlWidget extends Widget<FormProperty> {\r\n  reset(value: any) {}\r\n}\r\n\r\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n\r\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\r\n  implements AfterViewInit {\r\n  reset(value: any) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.formProperty.errorsChanges.subscribe(() => this.cd.detectChanges());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ObjectLayoutWidget } from '../../widget';\r\nimport { SFGridSchema } from '../../schema/ui';\r\nimport { FormProperty } from '../../model/form.property';\r\n\r\n@Component({\r\n  selector: 'sf-object',\r\n  template: `\r\n  <ng-container *ngIf=\"grid; else noGrid\">\r\n    <nz-row [nzGutter]=\"grid.gutter\">\r\n      <ng-container *ngFor=\"let i of list\">\r\n        <ng-container *ngIf=\"i.property.visible\">\r\n          <nz-col\r\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\r\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\r\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\r\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n          </nz-col>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-row>\r\n  </ng-container>\r\n  <ng-template #noGrid>\r\n    <ng-container *ngFor=\"let i of list\">\r\n      <ng-container *ngIf=\"i.property.visible\">\r\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-template>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\r\n  grid: SFGridSchema;\r\n  list: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.grid = this.ui.grid;\r\n    const list: any[] = [];\r\n    for (const key of this.formProperty.propertiesId) {\r\n      const property = this.formProperty.properties[key] as FormProperty;\r\n      const item = {\r\n        property,\r\n        grid: property.ui.grid || this.grid || {},\r\n        spanLabelFixed: property.ui.spanLabelFixed,\r\n      };\r\n      list.push(item);\r\n    }\r\n    this.list = list;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ArrayLayoutWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-array',\r\n  template: `\r\n  <nz-form-item>\r\n    <nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel\" class=\"ant-form-item-label\">\r\n      <label>\r\n        {{ schema.title }}\r\n        <span class=\"optional\">\r\n          {{ ui.optional }}\r\n          <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\r\n            <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\r\n          </nz-tooltip>\r\n        </span>\r\n      </label>\r\n      <div class=\"add\">\r\n        <button nz-button [nzType]=\"addType\" [disabled]=\"addDisabled\" (click)=\"addItem()\" [innerHTML]=\"addTitle\"></button>\r\n      </div>\r\n    </nz-col>\r\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl\" [nzOffset]=\"ui.offsetControl\">\r\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\r\n\r\n        <nz-row class=\"sf-array-container\">\r\n          <ng-container *ngFor=\"let i of formProperty.properties; let idx=index\">\r\n            <nz-col [nzSpan]=\"arraySpan\" *ngIf=\"i.visible\">\r\n              <nz-card>\r\n                <sf-item [formProperty]=\"i\"></sf-item>\r\n                <span *ngIf=\"removeTitle\" class=\"remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\r\n                  <i class=\"anticon anticon-delete\"></i>\r\n                </span>\r\n              </nz-card>\r\n            </nz-col>\r\n          </ng-container>\r\n        </nz-row>\r\n\r\n        <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\r\n        <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\r\n\r\n      </div>\r\n    </nz-col>\r\n  </nz-form-item>\r\n  `\r\n})\r\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\r\n  addTitle: string;\r\n  addType: string;\r\n  removeTitle: string;\r\n  arraySpan = 8;\r\n\r\n  get addDisabled() {\r\n    return (\r\n      this.schema.maxItems &&\r\n      (this.formProperty.properties as any[]).length >= this.schema.maxItems\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.ui.grid && this.ui.grid.arraySpan)\r\n      this.arraySpan = this.ui.grid.arraySpan;\r\n\r\n    this.addTitle = this.ui.addTitle || '添加';\r\n    this.addType = this.ui.addType || 'dashed';\r\n    this.removeTitle =\r\n      this.ui.removable === false ? null : this.ui.removeTitle || '移除';\r\n  }\r\n\r\n  addItem() {\r\n    this.formProperty.add();\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.formProperty.remove(index);\r\n  }\r\n\r\n  trackByIndex(index: number, item: any) {\r\n    return index;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-string',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template #ipt>\r\n      <input nz-input\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [value]=\"value\"\r\n        (input)=\"setValue($event.target?.value)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.type]=\"ui.type || 'text'\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        [attr.autocomplete]=\"ui.autocomplete\"\r\n        [attr.autoFocus]=\"ui.autofocus\">\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\r\n      <nz-input-group\r\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\r\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\r\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\r\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\r\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\r\n      </nz-input-group>\r\n    </ng-container>\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class StringWidget extends ControlWidget implements OnInit {\r\n  type: string;\r\n\r\n  ngOnInit(): void {\r\n    this.type = !!(\r\n      this.ui.addOnAfter ||\r\n      this.ui.addOnBefore ||\r\n      this.ui.addOnAfterIcon ||\r\n      this.ui.addOnBeforeIcon ||\r\n      this.ui.prefix ||\r\n      this.ui.prefixIcon ||\r\n      this.ui.suffix ||\r\n      this.ui.suffixIcon\r\n    )\r\n      ? 'addon'\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-number',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-input-number\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzFormatter]=\"formatter\"\r\n      [nzParser]=\"parser\"\r\n      [nzPrecision]=\"ui.precision\">\r\n    </nz-input-number>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class NumberWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  formatter = (value: any) => value;\r\n  parser = (value: any) => value;\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.schema.minimum !== 'undefined') {\r\n      this.min = this.schema.exclusiveMinimum\r\n        ? this.schema.minimum + 1\r\n        : this.schema.minimum;\r\n    }\r\n    if (typeof this.schema.maximum !== 'undefined') {\r\n      this.max = this.schema.exclusiveMaximum\r\n        ? this.schema.maximum - 1\r\n        : this.schema.maximum;\r\n    }\r\n    this.step = this.schema.multipleOf || 1;\r\n    if (this.schema.type === 'integer') {\r\n      this.min = Math.trunc(this.min);\r\n      this.max = Math.trunc(this.max);\r\n      this.step = Math.trunc(this.step);\r\n    }\r\n    if (this.ui.formatter) this.formatter = this.ui.formatter;\r\n    if (this.ui.parser) this.parser = this.ui.parser;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport * as format from 'date-fns/format';\r\n\r\nconst DATEFORMAT = {\r\n  'date-time': `YYYY-MM-DDTHH:mm:ssZ`,\r\n};\r\n\r\nconst DEFAULTFORMAT = 'YYYY-MM-DD HH:mm:ss';\r\n\r\n@Component({\r\n  selector: 'sf-date',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <input nz-input\r\n      [attr.id]=\"id\"\r\n      [disabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [value]=\"displayValue\"\r\n      (input)=\"_change($event.target?.value)\"\r\n      [attr.type]=\"type\"\r\n      [attr.placeholder]=\"ui.placeholder\"\r\n      autocomplete=\"off\">\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class DateWidget extends ControlWidget implements OnInit {\r\n  type: string;\r\n  displayValue: string;\r\n  format: string;\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.schema.format === 'date-time' ? 'datetime-local' : 'date';\r\n    this.format =\r\n      !this.ui.format && this.schema.format\r\n        ? DATEFORMAT[this.schema.format] || 'YYYY-MM-DD'\r\n        : this.ui.format;\r\n  }\r\n\r\n  reset(value: any) {\r\n    this.formatDisplay(value);\r\n  }\r\n\r\n  private formatData(value: string, formatString: string) {\r\n    return format(value, formatString, { locale: (window as any).__locale__ });\r\n  }\r\n\r\n  private formatDisplay(value: any) {\r\n    // TODO：HTML 原生日期组件无法按 `displayFormat` 格式，暂时停用以下代码\r\n    // this.displayValue = this.formatData(value, this.ui.displayFormat || DEFAULTFORMAT);\r\n  }\r\n\r\n  _change(value: string) {\r\n    this.formatDisplay(value);\r\n    this.setValue(this.formatData(value, this.format || DEFAULTFORMAT));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport * as format from 'date-fns/format';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: ui.allowEmpty || true,\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: ui.hideDisabledOptions || false,\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  reset(value: any) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(\n        Date.UTC(\n          1970,\n          0,\n          1,\n          value.getHours(),\n          value.getMinutes(),\n          value.getSeconds(),\n        ),\n      );\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-radio',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-radio-group\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzName]=\"id\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\">\r\n      <ng-container *ngIf=\"styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!styleType\">\r\n        <label *ngFor=\"let option of data\"\r\n          nz-radio-button\r\n          [nzValue]=\"option.value\"\r\n          [nzDisabled]=\"option.disabled\">\r\n          <span [innerHTML]=\"option.label\"></span>\r\n        </label>\r\n      </ng-container>\r\n    </nz-radio-group>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RadioWidget extends ControlWidget {\r\n  data: any[] = [];\r\n  styleType: boolean;\r\n\r\n  reset(value: any) {\r\n    this.styleType = (this.ui.styleType || 'default') === 'default';\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => (this.data = list),\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-checkbox',\n  template: `\n  <ng-template #all>\n    <label *ngIf=\"ui.checkAll\" nz-checkbox class=\"mr-sm\"\n      [(ngModel)]=\"allChecked\"\n      [nzIndeterminate]=\"indeterminate\"\n      (click)=\"onAllChecked($event)\">\n      {{ ui.checkAllText || '全选' }}\n    </label>\n  </ng-template>\n  <nz-form-item>\n    <nz-form-label *ngIf=\"data.length > 0\" [nzSpan]=\"label\" [nzRequired]=\"ui._required\">\n      {{ schema.title }}\n      <span class=\"optional\">\n        {{ ui.optional }}\n        <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n          <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n        </nz-tooltip>\n      </span>\n    </nz-form-label>\n    <nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"control\" [nzOffset]=\"offset\">\n      <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n\n          <ng-container *ngIf=\"data.length === 0\">\n            <label nz-checkbox\n              [nzDisabled]=\"disabled\"\n              [ngModel]=\"value\"\n              (ngModelChange)=\"_setValue($event)\">\n              <span [innerHTML]=\"schema.title\"></span>\n              <span class=\"optional\">\n                {{ ui.optional }}\n                <nz-tooltip *ngIf=\"ui.optionalHelp\" [nzTitle]=\"ui.optionalHelp\">\n                  <i nz-tooltip class=\"anticon anticon-question-circle-o\"></i>\n                </nz-tooltip>\n              </span>\n            </label>\n          </ng-container>\n          <ng-container *ngIf=\"data.length > 0\">\n            <ng-container *ngIf=\"grid_span === 0\">\n              <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n              <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\"></nz-checkbox-group>\n            </ng-container>\n            <ng-container *ngIf=\"grid_span !== 0\">\n              <nz-checkbox-wrapper class=\"checkbox-grid-list\" (nzOnChange)=\"groupInGridChange($event)\">\n                <nz-row>\n                  <nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n                    <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n                  </nz-col>\n                  <nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n                    <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{i.label}}</label>\n                  </nz-col>\n                </nz-row>\n              </nz-checkbox-wrapper>\n            </ng-container>\n          </ng-container>\n\n          <nz-form-extra *ngIf=\"schema.description\" [innerHTML]=\"schema.description\"></nz-form-extra>\n          <nz-form-explain *ngIf=\"!ui.onlyVisual && showError\">{{error}}</nz-form-explain>\n      </div>\n    </nz-col>\n  </nz-form-item>\n  `,\n  preserveWhitespaces: false,\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  label: number;\n  control: number;\n  offset: number;\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n\n        this.label = this.ui.spanLabel;\n        this.control = this.ui.spanControl;\n        if (list.length === 0) {\n          this.label = null;\n          this.offset = this.ui.spanLabel;\n        }\n        this.grid_span =\n          this.ui.grid && this.ui.grid.span > 0 ? this.ui.grid.span : 0;\n        this.updateAllChecked();\n      },\n    );\n  }\n\n  _setValue(value: any) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(\n      checkList.map(item => item.value),\n    );\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: any[]) {\n    this.data.forEach(\n      item => (item.checked = values.indexOf(item.value) !== -1),\n    );\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-boolean',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n    <nz-switch\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [nzCheckedChildren]=\"ui.checkedChildren\"\r\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\r\n    </nz-switch>\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class BooleanWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-textarea',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <textarea nz-input\r\n      [attr.id]=\"id\"\r\n      [disabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [value]=\"value\"\r\n      (input)=\"setValue($event.target?.value)\"\r\n      [attr.maxLength]=\"schema.maxLength || null\"\r\n      [attr.placeholder]=\"ui.placeholder\"\r\n      [nzAutosize]=\"ui.autosize\">\r\n    </textarea>\r\n\r\n  </sf-item-wrap>`,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class TextareaWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-select',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-select\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzAllowClear]=\"i.allowClear\"\r\n      [nzAutoFocus]=\"i.autoFocus\"\r\n      [nzDropdownClassName]=\"i.dropdownClassName\"\r\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\r\n      [nzServerSearch]=\"i.serverSearch\"\r\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\r\n      [nzMode]=\"i.mode\"\r\n      [nzNotFoundContent]=\"i.notFoundContent\"\r\n      [nzShowSearch]=\"i.showSearch\"\r\n      (nzOpenChange)=\"openChange($event)\"\r\n      (nzOnSearch)=\"searchChange($event)\"\r\n      (nzScrollToBottom)=\"scrollToBottom($event)\">\r\n      <ng-container *ngIf=\"!hasGroup\">\r\n        <nz-option\r\n          *ngFor=\"let o of data\"\r\n          [nzLabel]=\"o.label\"\r\n          [nzValue]=\"o.value\"\r\n          [nzDisabled]=\"o.disabled\">\r\n        </nz-option>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"hasGroup\">\r\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\r\n          <nz-option\r\n            *ngFor=\"let o of i.children\"\r\n            [nzLabel]=\"o.label\"\r\n            [nzValue]=\"o.value\"\r\n            [nzDisabled]=\"o.disabled\">\r\n          </nz-option>\r\n        </nz-option-group>\r\n      </ng-container>\r\n    </nz-select>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SelectWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  data: SFSchemaEnum[];\r\n  hasGroup = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      allowClear: this.ui.allowClear,\r\n      autoFocus: this.ui.autoFocus || false,\r\n      dropdownClassName: this.ui.dropdownClassName || null,\r\n      dropdownMatchSelectWidth: this.ui.dropdownMatchSelectWidth || true,\r\n      serverSearch: this.ui.serverSearch || false,\r\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\r\n      mode: this.ui.mode || 'default',\r\n      notFoundContent: this.ui.notFoundContent || '无法找到',\r\n      showSearch: this.ui.showSearch || true,\r\n    };\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  openChange(value: any) {\r\n    if (this.ui.openChange) this.ui.openChange(value);\r\n  }\r\n\r\n  searchChange(text: string) {\r\n    if (this.ui.onSearch) {\r\n      this.ui.onSearch(text).then((res: any[]) => {\r\n        this.data = res;\r\n        this.detectChanges();\r\n      });\r\n      return;\r\n    }\r\n    this.detectChanges();\r\n  }\r\n\r\n  scrollToBottom(value: any) {\r\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom(value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\n\n@Component({\n  selector: 'sf-tag',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: any) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: any) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { deepGet } from '@delon/util';\r\nimport { UploadFile, UploadChangeParam, NzModalService } from 'ng-zorro-antd';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'sf-upload',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-upload\r\n      [nzType]=\"i.type\"\r\n      [nzFileList]=\"fileList\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzAction]=\"i.action\"\r\n      [nzAccept]=\"i.accept\"\r\n      [nzLimit]=\"i.limit\"\r\n      [nzSize]=\"i.size\"\r\n      [nzFileType]=\"i.fileType\"\r\n      [nzHeaders]=\"ui.headers\"\r\n      [nzData]=\"ui.data\"\r\n      [nzListType]=\"i.listType\"\r\n      [nzMultiple]=\"i.multiple\"\r\n      [nzName]=\"i.argName\"\r\n      [nzShowUploadList]=\"i.showUploadList\"\r\n      [nzWithCredentials]=\"i.withCredentials\"\r\n      [nzRemove]=\"ui.remove\"\r\n      [nzPreview]=\"handlePreview\"\r\n      (nzChange)=\"change($event)\">\r\n      <ng-container [ngSwitch]=\"btnType\">\r\n        <ng-container *ngSwitchCase=\"'plus'\">\r\n          <i class=\"anticon anticon-plus\"></i>\r\n          <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'drag'\">\r\n          <p class=\"ant-upload-drag-icon\"><i class=\"anticon anticon-inbox\"></i></p>\r\n          <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\r\n          <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <button type=\"button\" nz-button>\r\n            <i class=\"anticon anticon-upload\"></i><span [innerHTML]=\"i.text\"></span>\r\n          </button>\r\n        </ng-container>\r\n      </ng-container>\r\n    </nz-upload>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class UploadWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fileList: UploadFile[] = [];\r\n  btnType = '';\r\n\r\n  constructor(cd: ChangeDetectorRef, private modalSrv: NzModalService) {\r\n    super(cd);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      type: this.ui.type || 'select',\r\n      text: this.ui.text || '点击上传',\r\n      action: this.ui.action || '',\r\n      accept: this.ui.accept || '',\r\n      limit: this.ui.limit == null ? 0 : +this.ui.limit,\r\n      size: this.ui.size == null ? 0 : +this.ui.size,\r\n      fileType: this.ui.fileType || '',\r\n      listType: this.ui.listType || 'text',\r\n      multiple: this.ui.multiple || false,\r\n      name: this.ui.name || 'file',\r\n      showUploadList: this.ui.showUploadList || true,\r\n      withCredentials: this.ui.withCredentials || false,\r\n      resReName: (this.ui.resReName || '').split('.'),\r\n    };\r\n    if (this.i.listType === 'picture-card') this.btnType = 'plus';\r\n    if (this.i.type === 'drag') {\r\n      this.i.listType = null;\r\n      this.btnType = 'drag';\r\n      this.i.text = this.ui.text || `单击或拖动文件到该区域上传`;\r\n      this.i.hint =\r\n        this.ui.hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\r\n    }\r\n  }\r\n\r\n  change(args: UploadChangeParam) {\r\n    if (this.ui.change) this.ui.change(args);\r\n    if (args.type !== 'success') return;\r\n    this.notify(args.fileList);\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.fileList = list as UploadFile[];\r\n        this.notify(this.fileList);\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  private notify(fileList: UploadFile[]) {\r\n    const res = fileList.map(item =>\r\n      deepGet(item.response, this.i.resReName, item.response),\r\n    );\r\n    this.formProperty.setValue(\r\n      this.i.multiple === true ? res : res.pop(),\r\n      false,\r\n    );\r\n  }\r\n\r\n  handlePreview = (file: UploadFile) => {\r\n    this.modalSrv\r\n      .create({\r\n        nzContent: `<img src=\"${file.url ||\r\n          file.thumbUrl}\" class=\"img-fluid\" />`,\r\n        nzFooter: null,\r\n      })\r\n      .afterClose.subscribe(() => this.detectChanges());\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { ControlWidget } from '../../widget';\nimport { getData } from '../../utils';\nimport { SFSchemaEnum } from '../../schema';\n\n@Component({\n  selector: 'sf-transfer',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: any[] = [];\n  i: any;\n  private _data: any[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || '项',\n      itemsUnit: this.ui.itemsUnit || '项',\n    };\n  }\n\n  reset(value: any) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) formData = [formData];\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: any): Observable<any[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: any) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter(w => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: any) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n  }\n\n  _selectChange(options: any) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-slider',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-slider\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzDisabled]=\"disabled\"\r\n      [nzRange]=\"ui.range\"\r\n      [nzMin]=\"min\"\r\n      [nzMax]=\"max\"\r\n      [nzStep]=\"step\"\r\n      [nzMarks]=\"marks\"\r\n      [nzDots]=\"ui.dots\"\r\n      [nzIncluded]=\"included\"\r\n      [nzVertical]=\"ui.vertical\"\r\n      [nzTipFormatter]=\"_formatter\"\r\n      (nzOnAfterChange)=\"_afterChange($event)\">\r\n    </nz-slider>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SliderWidget extends ControlWidget implements OnInit {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  marks: any;\r\n  included: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.min = this.schema.minimum || 0;\r\n    this.max = this.schema.maximum || 100;\r\n    this.step = this.schema.multipleOf || 1;\r\n\r\n    this.marks = this.ui.marks || null;\r\n    const included = this.ui.included;\r\n    this.included = typeof included === 'undefined' ? true : included;\r\n  }\r\n\r\n  _formatter = (value: any) => {\r\n    if (this.ui.formatter) return this.ui.formatter(value);\r\n    return value;\r\n  }\r\n\r\n  _afterChange(value: any) {\r\n    if (this.ui.afterChange) this.ui.afterChange(value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-custom',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"$any(ui)._render\"\r\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CustomWidget extends ControlWidget {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-rate',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-rate\r\n      [nzDisabled]=\"disabled\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"setValue($event)\"\r\n      [nzAllowClear]=\"allowClear\"\r\n      [nzAllowHalf]=\"allowHalf\"\r\n      [nzAutoFocus]=\"autoFocus\"\r\n      [nzCount]=\"count\"></nz-rate>\r\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class RateWidget extends ControlWidget implements OnInit {\r\n  count: number;\r\n  allowHalf: boolean;\r\n  allowClear: boolean;\r\n  autoFocus: boolean;\r\n  hasText = false;\r\n  ngOnInit(): void {\r\n    this.count = this.schema.maximum || 5;\r\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\r\n    this.allowClear = this.ui.allowClear || true;\r\n    this.autoFocus = this.ui.autoFocus || false;\r\n    this.hasText = !!this.ui.text;\r\n  }\r\n\r\n  genText() {\r\n    return this.hasText\r\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\r\n      : '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { startWith, map, flatMap, debounceTime } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { ControlWidget } from '../../widget';\r\nimport { SFSchemaEnum } from '../../schema';\r\nimport { getCopyEnum, getEnum } from '../../utils';\r\n\r\nconst EMAILSUFFIX = ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'];\r\n\r\n@Component({\r\n  selector: 'sf-autocomplete',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n      <input nz-input [nzAutocomplete]=\"auto\"\r\n        [attr.id]=\"id\"\r\n        [disabled]=\"disabled\"\r\n        [nzSize]=\"ui.size\"\r\n        [value]=\"value\"\r\n        (input)=\"setValue($event.target?.value)\"\r\n        [attr.maxLength]=\"schema.maxLength || null\"\r\n        [attr.placeholder]=\"ui.placeholder\"\r\n        autocomplete=\"off\">\r\n      <nz-autocomplete #auto\r\n        [nzBackfill]=\"i.backfill\"\r\n        [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\r\n        [nzWidth]=\"i.width\"\r\n        (selectionChange)=\"setValue($event?.nzValue)\">\r\n        <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i.label\">{{i.label}}</nz-auto-option>\r\n      </nz-autocomplete>\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class AutoCompleteWidget extends ControlWidget implements OnInit {\r\n  i: any;\r\n  fixData: SFSchemaEnum[] = [];\r\n  list: Observable<SFSchemaEnum[]>;\r\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\r\n  private isAsync = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      backfill: this.ui.backfill || false,\r\n      defaultActiveFirstOption: this.ui.defaultActiveFirstOption || true,\r\n      width: this.ui.width || undefined,\r\n    };\r\n\r\n    this.filterOption = this.ui.filterOption || true;\r\n    if (typeof this.filterOption === 'boolean') {\r\n      this.filterOption =\r\n        this.filterOption === true\r\n          ? (input: string, option: SFSchemaEnum) =>\r\n              option.label.toLowerCase().indexOf(input.toLowerCase()) > -1\r\n          : () => true;\r\n    }\r\n\r\n    this.isAsync = !!this.ui.asyncData;\r\n    const orgTime = +(this.ui.debounceTime || 0);\r\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\r\n    this.list = this.formProperty.valueChanges.pipe(\r\n      debounceTime(time),\r\n      startWith(''),\r\n      flatMap(\r\n        input =>\r\n          this.isAsync ? this.ui.asyncData(input) : this.filterData(input),\r\n      ),\r\n      map(res => getEnum(res, null)),\r\n    );\r\n  }\r\n\r\n  reset(value: any) {\r\n    if (!this.isAsync) {\r\n      switch (this.ui.type) {\r\n        case 'email':\r\n          this.fixData = getCopyEnum(EMAILSUFFIX, null);\r\n          break;\r\n        default:\r\n          this.fixData = getCopyEnum(\r\n            this.schema.enum,\r\n            this.formProperty.formData,\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private filterData(input: string) {\r\n    switch (this.ui.type) {\r\n      case 'email':\r\n        return this.addEmailSuffix(input);\r\n      default:\r\n        return of(\r\n          this.fixData.filter(option => this.filterOption(input, option)),\r\n        );\r\n    }\r\n  }\r\n\r\n  private addEmailSuffix(value: string) {\r\n    return of(\r\n      !value || ~value.indexOf('@')\r\n        ? []\r\n        : this.fixData.map(domain => `${value}@${domain.label}`),\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData } from '../../utils';\r\nimport { SFSchemaEnum } from '../../schema';\r\n\r\n@Component({\r\n  selector: 'sf-cascader',\r\n  template: `\r\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n    <nz-cascader\r\n      [nzDisabled]=\"disabled\"\r\n      [nzSize]=\"ui.size\"\r\n      [ngModel]=\"value\"\r\n      (ngModelChange)=\"_change($event)\"\r\n      [nzOptions]=\"data\"\r\n      [nzAllowClear]=\"ui.allowClear\"\r\n      [nzAutoFocus]=\"ui.autoFocus\"\r\n      [nzChangeOn]=\"ui.changeOn\"\r\n      [nzChangeOnSelect]=\"ui.changeOnSelect\"\r\n      [nzColumnClassName]=\"ui.columnClassName\"\r\n      [nzExpandTrigger]=\"ui.expandTrigger\"\r\n      [nzMenuClassName]=\"ui.menuClassName\"\r\n      [nzMenuStyle]=\"ui.menuStyle\"\r\n      [nzLabelProperty]=\"ui.labelProperty\"\r\n      [nzValueProperty]=\"ui.valueProperty\"\r\n      [nzLoadData]=\"loadData\"\r\n      [nzPlaceHolder]=\"ui.placeholder\"\r\n      [nzShowArrow]=\"showArrow\"\r\n      [nzShowInput]=\"showInput\"\r\n      (nzClear)=\"_clear($event)\"\r\n      (nzVisibleChange)=\"_visibleChange($event)\"\r\n      (nzSelect)=\"_select($event)\"\r\n      (nzSelectionChange)=\"_selectionChange($event)\">\r\n    </nz-cascader>\r\n\r\n  </sf-item-wrap>\r\n  `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CascaderWidget extends ControlWidget implements OnInit {\r\n  clearText: string;\r\n  showArrow: boolean;\r\n  showInput: boolean;\r\n  triggerAction: string[];\r\n  data: SFSchemaEnum[] = [];\r\n  loadData: any;\r\n\r\n  ngOnInit(): void {\r\n    this.clearText = this.ui.clearText || '清除';\r\n    this.showArrow = this.ui.showArrow || true;\r\n    this.showInput = this.ui.showInput || true;\r\n    this.triggerAction = this.ui.triggerAction || ['click'];\r\n    if (!!this.ui.loadData) {\r\n      this.loadData = (node: any, index: number) =>\r\n        this.ui.loadData(node, index, this);\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\r\n      list => {\r\n        this.data = list;\r\n        this.detectChanges();\r\n      },\r\n    );\r\n  }\r\n\r\n  _visibleChange(status: boolean) {\r\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\r\n  }\r\n\r\n  _change(value: string) {\r\n    this.setValue(value);\r\n    if (this.ui.change) this.ui.change(value);\r\n  }\r\n\r\n  _selectionChange(options: any) {\r\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\r\n  }\r\n\r\n  _select(options: any) {\r\n    if (this.ui.select) this.ui.select(options);\r\n  }\r\n\r\n  _clear(options: any) {\r\n    if (this.ui.clear) this.ui.clear(options);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { ControlWidget } from '../../widget';\r\nimport { getData, getEnum } from '../../utils';\r\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\r\nimport { FormProperty, PropertyGroup } from '../../model/form.property';\r\nimport { NzMentionComponent } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  selector: 'sf-mention',\r\n  template: `\r\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\r\n\r\n      <nz-mention #mentions\r\n        [nzSuggestions]=\"data\"\r\n        [nzValueWith]=\"i.valueWith\"\r\n        [nzLoading]=\"loading\"\r\n        [nzNotFoundContent]=\"i.notFoundContent\"\r\n        [nzPlacement]=\"i.placement\"\r\n        [nzPrefix]=\"i.prefix\"\r\n        (nzOnSelect)=\"_select($event)\"\r\n        (nzOnSearchChange)=\"_search($event)\">\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\r\n          <input nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            autocomplete=\"off\">\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\r\n          <textarea nzMentionTrigger nz-input\r\n            [attr.id]=\"id\"\r\n            [disabled]=\"disabled\"\r\n            [nzSize]=\"ui.size\"\r\n            [ngModel]=\"value\"\r\n            (ngModelChange)=\"setValue($event)\"\r\n            [attr.maxLength]=\"schema.maxLength || null\"\r\n            [attr.placeholder]=\"ui.placeholder\"\r\n            [nzAutosize]=\"ui.autosize\">\r\n          </textarea>\r\n        </ng-container>\r\n\r\n      </nz-mention>\r\n\r\n    </sf-item-wrap>\r\n    `,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class MentionWidget extends ControlWidget implements OnInit {\r\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\r\n  data: SFSchemaEnum[] = [];\r\n  i: any;\r\n  loading = false;\r\n\r\n  ngOnInit(): void {\r\n    this.i = {\r\n      valueWith: this.ui.valueWith || (item => item.label),\r\n      notFoundContent:\r\n        this.ui.notFoundContent || '无匹配结果，轻敲空格完成输入',\r\n      placement: this.ui.placement || 'bottom',\r\n      prefix: this.ui.prefix || '@',\r\n    };\r\n    const min =\r\n        typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1,\r\n      max =\r\n        typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\r\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\r\n      this.ui.validator = (\r\n        value: any,\r\n        formProperty: FormProperty,\r\n        form: PropertyGroup,\r\n      ) => {\r\n        const count = this.mentionChild.getMentions().length;\r\n        if (min !== -1 && count < min) {\r\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\r\n        }\r\n        if (max !== -1 && count > max) {\r\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\r\n        }\r\n        return null;\r\n      };\r\n    }\r\n  }\r\n\r\n  reset(value: any) {\r\n    getData(this.schema, this.ui, null).subscribe(list => {\r\n      this.data = list;\r\n      this.detectChanges();\r\n    });\r\n  }\r\n\r\n  _select(options: any) {\r\n    if (this.ui.select) this.ui.select(options);\r\n  }\r\n\r\n  _search(option: any) {\r\n    if (typeof this.ui.loadData !== 'function') return;\r\n\r\n    this.loading = true;\r\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\r\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null)))\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n}\r\n","import { WidgetRegistry } from '../widget.factory';\r\n\r\nimport { ObjectWidget } from './object/object.widget';\r\nimport { ArrayWidget } from './array/array.widget';\r\nimport { StringWidget } from './string/string.widget';\r\nimport { NumberWidget } from './number/number.widget';\r\nimport { DateWidget } from './date/date.widget';\r\nimport { TimeWidget } from './time/time.widget';\r\nimport { RadioWidget } from './radio/radio.widget';\r\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\r\nimport { BooleanWidget } from './boolean/boolean.widget';\r\nimport { TextareaWidget } from './textarea/textarea.widget';\r\nimport { SelectWidget } from './select/select.widget';\r\nimport { TagWidget } from './tag/tag.widget';\r\nimport { UploadWidget } from './upload/upload.widget';\r\nimport { TransferWidget } from './transfer/transfer.widget';\r\nimport { SliderWidget } from './slider/slider.widget';\r\nimport { CustomWidget } from './custom/custom.widget';\r\nimport { RateWidget } from './rate/rate.widget';\r\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\r\nimport { CascaderWidget } from './cascader/cascader.widget';\r\nimport { MentionWidget } from './mention/mention.widget';\r\n\r\nexport class NzWidgetRegistry extends WidgetRegistry {\r\n  constructor() {\r\n    super();\r\n\r\n    this.register('object', ObjectWidget);\r\n    this.register('array', ArrayWidget);\r\n\r\n    this.register('string', StringWidget);\r\n    this.register('number', NumberWidget);\r\n    this.register('integer', NumberWidget);\r\n    this.register('date', DateWidget);\r\n    this.register('time', TimeWidget);\r\n    this.register('radio', RadioWidget);\r\n    this.register('checkbox', CheckboxWidget);\r\n    this.register('boolean', BooleanWidget);\r\n    this.register('textarea', TextareaWidget);\r\n    this.register('select', SelectWidget);\r\n    this.register('tag', TagWidget);\r\n    this.register('upload', UploadWidget);\r\n    this.register('transfer', TransferWidget);\r\n    this.register('slider', SliderWidget);\r\n    this.register('rate', RateWidget);\r\n    this.register('autocomplete', AutoCompleteWidget);\r\n    this.register('cascader', CascaderWidget);\r\n    this.register('mention', MentionWidget);\r\n    this.register('custom', CustomWidget);\r\n\r\n    this.setDefault(StringWidget);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { DelonUtilModule } from '@delon/util';\r\n\r\nimport { DelonFormConfig } from './config';\r\nimport {\r\n  SchemaValidatorFactory,\r\n  AjvSchemaValidatorFactory,\r\n} from './validator.factory';\r\nimport { SFComponent } from './sf.component';\r\nimport { SFItemComponent } from './sf-item.component';\r\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\r\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\r\nimport { SFFixedDirective } from './sf-fixed.directive';\r\n\r\nconst COMPONENTS = [\r\n  SFComponent,\r\n  SFItemComponent,\r\n  SFItemWrapComponent,\r\n  SFTemplateDirective,\r\n  SFFixedDirective,\r\n];\r\n\r\n// region: widgets\r\n\r\nimport { WidgetRegistry } from './widget.factory';\r\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\r\nimport { ObjectWidget } from './widgets/object/object.widget';\r\nimport { ArrayWidget } from './widgets/array/array.widget';\r\nimport { StringWidget } from './widgets/string/string.widget';\r\nimport { NumberWidget } from './widgets/number/number.widget';\r\nimport { DateWidget } from './widgets/date/date.widget';\r\nimport { TimeWidget } from './widgets/time/time.widget';\r\nimport { RadioWidget } from './widgets/radio/radio.widget';\r\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\r\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\r\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\r\nimport { SelectWidget } from './widgets/select/select.widget';\r\nimport { TagWidget } from './widgets/tag/tag.widget';\r\nimport { UploadWidget } from './widgets/upload/upload.widget';\r\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\r\nimport { SliderWidget } from './widgets/slider/slider.widget';\r\nimport { CustomWidget } from './widgets/custom/custom.widget';\r\nimport { RateWidget } from './widgets/rate/rate.widget';\r\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\r\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\r\nimport { MentionWidget } from './widgets/mention/mention.widget';\r\n\r\nconst WIDGETS = [\r\n  ObjectWidget,\r\n  ArrayWidget,\r\n  StringWidget,\r\n  NumberWidget,\r\n  DateWidget,\r\n  TimeWidget,\r\n  RadioWidget,\r\n  CheckboxWidget,\r\n  BooleanWidget,\r\n  TextareaWidget,\r\n  SelectWidget,\r\n  TagWidget,\r\n  UploadWidget,\r\n  TransferWidget,\r\n  SliderWidget,\r\n  RateWidget,\r\n  AutoCompleteWidget,\r\n  CascaderWidget,\r\n  MentionWidget,\r\n  CustomWidget,\r\n];\r\n\r\n// endregion\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, DelonUtilModule, NgZorroAntdModule],\r\n  declarations: [...COMPONENTS, ...WIDGETS],\r\n  entryComponents: [...WIDGETS],\r\n  exports: [...COMPONENTS],\r\n})\r\nexport class DelonFormModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DelonFormModule,\r\n      providers: [\r\n        DelonFormConfig,\r\n        {\r\n          provide: SchemaValidatorFactory,\r\n          useClass: AjvSchemaValidatorFactory,\r\n        },\r\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","submit","submit_type","reset","reset_type","FORMATMAPS","date-time","widget","date","full-date","time","full-time","week","month","uri","email","o","_i","args","console","warn","schema","definitions","$refSchema","match","exec","current","parts_1","split","part","replace","Error","findSchemaDefinition","localSchema","e","indexOf","getOwnPropertySymbols","retrieveSchema","ui","properties","allKeys","keys","ifKeys","detectKey","then","concat","hasElse","else","visibleIf","visibleElse","forEach","key","cond","value","includes","detectKeys","list","formData","isBlank","isArray","map","item","label","checked","getEnum","deepCopy","asyncArgs","asyncData","pipe","takeWhile","of","getCopyEnum","TerminatorService","onDestroy","Subject","next","FormProperty","schemaValidatorFactory","parent","path","options","BehaviorSubject","schemaValidator","createValidatorFn","ingoreKeywords","default","_parent","_root","root","PropertyGroup","_path","_valueChanges","_errorsChanges","_value","_errors","_visible","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","updateValueAndValidity","prop","base","result","findRoot","getProperty","substr","property","errors","_isRequired","keyword","customValidator","validator","customErrors","Observable","subscribe","res","_this","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","push","emitFormat","v","params","setParentAndPlatErrors","_objErrors","platErrors","searchProperty","visible","_visibilityChanges","setVisible","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","v1","v2","values","distinctUntilChanged","tslib_1.__extends","subPathIdx","propertyId","subPath","fn","forEachChild","child","forEachChildRecursive","_super","_bindVisibility","_bindVisibilityRecursive","AtomicProperty","fallbackValue","NumberProperty","parseFloat","parseInt","StringProperty","BooleanProperty","ArrayProperty","formPropertyFactory","pos","isNaN","clearErrors","resetProperties","_","_hasValue","newProperty","createProperty","items","value_1","addProperty","resetValue","index","splice","ObjectProperty","createProperties","_propertiesId","orderedProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","orderProperties","error","title","setValue","FormPropertyFactory","tick","refSchema","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","TypeError","initializeRoot","rootProperty","SchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","AjvSchemaValidatorFactory","extraOptions","validate","w","Optional","Inject","WidgetRegistry","defaultWidget","widgets","has","registry","resolver","WidgetFactory","container","componentClass","getType","componentFactory","resolveComponentFactory","createComponent","Injectable","ComponentFactoryResolver","terminator","cd","EventEmitter","liveValidate","firstVisual","autocomplete","SFComponent","_liveValidate","coerceBooleanProperty","_firstVisual","_mode","layout","_btn","_valid","_item","preventDefault","stopPropagation","valid","formSubmit","emit","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","inIfFn","resolveIf","$items","onlyVisual","size","_ui","di","render","button","firstKey","find","startsWith","btnUi","grid","offset","span","class","mode","_inited","changes","refreshSchema","templateRef","_render","formError","newSchema","newUI","_formData","destroy","coverProperty","coverButtonProperty","formChange","errorsChanges","Promise","resolve","formReset","Component","selector","template","providers","provide","useFactory","deps","host","[class.sf]","[class.sf-search]","[class.sf-edit]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Input","Output","nextUniqueId","widgetFactory","SFItemComponent","id","formProperty","ngOnDestroy","ref","createWidget","onWidgetInstanciated","instance","ViewChild","read","ViewContainerRef","er","el","SFFixedDirective","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","init","Directive","ElementRef","Renderer2","table","SFTemplateDirective","_addTpl","TemplateRef","sfComp","Widget","readOnly","debug","showError","markForCheck","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ObjectWidget","_a","propertiesId","preserveWhitespaces","ArrayWidget","arraySpan","addTitle","addType","removeTitle","removable","add","remove","StringWidget","NumberWidget","min","exclusiveMinimum","max","exclusiveMaximum","step","Math","trunc","formatter","parser","DATEFORMAT","DateWidget","formatDisplay","formatString","locale","__locale__","formatData","TimeWidget","displayFormat","allowEmpty","clearText","defaultOpenValue","Date","hideDisabledOptions","hourStep","minuteStep","secondStep","displayValue","toString","UTC","getHours","getMinutes","getSeconds","RadioWidget","styleType","getData","data","CheckboxWidget","control","grid_span","updateAllChecked","notifyChange","checkList","notifySet","allChecked","every","indeterminate","SelectWidget","allowClear","autoFocus","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","notFoundContent","showSearch","hasGroup","group","text","TagWidget","updateValue","modalSrv","file","nzContent","url","thumbUrl","nzFooter","afterClose","UploadWidget","action","accept","limit","fileType","listType","multiple","name","showUploadList","withCredentials","resReName","btnType","hint","notify","fileList","deepGet","response","pop","NzModalService","arg","TransferWidget","titles","operations","itemUnit","itemsUnit","_data","to","SliderWidget","marks","included","RateWidget","count","allowHalf","hasText","EMAILSUFFIX","AutoCompleteWidget","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","isAsync","orgTime","debounceTime","startWith","flatMap","filterData","fixData","addEmailSuffix","domain","CascaderWidget","showArrow","showInput","triggerAction","loadData","node","status","MentionWidget","valueWith","placement","prefix","form","mentionChild","getMentions","loading","tap","NzWidgetRegistry","register","BooleanWidget","TextareaWidget","CustomWidget","setDefault","COMPONENTS","SFItemWrapComponent","WIDGETS","DelonFormModule","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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"}