/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { NzModalService } from 'ng-zorro-antd';
/**
 * 对话框辅助类
 */
var ModalHelper = /** @class */ (function () {
    function ModalHelper(srv) {
        this.srv = srv;
        this.zIndex = 500;
    }
    /**
     * 打开对话框
     * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());
     *
     * 对于组件的成功&关闭的处理说明：
     * 成功：
     *  this.NzModalRef.close(data);
     *  this.NzModalRef.close();
     *
     * 关闭：
     * this.NzModalRef.destroy();
     *
     * @param comp 组件
     * @param params 组件参数
     * @param size 大小；例如：lg、600，默认：lg
     * @param options 对话框 `ModalOptionsForService` 参数
     */
    /**
     * 打开对话框
     * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());
     *
     * 对于组件的成功&关闭的处理说明：
     * 成功：
     *  this.NzModalRef.close(data);
     *  this.NzModalRef.close();
     *
     * 关闭：
     * this.NzModalRef.destroy();
     *
     * @param {?} comp 组件
     * @param {?=} params 组件参数
     * @param {?=} size 大小；例如：lg、600，默认：lg
     * @param {?=} options 对话框 `ModalOptionsForService` 参数
     * @return {?}
     */
    ModalHelper.prototype.open = /**
     * 打开对话框
     * this.modalHelper.open(FormEditComponent, { i }).subscribe(res => this.load());
     *
     * 对于组件的成功&关闭的处理说明：
     * 成功：
     *  this.NzModalRef.close(data);
     *  this.NzModalRef.close();
     *
     * 关闭：
     * this.NzModalRef.destroy();
     *
     * @param {?} comp 组件
     * @param {?=} params 组件参数
     * @param {?=} size 大小；例如：lg、600，默认：lg
     * @param {?=} options 对话框 `ModalOptionsForService` 参数
     * @return {?}
     */
    function (comp, params, size, options) {
        var _this = this;
        if (size === void 0) { size = 'lg'; }
        return Observable.create(function (observer) {
            var /** @type {?} */ cls = '', /** @type {?} */
            width = '';
            if (size) {
                if (typeof size === 'number') {
                    width = size + "px";
                }
                else {
                    cls = "modal-" + size;
                }
            }
            var /** @type {?} */ defaultOptions = {
                nzWrapClassName: cls,
                nzContent: comp,
                nzWidth: width ? width : undefined,
                nzFooter: null,
                nzComponentParams: params,
                nzZIndex: ++_this.zIndex,
            };
            var /** @type {?} */ subject = _this.srv.create(Object.assign(defaultOptions, options));
            var /** @type {?} */ afterClose$ = subject.afterClose.subscribe(function (res) {
                observer.next(res);
                observer.complete();
                afterClose$.unsubscribe();
            });
        });
    };
    /**
     * 静态框，点击蒙层不允许关闭
     */
    /**
     * 静态框，点击蒙层不允许关闭
     * @param {?} comp
     * @param {?=} params
     * @param {?=} size
     * @param {?=} options
     * @return {?}
     */
    ModalHelper.prototype.static = /**
     * 静态框，点击蒙层不允许关闭
     * @param {?} comp
     * @param {?=} params
     * @param {?=} size
     * @param {?=} options
     * @return {?}
     */
    function (comp, params, size, options) {
        if (size === void 0) { size = 'lg'; }
        return this.open(comp, params, size, Object.assign({
            maskClosable: false,
        }, options));
    };
    ModalHelper.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ModalHelper.ctorParameters = function () { return [
        { type: NzModalService, },
    ]; };
    return ModalHelper;
}());
export { ModalHelper };
function ModalHelper_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ModalHelper.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ModalHelper.ctorParameters;
    /** @type {?} */
    ModalHelper.prototype.zIndex;
    /** @type {?} */
    ModalHelper.prototype.srv;
}
//# sourceMappingURL=modal.helper.js.map