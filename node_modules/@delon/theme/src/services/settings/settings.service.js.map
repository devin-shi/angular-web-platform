{"version":3,"file":"settings.service.js","sourceRoot":"","sources":["../../../../../../packages/theme/services/settings/settings.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,qBAAM,GAAG,GAAG,QAAQ,CAAC;;;mBAIR;YACT,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SAC/B;oBAEY,EAAE;uBAEW,IAAI;;;;;;IAEtB,6BAAG;;;;cAAC,GAAW;QACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;;;;;;;IAGzD,6BAAG;;;;;cAAC,GAAW,EAAE,KAAU;QACjC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;;IAGnD,sBAAI,mCAAM;;;;QAAV;YACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,mBAClB;oBACN,KAAK,EAAE,IAAI;oBACX,SAAS,EAAE,KAAK;oBAChB,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,IAAI;iBACX,GACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CACd,CAAC;gBACF,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;YACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACrB;;;OAAA;;;;;;IAED,mCAAS;;;;;IAAT,UAAU,IAAY,EAAE,KAAU;QAChC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;SACb;QACD,MAAM,CAAC,KAAK,CAAC;KACd;;;;;IAED,gCAAM;;;;IAAN,UAAO,GAAQ;QACb,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACzC;;;;;IAED,iCAAO;;;;IAAP,UAAQ,GAAS;QACf,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC3C;;gBAlDF,UAAU;;0BALX;;SAMa,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { App, Layout, User } from './interface';\r\n\r\nconst KEY = 'layout';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n  app: App = {\r\n    year: new Date().getFullYear(),\r\n  };\r\n\r\n  user: User = {};\r\n\r\n  private _layout: Layout = null;\r\n\r\n  private get(key: string) {\r\n    return JSON.parse(localStorage.getItem(key) || 'null') || null;\r\n  }\r\n\r\n  private set(key: string, value: any) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  get layout(): Layout {\r\n    if (!this._layout) {\r\n      this._layout = Object.assign(\r\n        <Layout>{\r\n          fixed: true,\r\n          collapsed: false,\r\n          boxed: false,\r\n          theme: 'A',\r\n          lang: null,\r\n        },\r\n        this.get(KEY),\r\n      );\r\n      this.set(KEY, this._layout);\r\n    }\r\n    return this._layout;\r\n  }\r\n\r\n  setLayout(name: string, value: any): boolean {\r\n    if (typeof this.layout[name] !== 'undefined') {\r\n      this.layout[name] = value;\r\n      this.set(KEY, this._layout);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setApp(val: App) {\r\n    this.app = Object.assign(this.app, val);\r\n  }\r\n\r\n  setUser(val: User) {\r\n    this.user = Object.assign(this.user, val);\r\n  }\r\n}\r\n"]}