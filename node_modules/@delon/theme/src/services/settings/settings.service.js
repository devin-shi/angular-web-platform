/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
var /** @type {?} */ KEY = 'layout';
var SettingsService = /** @class */ (function () {
    function SettingsService() {
        this.app = {
            year: new Date().getFullYear(),
        };
        this.user = {};
        this._layout = null;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    SettingsService.prototype.get = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return JSON.parse(localStorage.getItem(key) || 'null') || null;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    SettingsService.prototype.set = /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        localStorage.setItem(key, JSON.stringify(value));
    };
    Object.defineProperty(SettingsService.prototype, "layout", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this._layout) {
                this._layout = Object.assign(/** @type {?} */ ({
                    fixed: true,
                    collapsed: false,
                    boxed: false,
                    theme: 'A',
                    lang: null,
                }), this.get(KEY));
                this.set(KEY, this._layout);
            }
            return this._layout;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} name
     * @param {?} value
     * @return {?}
     */
    SettingsService.prototype.setLayout = /**
     * @param {?} name
     * @param {?} value
     * @return {?}
     */
    function (name, value) {
        if (typeof this.layout[name] !== 'undefined') {
            this.layout[name] = value;
            this.set(KEY, this._layout);
            return true;
        }
        return false;
    };
    /**
     * @param {?} val
     * @return {?}
     */
    SettingsService.prototype.setApp = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.app = Object.assign(this.app, val);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    SettingsService.prototype.setUser = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.user = Object.assign(this.user, val);
    };
    SettingsService.decorators = [
        { type: Injectable },
    ];
    return SettingsService;
}());
export { SettingsService };
function SettingsService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    SettingsService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    SettingsService.ctorParameters;
    /** @type {?} */
    SettingsService.prototype.app;
    /** @type {?} */
    SettingsService.prototype.user;
    /** @type {?} */
    SettingsService.prototype._layout;
}
//# sourceMappingURL=settings.service.js.map