{"version":3,"file":"loader.service.js","sourceRoot":"","sources":["../../.tmp/core/loader.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { AqmConfig } from './aqm.config';\r\n\r\ndeclare const document: any;\r\n\r\n@Injectable()\r\nexport class LoaderService {\r\n    private _scriptLoadingPromise: Promise<void>;\r\n    private _cog: any;\r\n    constructor(cog: AqmConfig) {\r\n        this._cog = Object.assign(<AqmConfig>{\r\n            apiProtocol: 'auto',\r\n            apiVersion: '2.exp',\r\n            apiCallback: 'angularQQMapsLoader',\r\n            apiHostAndPath: 'map.qq.com/api/js'\r\n        }, cog);\r\n    }\r\n\r\n    load(): Promise<void> {\r\n        if (this._scriptLoadingPromise) {\r\n            return this._scriptLoadingPromise;\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.async = true;\r\n        script.defer = true;\r\n        script.src = this._getSrc();\r\n\r\n        this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\r\n\r\n            (<any>window)[this._cog.apiCallback] = () => { resolve(); };\r\n\r\n            script.onerror = (error: Event) => { reject(error); };\r\n        });\r\n\r\n        document.body.appendChild(script);\r\n        return this._scriptLoadingPromise;\r\n    }\r\n\r\n    private _getSrc(): string {\r\n        let protocol: string;\r\n        switch (this._cog.apiProtocol) {\r\n            case 'http':\r\n                protocol = 'http:';\r\n                break;\r\n            case 'https':\r\n                protocol = 'https:';\r\n                break;\r\n            default:\r\n                protocol = '';\r\n                break;\r\n        }\r\n        const queryParams: { [key: string]: string | string[] } = {\r\n            v: this._cog.apiVersion,\r\n            key: this._cog.apiKey,\r\n            libraries: this._cog.apiLibraries,\r\n            callback: this._cog.apiCallback\r\n        };\r\n        const params: string =\r\n            Object.keys(queryParams)\r\n                .filter((k: string) => queryParams[k] != null)\r\n                .filter((k: string) => {\r\n                    return !Array.isArray(queryParams[k]) || (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\r\n                })\r\n                .map((k: string) => {\r\n                    let i = queryParams[k];\r\n                    if (Array.isArray(i)) return { key: k, value: i.join(',') };\r\n                    return { key: k, value: i };\r\n                })\r\n                .map((entry: { key: string, value: string }) => { return `${entry.key}=${entry.value}`; })\r\n                .join('&');\r\n        return `${protocol}//${this._cog.apiHostAndPath}?${params}`;\r\n    }\r\n}\r\n"]}