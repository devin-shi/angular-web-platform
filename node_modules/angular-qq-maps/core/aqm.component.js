import { Component, Input, ElementRef, EventEmitter, Output, NgZone, ViewEncapsulation } from '@angular/core';
import { LoaderService } from './loader.service';
import { AqmConfig } from './aqm.config';
var AqmComponent = (function () {
    function AqmComponent(el, COG, loader, zone) {
        this.el = el;
        this.COG = COG;
        this.loader = loader;
        this.zone = zone;
        this.options = {};
        this.ready = new EventEmitter();
        this.map = null;
    }
    AqmComponent.prototype.ngOnInit = function () {
        this._initMap();
    };
    AqmComponent.prototype.ngOnChanges = function (changes) {
        if ('options' in changes)
            this._updateOptions();
    };
    AqmComponent.prototype._initMap = function () {
        var _this = this;
        if (this.map)
            return;
        this.loader.load().then(function () {
            _this.zone.runOutsideAngular(function () {
                try {
                    _this.map = new qq.maps.Map(_this.el.nativeElement, _this.options);
                }
                catch (ex) {
                    console.warn('地图初始化失败', ex);
                }
            });
            _this.ready.emit(_this.map);
        }).catch(function (error) {
            console.warn('js加载失败', error);
        });
    };
    AqmComponent.prototype._updateOptions = function () {
        this.options = Object.assign({}, this.COG.mapOptions, this.options);
        if (this.map) {
            this.map.setOptions(this.options);
        }
    };
    AqmComponent.prototype.destroy = function () {
    };
    AqmComponent.prototype.ngOnDestroy = function () {
        this.destroy();
    };
    AqmComponent.decorators = [
        { type: Component, args: [{
                    selector: 'aqm-map',
                    template: "",
                    styles: ["\n        .angular-qq-maps-container { display:block; width:100%; height:100%; }\n    "],
                    host: {
                        '[class.angular-qq-maps-container]': 'true'
                    },
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    AqmComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: AqmConfig, },
        { type: LoaderService, },
        { type: NgZone, },
    ]; };
    AqmComponent.propDecorators = {
        "options": [{ type: Input },],
        "ready": [{ type: Output },],
    };
    return AqmComponent;
}());
export { AqmComponent };
//# sourceMappingURL=aqm.component.js.map