{"version":3,"file":"countdown.umd.min.js","sources":["../../__gen_lib/components/timer.ts","../../__gen_lib/components/component.ts","../../__gen_lib/ngx-countdown.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Timer {\r\n    private fns: any[] = [];\r\n    private commands: Function[] = [];\r\n    private nextTime: number;\r\n    private ing = false;\r\n\r\n    start() {\r\n        if (this.ing === true) return;\r\n\r\n        this.ing = true;\r\n        this.nextTime = +new Date();\r\n        this.process();\r\n    }\r\n\r\n    private process() {\r\n        while (this.commands.length) {\r\n            this.commands.shift()();\r\n        }\r\n        let diff = +new Date() - this.nextTime;\r\n        const count = 1 + Math.floor(diff / 100);\r\n\r\n        diff = 100 - diff % 100;\r\n        this.nextTime += 100 * count;\r\n\r\n        let frequency: number, step: number, i: number, len: number;\r\n        for (i = 0, len = this.fns.length; i < len; i += 2) {\r\n            frequency = this.fns[i + 1];\r\n\r\n            // 100/s\r\n            if (0 === frequency) {\r\n                this.fns[i](count);\r\n                // 1000/s\r\n            } else {\r\n                // 先把末位至0，再每次加2\r\n                frequency += 2 * count - 1;\r\n\r\n                step = Math.floor(frequency / 20);\r\n                if (step > 0) {\r\n                    this.fns[i](step);\r\n                }\r\n\r\n                // 把末位还原成1\r\n                this.fns[i + 1] = frequency % 20 + 1;\r\n            }\r\n        }\r\n\r\n        if (this.ing)\r\n            setTimeout(() => { this.process(); }, diff);\r\n    }\r\n\r\n    add(fn: Function, frequency: number) {\r\n        this.commands.push(() => {\r\n            this.fns.push(fn);\r\n            this.fns.push(frequency === 1000 ? 1 : 0);\r\n            this.ing = this.fns.length > 0;\r\n        });\r\n    }\r\n\r\n    remove(fn: Function) {\r\n        this.commands.push(() => {\r\n            const i = this.fns.indexOf(fn);\r\n            if (i !== -1) {\r\n                this.fns.splice(i, 2);\r\n            }\r\n            this.ing = this.fns.length > 0;\r\n        });\r\n    }\r\n}\r\n","import { Component, ElementRef, Input, Renderer, OnChanges, SimpleChanges, OnDestroy, Output, EventEmitter, OnInit, SimpleChange } from '@angular/core';\nimport { Config } from './interfaces/config';\nimport { Hand } from './interfaces/hand';\nimport { Timer } from './timer';\n\n@Component({\n    selector: 'countdown',\n    template: `<ng-content></ng-content>`,\n    styles: [ `:host { display: none; }` ],\n    host: { '[class.count-down]': 'true' }\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n\n    private frequency = 1000;\n    private _notify: any = {};\n    private hands: Hand[] = [];\n    private left = 0;\n    private paused = false;\n    /** 两种情况会触发：时间终止或调用 `stop()` */\n    private stoped = false;\n\n    @Input() config: Config;\n    @Output() start = new EventEmitter();\n    @Output() finished = new EventEmitter();\n    @Output() notify = new EventEmitter();\n    @Output() event = new EventEmitter<{ action: string, left: number }>();\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer,\n        private timer: Timer\n    ) {\n        this.timer.start();\n    }\n\n    /** 开始，当 `demand: false` 时触发 */\n    begin() {\n        this.paused = false;\n        this.start.emit();\n        this.callEvent('start');\n    }\n\n    /** 重新开始 */\n    restart(): void  {\n        if (!this.stoped) this.destroy();\n        this.init();\n        this.timer.start();\n        this.callEvent('restart');\n    }\n\n    /** 停止 */\n    stop() {\n        if (this.stoped) return;\n        this.stoped = true;\n        this.destroy();\n        this.callEvent('stop');\n    }\n\n    /** 暂停（限未终止有效） */\n    pause() {\n        if (this.stoped || this.paused) return ;\n        this.paused = true;\n        this.callEvent('pause');\n    }\n\n    /** 恢复 */\n    resume() {\n        if (this.stoped || !this.paused) return ;\n        this.paused = false;\n        this.callEvent('resume');\n    }\n\n    private mergeConfig() {\n        this.config = Object.assign(<Config>{\n            demand: false,\n            leftTime: 0,\n            template: '$!h!时$!m!分$!s!秒',\n            effect: 'normal',\n            varRegular: /\\$\\!([\\-\\w]+)\\!/g,\n            clock: ['d', 100, 2, 'h', 24, 2, 'm', 60, 2, 's', 60, 2, 'u', 10, 1]\n        }, this.config);\n    }\n\n    private callEvent(action: string) {\n        this.event.emit({ action, left: this.left });\n    }\n\n    private init() {\n        const me = this;\n        const el = me.el.nativeElement;\n        me.paused = me.config.demand;\n        me.stoped = false;\n\n        // 分析markup\n        const tmpl = el.innerHTML || me.config.template;\n        me.config.varRegular.lastIndex = 0;\n        el.innerHTML = tmpl.replace(me.config.varRegular, (str: string, type: string) => {\n            // 时钟频率校正.\n            if (type === 'u' || type === 's-ext')\n                me.frequency = 100;\n\n            // 生成hand的markup\n            let content = '';\n            if (type === 's-ext') {\n                me.hands.push({ type: 's' });\n                me.hands.push({ type: 'u' });\n                content = me.html('', 's', 'handlet') +\n                    me.html('.', '', 'digital') +\n                    me.html('', 'u', 'handlet');\n            } else {\n                me.hands.push({ type: type });\n            }\n\n            return me.html(content, type, 'hand');\n        });\n\n        const clock = me.config.clock;\n        me.hands.forEach((hand: Hand) => {\n            const type = hand.type;\n            let base = 100,\n                i: number;\n\n            hand.node = el.querySelector(`.hand-${type}`);\n            // radix, bits 初始化\n            for (i = clock.length - 3; i > -1; i -= 3) {\n                if (type === clock[i]) {\n                    break;\n                }\n\n                base *= clock[i + 1];\n            }\n            hand.base = base;\n            hand.radix = clock[i + 1];\n            hand.bits = clock[i + 2];\n        });\n\n        me.getLeft();\n        me.reflow(0, true);\n\n        // bind reflow to me\n        const _reflow = me.reflow;\n        me.reflow = (count: number = 0) => {\n            return _reflow.apply(me, [count]);\n        };\n\n        // 构建 notify\n        if (me.config.notify) {\n            me.config.notify.forEach((time: number) => {\n                if (time < 1) throw new Error(`the notify config must be a positive integer.`);\n                time = time * 1000;\n                time = time - time % me.frequency;\n                me._notify[time] = true;\n            });\n        }\n\n        me.timer.add(me.reflow, me.frequency);\n        // show\n        el.style.display = 'inline';\n\n        return me;\n    }\n\n    private destroy() {\n        this.timer.remove(this.reflow);\n        return this;\n    }\n\n    /**\n     * 更新时钟\n     */\n    private reflow(count: number = 0, force: boolean = false): void {\n        if (!force && (this.paused || this.stoped)) return ;\n        const me = this;\n        me.left = me.left - me.frequency * count;\n\n        me.hands.forEach((hand: Hand) => {\n            hand.lastValue = hand.value;\n            hand.value = Math.floor(me.left / hand.base) % hand.radix;\n        });\n\n        me.repaint();\n\n        if (me._notify[me.left]) {\n            me.notify.emit(me.left);\n            this.callEvent('notify');\n        }\n\n        if (me.left < 1) {\n            me.finished.emit(0);\n            this.stoped = true;\n            this.callEvent('finished');\n            this.destroy();\n        }\n    }\n\n    /**\n     * 重绘时钟\n     */\n    private repaint(): void {\n        const me = this;\n        if (me.config.repaint) {\n            me.config.repaint.apply(me);\n            return;\n        }\n\n        let content: string;\n\n        me.hands.forEach((hand: Hand) => {\n            if (hand.lastValue !== hand.value) {\n                content = '';\n\n                me.toDigitals(hand.value, hand.bits).forEach((digital: number) => {\n                    content += me.html(digital.toString(), '', 'digital');\n                });\n\n                hand.node.innerHTML = content;\n            }\n        });\n    }\n\n    /**\n     * 获取倒计时剩余帧数\n     */\n    private getLeft(): void {\n        let left: number = this.config.leftTime * 1000;\n        const end: number = this.config.stopTime;\n\n        if (!left && end)\n            left = end - new Date().getTime();\n\n        this.left = left - left % this.frequency;\n    }\n\n    /**\n     * 生成需要的html代码，辅助工具\n     */\n    private html(con: string, className: string, type: string): string {\n        switch (type) {\n            case 'hand':\n            case 'handlet':\n                className = type + ' hand-' + className;\n                break;\n            case 'digital':\n                if (con === '.') {\n                    className = type + ' ' + type + '-point ' + className;\n                } else {\n                    className = type + ' ' + type + '-' + con + ' ' + className;\n                }\n                break;\n        }\n        return '<span class=\"' + className + '\">' + con + '</span>';\n    }\n\n    /**\n     * 把值转换为独立的数字形式\n     */\n    private toDigitals(value: number, bits: number): number[] {\n        value = value < 0 ? 0 : value;\n        const digitals = [];\n        // 把时、分、秒等换算成数字.\n        while (bits--) {\n            digitals[bits] = value % 10;\n            value = Math.floor(value / 10);\n        }\n        return digitals;\n    }\n\n    ngOnInit() {\n        this.mergeConfig();\n        this.init();\n        if (!this.config.demand) this.begin();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n        if (!changes.config.firstChange) {\n            this.mergeConfig();\n            this.destroy().init();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './components/component';\nimport { Timer } from './components/timer';\n\n// region：export\n\nexport { Config } from './components/interfaces/config';\nexport { CountdownComponent } from './components/component';\n\n// endregion\n\n@NgModule({\n    imports:        [CommonModule],\n    providers:      [Timer],\n    declarations:   [CountdownComponent],\n    exports:        [CountdownComponent]\n})\nexport class CountdownModule {\n}\n"],"names":["Timer","this","ing","nextTime","Date","process","commands","length","shift","frequency","step","i","len","diff","count","Math","floor","fns","setTimeout","_this","fn","push","indexOf","splice","Injectable","el","renderer","timer","EventEmitter","start","CountdownComponent","paused","emit","callEvent","stoped","destroy","init","config","Object","assign","demand","leftTime","template","effect","varRegular","clock","action","event","left","me","nativeElement","tmpl","innerHTML","lastIndex","replace","str","type","content","hands","html","forEach","hand","base","node","querySelector","radix","bits","getLeft","reflow","_reflow","apply","notify","time","Error","_notify","add","style","display","remove","force","lastValue","value","repaint","finished","toDigitals","digital","toString","end","stopTime","getTime","con","className","digitals","mergeConfig","begin","changes","firstChange","Component","selector","styles","host","[class.count-down]","ElementRef","Renderer","Input","Output","NgModule","imports","CommonModule","providers","declarations","exports"],"mappings":"+SAAA,uCAIyB,iBACU,aAEjB,SAEdA,kBAAA,YACqB,IAAbC,KAAKC,MAETD,KAAKC,KAAM,EACXD,KAAKE,UAAY,IAAIC,KACrBH,KAAKI,YAGDL,+BACJ,eAAOC,KAAKK,SAASC,QACjBN,KAAKK,SAASE,OAAdP,GAEJ,IAMIQ,EAAmBC,EAAcC,EAAWC,EAN5CC,GAAQ,IAAIT,KAASH,KAAKE,SACxBW,EAAQ,EAAIC,KAAKC,MAAMH,EAAO,KAMpC,IAJAA,EAAO,IAAMA,EAAO,IACpBZ,KAAKE,UAAY,IAAMW,EAGlBH,EAAI,EAAGC,EAAMX,KAAKgB,IAAIV,OAAQI,EAAIC,EAAKD,GAAK,EAIzC,KAHJF,EAAYR,KAAKgB,IAAIN,EAAI,IAIrBV,KAAKgB,IAAIN,GAAGG,IAIZL,GAAa,EAAIK,EAAQ,EAGd,GADXJ,EAAOK,KAAKC,MAAMP,EAAY,MAE1BR,KAAKgB,IAAIN,GAAGD,GAIhBT,KAAKgB,IAAIN,EAAI,GAAKF,EAAY,GAAK,GAIvCR,KAAKC,KACLgB,WAAW,WAAQC,EAAKd,WAAcQ,IAG9Cb,gBAAA,SAAIoB,EAAcX,GAAlB,WACIR,KAAKK,SAASe,KAAK,WACfF,EAAKF,IAAII,KAAKD,GACdD,EAAKF,IAAII,KAAmB,MAAdZ,EAAqB,EAAI,GACvCU,EAAKjB,IAAwB,EAAlBiB,EAAKF,IAAIV,UAI5BP,mBAAA,SAAOoB,GAAP,WACInB,KAAKK,SAASe,KAAK,WACf,IAAMV,EAAIQ,EAAKF,IAAIK,QAAQF,IAChB,IAAPT,GACAQ,EAAKF,IAAIM,OAAOZ,EAAG,GAEvBQ,EAAKjB,IAAwB,EAAlBiB,EAAKF,IAAIV,8BAjE/BiB,iCCyBG,WACYC,EACAC,EACAC,GAFA1B,QAAAwB,EACAxB,cAAAyB,EACAzB,WAAA0B,iBAjBQ,iBACG,cACC,aACT,eACE,eAEA,aAGC,IAAIC,6BACD,IAAIA,2BACN,IAAIA,0BACL,IAAIA,eAOlB3B,KAAK0B,MAAME,eAIfC,kBAAA,WACI7B,KAAK8B,QAAS,EACd9B,KAAK4B,MAAMG,OACX/B,KAAKgC,UAAU,UAInBH,oBAAA,WACS7B,KAAKiC,QAAQjC,KAAKkC,UACvBlC,KAAKmC,OACLnC,KAAK0B,MAAME,QACX5B,KAAKgC,UAAU,YAInBH,iBAAA,WACQ7B,KAAKiC,SACTjC,KAAKiC,QAAS,EACdjC,KAAKkC,UACLlC,KAAKgC,UAAU,UAInBH,kBAAA,WACQ7B,KAAKiC,QAAUjC,KAAK8B,SACxB9B,KAAK8B,QAAS,EACd9B,KAAKgC,UAAU,WAInBH,mBAAA,YACQ7B,KAAKiC,QAAWjC,KAAK8B,SACzB9B,KAAK8B,QAAS,EACd9B,KAAKgC,UAAU,YAGXH,mCACJ7B,KAAKoC,OAASC,OAAOC,QACjBC,QAAQ,EACRC,SAAU,EACVC,SAAU,kBACVC,OAAQ,SACRC,WAAY,mBACZC,MAAO,CAAC,IAAK,IAAK,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,IACnE5C,KAAKoC,SAGJP,+BAAUgB,GACd7C,KAAK8C,MAAMf,KAAK,CAAEc,SAAQE,KAAM/C,KAAK+C,QAGjClB,4BACJ,IAAMmB,EAAKhD,KACLwB,EAAKwB,EAAGxB,GAAGyB,cACjBD,EAAGlB,OAASkB,EAAGZ,OAAOG,OACtBS,EAAGf,QAAS,EAGZ,IAAMiB,EAAO1B,EAAG2B,WAAaH,EAAGZ,OAAOK,SACvCO,EAAGZ,OAAOO,WAAWS,UAAY,EACjC5B,EAAG2B,UAAYD,EAAKG,QAAQL,EAAGZ,OAAOO,WAAY,SAACW,EAAaC,GAE/C,MAATA,GAAyB,UAATA,IAChBP,EAAGxC,UAAY,KAGnB,IAAIgD,EAAU,GAWd,MAVa,UAATD,GACAP,EAAGS,MAAMrC,KAAK,CAAEmC,KAAM,MACtBP,EAAGS,MAAMrC,KAAK,CAAEmC,KAAM,MACtBC,EAAUR,EAAGU,KAAK,GAAI,IAAK,WACvBV,EAAGU,KAAK,IAAK,GAAI,WACjBV,EAAGU,KAAK,GAAI,IAAK,YAErBV,EAAGS,MAAMrC,KAAK,CAAEmC,KAAMA,IAGnBP,EAAGU,KAAKF,EAASD,EAAM,UAGlC,IAAMX,EAAQI,EAAGZ,OAAOQ,MACxBI,EAAGS,MAAME,QAAQ,SAACC,GACd,IAEIlD,EAFE6C,EAAOK,EAAKL,KACdM,EAAO,IAKX,IAFAD,EAAKE,KAAOtC,EAAGuC,cAAc,SAASR,GAEjC7C,EAAIkC,EAAMtC,OAAS,GAAQ,EAALI,GACnB6C,IAASX,EAAMlC,GADYA,GAAK,EAKpCmD,GAAQjB,EAAMlC,EAAI,GAEtBkD,EAAKC,KAAOA,EACZD,EAAKI,MAAQpB,EAAMlC,EAAI,GACvBkD,EAAKK,KAAOrB,EAAMlC,EAAI,KAG1BsC,EAAGkB,UACHlB,EAAGmB,OAAO,GAAG,GAGb,IAAMC,EAAUpB,EAAGmB,OAmBnB,OAlBAnB,EAAGmB,OAAS,SAACtD,GACT,oBADSA,KACFuD,EAAQC,MAAMrB,EAAI,CAACnC,KAI1BmC,EAAGZ,OAAOkC,QACVtB,EAAGZ,OAAOkC,OAAOX,QAAQ,SAACY,GACtB,GAAIA,EAAO,EAAG,MAAM,IAAIC,MAAM,iDAC9BD,GAAc,IACdA,GAAcA,EAAOvB,EAAGxC,UACxBwC,EAAGyB,QAAQF,IAAQ,IAI3BvB,EAAGtB,MAAMgD,IAAI1B,EAAGmB,OAAQnB,EAAGxC,WAE3BgB,EAAGmD,MAAMC,QAAU,SAEZ5B,GAGHnB,+BAEJ,OADA7B,KAAK0B,MAAMmD,OAAO7E,KAAKmE,QAChBnE,MAMH6B,4BAAOhB,EAAmBiE,GAC9B,gBADWjE,kBAAmBiE,MACzBA,IAAU9E,KAAK8B,SAAU9B,KAAKiC,OAAnC,CACA,IAAMe,EAAKhD,KACXgD,EAAGD,KAAOC,EAAGD,KAAOC,EAAGxC,UAAYK,EAEnCmC,EAAGS,MAAME,QAAQ,SAACC,GACdA,EAAKmB,UAAYnB,EAAKoB,MACtBpB,EAAKoB,MAAQlE,KAAKC,MAAMiC,EAAGD,KAAOa,EAAKC,MAAQD,EAAKI,QAGxDhB,EAAGiC,UAECjC,EAAGyB,QAAQzB,EAAGD,QACdC,EAAGsB,OAAOvC,KAAKiB,EAAGD,MAClB/C,KAAKgC,UAAU,WAGfgB,EAAGD,KAAO,IACVC,EAAGkC,SAASnD,KAAK,GACjB/B,KAAKiC,QAAS,EACdjC,KAAKgC,UAAU,YACfhC,KAAKkC,aAOLL,+BACJ,IAMI2B,EANER,EAAKhD,KACPgD,EAAGZ,OAAO6C,QACVjC,EAAGZ,OAAO6C,QAAQZ,MAAMrB,GAM5BA,EAAGS,MAAME,QAAQ,SAACC,GACVA,EAAKmB,YAAcnB,EAAKoB,QACxBxB,EAAU,GAEVR,EAAGmC,WAAWvB,EAAKoB,MAAOpB,EAAKK,MAAMN,QAAQ,SAACyB,GAC1C5B,GAAWR,EAAGU,KAAK0B,EAAQC,WAAY,GAAI,aAG/CzB,EAAKE,KAAKX,UAAYK,MAQ1B3B,+BACJ,IAAIkB,EAAsC,IAAvB/C,KAAKoC,OAAOI,SACzB8C,EAActF,KAAKoC,OAAOmD,UAE3BxC,GAAQuC,IACTvC,EAAOuC,GAAM,IAAInF,MAAOqF,WAE5BxF,KAAK+C,KAAOA,EAAOA,EAAO/C,KAAKQ,WAM3BqB,0BAAK4D,EAAaC,EAAmBnC,GACzC,OAAQA,GACJ,IAAK,OACL,IAAK,UACDmC,EAAYnC,EAAO,SAAWmC,EAC9B,MACJ,IAAK,UAEGA,EADQ,MAARD,EACYlC,EAAO,IAAMA,EAAO,UAAYmC,EAEhCnC,EAAO,IAAMA,EAAO,IAAMkC,EAAM,IAAMC,EAI9D,MAAO,gBAAkBA,EAAY,KAAOD,EAAM,WAM9C5D,gCAAWmD,EAAef,GAC9Be,EAAQA,EAAQ,EAAI,EAAIA,EAGxB,IAFA,IAAMW,EAAW,GAEV1B,KACH0B,EAAS1B,GAAQe,EAAQ,GACzBA,EAAQlE,KAAKC,MAAMiE,EAAQ,IAE/B,OAAOW,GAGX9D,qBAAA,WACI7B,KAAK4F,cACL5F,KAAKmC,OACAnC,KAAKoC,OAAOG,QAAQvC,KAAK6F,SAGlChE,wBAAA,WACI7B,KAAKkC,WAGTL,wBAAA,SAAYiE,GACHA,EAAQ1D,OAAO2D,cAChB/F,KAAK4F,cACL5F,KAAKkC,UAAUC,6BAnR1B6D,kBAAU,CACPC,SAAU,YACVxD,SAAU,4BACVyD,OAAQ,CAAE,4BACVC,KAAM,CAAEC,qBAAsB,qDATdC,oBAAmBC,kBAG9BvG,qCAkBJwG,uBACAC,2BACAA,yBACAA,wBACAA,uECZJC,iBAAS,CACNC,QAAgB,CAACC,gBACjBC,UAAgB,CAAC7G,GACjB8G,aAAgB,CAAChF,GACjBiF,QAAgB,CAACjF"}