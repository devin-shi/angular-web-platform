import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
var NotifyPushService = (function () {
    function NotifyPushService() {
        this.permission = this.isSupported() ? Notification.permission : 'denied';
    }
    NotifyPushService.prototype.requestPermission = function () {
        var _this = this;
        if (this.isSupported())
            Notification.requestPermission(function (status) { return _this.permission = status; });
    };
    NotifyPushService.prototype.isSupported = function () {
        return 'Notification' in window;
    };
    NotifyPushService.prototype.create = function (title, options) {
        var _this = this;
        return new Observable(function (obs) {
            if (!_this.isSupported()) {
                obs.error('不支持');
                obs.complete();
            }
            if (_this.permission !== 'granted') {
                obs.error("\u7528\u6237\u672A\u6388\u6743");
                obs.complete();
            }
            var n = new Notification(title, options);
            n.onshow = function (e) { return obs.next({ notification: n, event: e }); };
            n.onclick = function (e) { return obs.next({ notification: n, event: e }); };
            n.onerror = function (e) { return obs.error({ notification: n, event: e }); };
            n.onclose = function () { return obs.complete(); };
        });
    };
    NotifyPushService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    NotifyPushService.ctorParameters = function () { return []; };
    return NotifyPushService;
}());
export { NotifyPushService };
//# sourceMappingURL=push.service.js.map