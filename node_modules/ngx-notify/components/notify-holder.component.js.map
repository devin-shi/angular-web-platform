{"version":3,"file":"notify-holder.component.js","sourceRoot":"","sources":["../../.tmp/components/notify-holder.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewEncapsulation, OnDestroy, EventEmitter, Injector } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { defaultIcons } from './interfaces/icons';\nimport { NotifyEvent } from './interfaces/notify-event.type';\nimport { HolderOptions } from './interfaces/holder.options';\nimport { Notify } from './interfaces/notify.type';\nimport { NotifyComponent } from './notify.component';\nimport { NotifyOptions } from './notify.types';\nimport { NotifyService } from './notify.service';\n\n@Component({\n    selector: 'notify-holder',\n    template: `\n    <div class=\"notifies\"\n        [ngStyle]=\"styles\"\n        [ngClass]=\"options.position\"\n        [class]=\"options.className\">\n        <notify\n            *ngFor=\"let n of notifies; let i = index\"\n            [item]=\"n\"></notify>\n    </div>\n    `,\n    styles: [\".notifies { position: fixed; } \"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NotifyHolderComponent implements OnInit, OnDestroy {\n\n    notifies: Notify[] = [];\n    options: HolderOptions;\n    styles: any = {};\n\n    private listener: Subscription;\n\n    constructor(injector: Injector) {\n        this.listener = injector.get(NotifyService).getChangeEmitter().subscribe(item => {\n            switch (item.command) {\n                case 'clear':\n                    this.notifies = [];\n                    break;\n                case 'remove':\n                    this.remove(item.id!);\n                    break;\n                case 'set':\n                    if (item.add)\n                        this.add(item.notify!);\n                    else\n                        this.defaultBehavior(item);\n                    break;\n                case 'options':\n                    this.options = Object.assign({\n                        lastOnBottom: true,\n                        minWidth: 300,\n                        maxWidth: 300,\n                        maxStack: 8,\n                        position: ['right', 'bottom'],\n                        offset: [20, 20],\n                        zIndex: 1031\n                    }, item.holderOptions!);\n                    this.styles = {\n                        'z-index': this.options.zIndex,\n                        'min-width.px': this.options.minWidth,\n                        'max-width.px': this.options.maxWidth\n                    };\n                    this.styles[this.options.position[0] + '.px'] = this.options.offset[0];\n                    this.styles[this.options.position[1] + '.px'] = this.options.offset[1];\n                    break;\n                default:\n                    this.defaultBehavior(item);\n                    break;\n            }\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    private defaultBehavior(value: NotifyEvent) {\n        this.notifies.splice(this.notifies.indexOf(value.notify), 1);\n\n        if (value.notify.onDestroy || this.options.onDestroy) {\n            const emitItem = this.getEmit(value.notify, false);\n            if (value.notify.onDestroy)\n                value.notify.onDestroy(emitItem);\n\n            if (this.options.onDestroy)\n                this.options.onDestroy(emitItem);\n        }\n    }\n\n    private getEmit(notify: Notify, to: boolean) {\n        const res: Notify = {\n            createdOn: notify.createdOn,\n            id: notify.id,\n            type: notify.type,\n            icon: notify.icon,\n            title: notify.title,\n            content: notify.content,\n            html: notify.html\n        };\n        if (!to) res.destroyedOn = new Date();\n        return res;\n    }\n\n    private remove(id: string) {\n        let index = 0,\n            item: Notify = null,\n            allow = false;\n\n        this.notifies.forEach((notify, idx) => {\n            if (notify.id === id) {\n                index = idx;\n                allow = true;\n                item = notify;\n            }\n        });\n\n        if (allow) {\n            this.notifies.splice(index, 1);\n        }\n    }\n\n    private add(item: Notify) {\n        item = Object.assign({\n            type: 'success',\n            timeout: 1000 * 3,\n            pauseOnHover: true,\n            progress: false,\n            clickToClose: true,\n            theme: 'default',\n            animate_in: 'notify-fade-in',\n            animate_out: 'notify-fade-out',\n            createdOn: new Date()\n        }, item);\n\n        if (!item.html) {\n            switch (item.theme) {\n                case 'bootstrap':\n                    item.html = `<div class=\"alert alert-{bstype}\" role=\"alert\">\n                        <strong>{title}</strong> {content}\n                    </div>`;\n                    break;\n                default:\n                    item.html = `<div class=\"notify-title\">{title}</div><div class=\"notify-content\">{content}</div><div class=\"notify-icon\">{icon}</div>`;\n                    break;\n            }\n        }\n\n        if (this.options.lastOnBottom) {\n            if (this.notifies.length >= this.options.maxStack)\n                this.notifies.splice(0, 1);\n            this.notifies.push(item);\n        } else {\n            if (this.notifies.length >= this.options.maxStack)\n                this.notifies.splice(this.notifies.length - 1, 1);\n\n            this.notifies.splice(0, 0, item);\n        }\n\n        if (item.onCreate || this.options.onCreate) {\n            const emitItem = this.getEmit(item, true);\n            if (item.onCreate)\n                item.onCreate(emitItem);\n\n            if (this.options.onCreate)\n                this.options.onCreate(emitItem);\n        }\n\n    }\n\n    ngOnDestroy(): void {\n        if (this.listener)\n            this.listener.unsubscribe();\n    }\n\n}\n"]}