{"version":3,"file":"push.service.js","sourceRoot":"","sources":["../../.tmp/components/push.service.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,UAAU,EACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;IAUzC;QACI,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,WAAW,EAAE,GAAG,YAAY,CAAC,UAAU,GAAG,QAAQ,CAAC;KAC9E;IAED,6CAAiB,GAAjB;QAAA,iBAGC;QAFG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,YAAY,CAAC,iBAAiB,CAAC,UAAC,MAAW,IAAK,OAAA,KAAI,CAAC,UAAU,GAAG,MAAM,EAAxB,CAAwB,CAAC,CAAC;KACjF;IAED,uCAAW,GAAX;QACI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC;KACnC;IAED,kCAAM,GAAN,UAAO,KAAa,EAAE,OAAoB;QAA1C,iBAqBC;QAnBG,MAAM,CAAC,IAAI,UAAU,CAAC,UAAC,GAAQ;YAE3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACtB,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjB,GAAG,CAAC,QAAQ,EAAE,CAAC;aAClB;YAED,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;gBAChC,GAAG,CAAC,KAAK,CAAC,gCAAO,CAAC,CAAC;gBACnB,GAAG,CAAC,QAAQ,EAAE,CAAC;aAClB;YAED,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE3C,CAAC,CAAC,MAAM,GAAG,UAAC,CAAM,IAAK,OAAA,GAAG,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAArC,CAAqC,CAAC;YAC7D,CAAC,CAAC,OAAO,GAAG,UAAC,CAAM,IAAK,OAAA,GAAG,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAArC,CAAqC,CAAC;YAC9D,CAAC,CAAC,OAAO,GAAG,UAAC,CAAM,IAAK,OAAA,GAAG,CAAC,KAAK,CAAC,EAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAtC,CAAsC,CAAC;YAC/D,CAAC,CAAC,OAAO,GAAG,cAAM,OAAA,GAAG,CAAC,QAAQ,EAAE,EAAd,CAAc,CAAC;SACpC,CAAC,CAAC;KACN;;gBAvCJ,UAAU;;;;4BARX;;SASa,iBAAiB","sourcesContent":["import {\n    Injectable, Optional, ComponentFactoryResolver, ApplicationRef, Injector, EmbeddedViewRef, EventEmitter\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Permission, PushNotify } from './interfaces/push.type';\n\ndeclare const Notification: any;\n\n@Injectable()\nexport class NotifyPushService {\n\n    permission: Permission;\n\n    constructor() {\n        this.permission  = this.isSupported() ? Notification.permission : 'denied';\n    }\n\n    requestPermission() {\n        if (this.isSupported())\n            Notification.requestPermission((status: any) => this.permission = status);\n    }\n\n    isSupported() {\n        return 'Notification' in window;\n    }\n\n    create(title: string, options?: PushNotify): any {\n\n        return new Observable((obs: any) => {\n\n            if (!this.isSupported()) {\n                obs.error('不支持');\n                obs.complete();\n            }\n\n            if (this.permission !== 'granted') {\n                obs.error(`用户未授权`);\n                obs.complete();\n            }\n\n            const n = new Notification(title, options);\n\n            n.onshow = (e: any) => obs.next({notification: n, event: e});\n            n.onclick = (e: any) => obs.next({notification: n, event: e});\n            n.onerror = (e: any) => obs.error({notification: n, event: e});\n            n.onclose = () => obs.complete();\n        });\n    }\n\n}\n"]}