{"version":3,"file":"abm-panorama.component.js","sourceRoot":"","sources":["../../.tmp/core/abm-panorama.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAyB,UAAU,EAAa,YAAY,EAAE,MAAM,EAAE,MAAM,EAA4B,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAG1K,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;;IAsBrC,8BAAoB,EAAc,EACtB,GAAc,EACd,MAAqB,EACrB,IAAY;QAHJ,OAAE,GAAF,EAAE,CAAY;QACtB,QAAG,GAAH,GAAG,CAAW;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,SAAI,GAAJ,IAAI,CAAQ;uBARA,EAAE;qBACR,IAAI,YAAY,EAAO;mBAEtB,IAAI;KAKM;IAE7B,uCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;KACnB;IAED,0CAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,SAAS,IAAI,OAAO,CAAC;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KACnD;IAEO,uCAAQ,GAAhB;QAAA,iBAcC;QAbG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YACpB,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACxB,IAAI,CAAC;oBACD,KAAI,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;iBACrE;gBAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;oBACV,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;iBAC/B;aACJ,CAAC,CAAC;YACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;SAC7B,CAAC,CAAC,KAAK,CAAC,UAAC,KAAY;YAClB,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACjC,CAAC,CAAA;KACL;IAEO,6CAAc,GAAtB;QACI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ;IAEO,sCAAO,GAAf;KACC;IAED,0CAAW,GAAX;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;;gBA3DJ,SAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,EAAE;oBACZ,MAAM,EAAE,CAAC,2FAER,CAAE;oBACH,IAAI,EAAE;wBACF,sCAAsC,EAAE,MAAM;qBACjD;oBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACxC;;;;gBAlBiD,UAAU;gBAInD,SAAS;gBADT,aAAa;gBAHyE,MAAM;;;4BAqBhG,KAAK;0BACL,MAAM;;+BAtBX;;SAmBa,oBAAoB","sourcesContent":["import { Component, Input, forwardRef, ViewChild, ElementRef, OnDestroy, EventEmitter, Output, NgZone, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\n\r\nimport { LoaderService } from './loader.service';\r\nimport { AbmConfig } from './abm.config';\r\n\r\ndeclare const BMap: any;\r\n\r\n@Component({\r\n    selector: 'abm-panorama',\r\n    template: ``,\r\n    styles: [`\r\n        .angular-baidu-maps-container { display:block; width:100%; height:100%; }\r\n    ` ],\r\n    host: {\r\n        '[class.angular-baidu-maps-container]': 'true'\r\n    },\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AbmPanoramaComponent implements OnChanges, OnDestroy {\r\n\r\n    @Input() options: any = {};\r\n    @Output() ready = new EventEmitter<any>();\r\n\r\n    private map: any = null;\r\n\r\n    constructor(private el: ElementRef,\r\n        private COG: AbmConfig,\r\n        private loader: LoaderService,\r\n        private zone: NgZone) { }\r\n\r\n    ngOnInit() {\r\n        this._initMap();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('options' in changes) this._updateOptions();\r\n    }\r\n\r\n    private _initMap() {\r\n        if (this.map) return;\r\n        this.loader.load().then(() => {\r\n            this.zone.runOutsideAngular(() => {\r\n                try {\r\n                    this.map = new BMap.Panorama(this.el.nativeElement, this.options);\r\n                } catch (ex) {\r\n                    console.warn('全景初始化失败', ex);\r\n                }\r\n            });\r\n            this.ready.emit(this.map);\r\n        }).catch((error: Error) => {\r\n            console.warn('js加载失败', error);\r\n        })\r\n    }\r\n\r\n    private _updateOptions() {\r\n        this.options = Object.assign({}, this.COG.panoramaOptions, this.options);\r\n        if (this.map) {\r\n            this.map.setOptions(this.options);\r\n        }\r\n    }\r\n\r\n    private destroy() {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n}\r\n"]}